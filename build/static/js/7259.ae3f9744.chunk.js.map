{"version":3,"file":"static/js/7259.ae3f9744.chunk.js","mappings":"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","sources":["components/Chats.tsx","components/Tasks.tsx","components/ThemeCustomizer/LayoutMode.tsx","components/ThemeCustomizer/LayoutTypes.tsx","components/ThemeCustomizer/LayoutColor.tsx","components/ThemeCustomizer/LayoutWidth.tsx","components/ThemeCustomizer/MenuPositions.tsx","components/ThemeCustomizer/LeftSideBarTheme.tsx","components/ThemeCustomizer/LeftSideBarType.tsx","components/ThemeCustomizer/TwoToneIcons.tsx","components/ThemeCustomizer/SidebarUserInfo.tsx","components/ThemeCustomizer/TopbarTheme.tsx","components/ThemeCustomizer/TwoColumnTheme.tsx","components/ThemeCustomizer/index.tsx","layouts/RightSidebar/data.tsx","layouts/RightSidebar/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// dummy data\nimport { ChatItemTypes } from \"../layouts/RightSidebar/data\";\n\ninterface ChatsProps {\n  chats: ChatItemTypes[];\n}\n\nconst Chats = ({ chats }: ChatsProps) => {\n  return (\n    <>\n      <form className=\"search-bar p-3\">\n        <div className=\"position-relative\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"Search...\" />\n          <span className=\"mdi mdi-magnify\"></span>\n        </div>\n      </form>\n\n      <h6 className=\"fw-medium px-3 mt-2 text-uppercase\">Group Chats</h6>\n\n      <div className=\"p-2\">\n        <Link to=\"#\" className=\"text-reset notification-item ps-3 mb-2 d-block\">\n          <i className=\"mdi mdi-checkbox-blank-circle-outline me-1 text-success\"></i>\n          <span className=\"mb-0 mt-1\">App Development</span>\n        </Link>\n        <Link to=\"#\" className=\"text-reset notification-item ps-3 mb-2 d-block\">\n          <i className=\"mdi mdi-checkbox-blank-circle-outline me-1 text-warning\"></i>\n          <span className=\"mb-0 mt-1\">Office Work</span>\n        </Link>\n        <Link to=\"#\" className=\"text-reset notification-item ps-3 mb-2 d-block\">\n          <i className=\"mdi mdi-checkbox-blank-circle-outline me-1 text-danger\"></i>\n          <span className=\"mb-0 mt-1\">Personal Group</span>\n        </Link>\n        <Link to=\"#\" className=\"text-reset notification-item ps-3 d-block\">\n          <i className=\"mdi mdi-checkbox-blank-circle-outline me-1\"></i>\n          <span className=\"mb-0 mt-1\">Freelance</span>\n        </Link>\n      </div>\n\n      <h6 className=\"fw-medium px-3 mt-2 text-uppercase\">\n        Favourites\n        <Link to=\"#\" className=\"font-18 text-danger\">\n          <i className=\"float-end mdi mdi-plus-circle\"></i>\n        </Link>\n      </h6>\n\n      <div className=\"p-2\">\n        {(\n          chats.filter((e: ChatItemTypes) => e.group === \"favourites\") || []\n        ).map((item, index) => {\n          return (\n            <Link to=\"#\" key={index} className=\"text-reset notification-item\">\n              <div className=\"d-flex align-items-start noti-user-item\">\n                <div className=\"position-relative me-2\">\n                  <img\n                    src={item.avatar}\n                    className=\"rounded-circle avatar-sm\"\n                    alt=\"\"\n                  />\n                  <i\n                    className={classNames(\n                      \"mdi mdi-circle user-status\",\n                      item.userStatus\n                    )}\n                  ></i>\n                </div>\n                <div className=\"overflow-hidden\">\n                  <h6 className=\"mt-0 mb-1 font-14\">{item.userName}</h6>\n                  <div className=\"font-13 text-muted\">\n                    <p className=\"mb-0 text-truncate\">{item.message}</p>\n                  </div>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n\n      <h6 className=\"fw-medium px-3 mt-2 text-uppercase\">\n        Other Chats\n        <Link to=\"#\" className=\"font-18 text-danger\">\n          <i className=\"float-end mdi mdi-plus-circle\"></i>\n        </Link>\n      </h6>\n\n      <div className=\"p-2 pb-4\">\n        {(chats.filter((e: ChatItemTypes) => e.group === \"other\") || []).map(\n          (item, index) => {\n            return (\n              <Link to=\"#\" key={index} className=\"text-reset notification-item\">\n                <div className=\"d-flex align-items-start noti-user-item\">\n                  <div className=\"position-relative me-2\">\n                    <img\n                      src={item.avatar}\n                      className=\"rounded-circle avatar-sm\"\n                      alt=\"\"\n                    />\n                    <i\n                      className={classNames(\n                        \"mdi mdi-circle user-status\",\n                        item.userStatus\n                      )}\n                    ></i>\n                  </div>\n                  <div className=\"overflow-hidden\">\n                    <h6 className=\"mt-0 mb-1 font-14\">{item.userName}</h6>\n                    <div className=\"font-13 text-muted\">\n                      <p className=\"mb-0 text-truncate\">{item.message}</p>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            );\n          }\n        )}\n\n        <div className=\"text-center mt-3\">\n          <Link to=\"#\" className=\"btn btn-sm btn-white\">\n            <i className=\"mdi mdi-spin mdi-loading me-2\"></i>\n            Load more\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Chats;\n","import React from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// dummy data\nimport { TasksItemTypes } from \"../layouts/RightSidebar/data\";\n\nconst Tasks = ({ tasks }: { tasks: TasksItemTypes[] }) => {\n  const workingTasks = tasks.filter((task) => task.stage === \"working\");\n  const upcomingTasks = tasks.filter((task) => task.stage === \"upcoming\");\n\n  return (\n    <>\n      <h6 className=\"fw-medium p-3 m-0 text-uppercase\">Working Tasks</h6>\n      <div className=\"px-2\">\n        {(workingTasks || []).map((item, index) => {\n          return (\n            <Link\n              key={index}\n              to=\"#\"\n              className=\"text-reset item-hovered d-block p-2\"\n            >\n              <p className=\"text-muted mb-0\">\n                {item.task}\n                <span className=\"float-end\">{item.progress}%</span>\n              </p>\n              <ProgressBar\n                now={item.progress}\n                variant={item.variant}\n                className=\"mt-2\"\n                style={{ height: \"4px\" }}\n              />\n            </Link>\n          );\n        })}\n      </div>\n\n      <h6 className=\"fw-medium px-3 mb-0 mt-4 text-uppercase\">\n        Upcoming Tasks\n      </h6>\n      <div className=\"p-2\">\n        {(upcomingTasks || []).map((item, index) => {\n          return (\n            <Link\n              key={index}\n              to=\"#\"\n              className=\"text-reset item-hovered d-block p-2\"\n            >\n              <p className=\"text-muted mb-0\">\n                {item.task}\n                <span className=\"float-end\">{item.progress}%</span>\n              </p>\n              <ProgressBar\n                now={item.progress}\n                variant={item.variant}\n                className=\"mt-2\"\n                style={{ height: \"4px\" }}\n              />\n            </Link>\n          );\n        })}\n      </div>\n\n      <div className=\"p-3 mt-2 d-grid\">\n        <Link to=\"#\" className=\"btn btn-success waves-effect waves-light\">\n          Create Task\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default Tasks;\n","import { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface LayoutTypesProps {\n  changeLayoutMode: (value: any) => void;\n  layoutMode: string;\n  layoutConstants: typeof layoutConstants.LayoutMode;\n}\n\nconst LayoutMode = ({\n  changeLayoutMode,\n  layoutMode,\n  layoutConstants,\n}: LayoutTypesProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Layout Mode</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutMode(e.target.value)}\n          name=\"layout-mode\"\n          value={layoutConstants.LAYOUT_DEFAULT}\n          id=\"default-layout-mode\"\n          checked={layoutMode === layoutConstants.LAYOUT_DEFAULT}\n        />\n        <Form.Check.Label htmlFor=\"default-layout-mode\">\n          Default Layout\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutMode(e.target.value)}\n          name=\"layout-mode\"\n          value={layoutConstants.LAYOUT_DETACHED}\n          id=\"detached-layout-mode\"\n          checked={layoutMode === layoutConstants.LAYOUT_DETACHED}\n        />\n        <Form.Check.Label htmlFor=\"detached-layout-mode\">\n          Detached Layout\n        </Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LayoutMode;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface LayoutTypesProps {\n  changeLayoutType: (value: any) => void;\n  layoutType: string;\n  layoutConstants: typeof layoutConstants.LayoutTypes;\n}\n\nconst LayoutTypes = ({\n  changeLayoutType,\n  layoutType,\n  layoutConstants,\n}: LayoutTypesProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Layout</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutType(e.target.value)}\n          name=\"layout-type\"\n          value={layoutConstants.LAYOUT_VERTICAL}\n          id=\"vertical-layout\"\n          checked={layoutType === layoutConstants.LAYOUT_VERTICAL}\n        />\n        <Form.Check.Label htmlFor=\"vertical-layout\">\n          Vertical Layout\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutType(e.target.value)}\n          name=\"layout-type\"\n          value={layoutConstants.LAYOUT_HORIZONTAL}\n          id=\"horizontal-layout\"\n          checked={layoutType === layoutConstants.LAYOUT_HORIZONTAL}\n        />\n        <Form.Check.Label htmlFor=\"horizontal-layout\">\n          Horizontal Layout\n        </Form.Check.Label>\n      </Form.Check>\n\n      {/* <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_DETACHED}\n                    id=\"detached-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_DETACHED}\n                />\n                <Form.Check.Label htmlFor=\"detached-layout\">Detached Layout</Form.Check.Label>\n            </Form.Check> */}\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutType(e.target.value)}\n          name=\"layout-type\"\n          value={layoutConstants.LAYOUT_TWO_COLUMN}\n          id=\"two-column-layout\"\n          checked={layoutType === layoutConstants.LAYOUT_TWO_COLUMN}\n        />\n        <Form.Check.Label htmlFor=\"two-column-layout\">\n          Two Column Layout\n        </Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LayoutTypes;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface LayoutColorProps {\n  changeLayoutColorScheme: (value: any) => void;\n  layoutColor: string;\n  layoutConstants: typeof layoutConstants.LayoutColor;\n}\n\nconst LayoutColor = ({\n  changeLayoutColorScheme,\n  layoutColor,\n  layoutConstants,\n}: LayoutColorProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Color Scheme</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"layout-color\"\n          id=\"light-mode-check\"\n          value={layoutConstants.LAYOUT_COLOR_LIGHT}\n          onChange={(e) => changeLayoutColorScheme(e.target.value)}\n          checked={layoutColor === layoutConstants.LAYOUT_COLOR_LIGHT}\n        />\n        <Form.Check.Label htmlFor=\"light-mode-check\">\n          Light Mode\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"layout-color\"\n          id=\"dark-mode-check\"\n          value={layoutConstants.LAYOUT_COLOR_DARK}\n          onChange={(e) => changeLayoutColorScheme(e.target.value)}\n          checked={layoutColor === layoutConstants.LAYOUT_COLOR_DARK}\n        />\n        <Form.Check.Label htmlFor=\"dark-mode-check\">Dark Mode</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LayoutColor;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface LayoutWidthProps {\n  changeWidthMode: (value: any) => void;\n  layoutWidth: string;\n  layoutConstants: typeof layoutConstants.LayoutWidth;\n}\n\nconst LayoutWidth = ({\n  changeWidthMode,\n  layoutWidth,\n  layoutConstants,\n}: LayoutWidthProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Width</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"width\"\n          id=\"fluid-check\"\n          value={layoutConstants.LAYOUT_WIDTH_FLUID}\n          onChange={(e) => changeWidthMode(e.target.value)}\n          checked={layoutWidth === layoutConstants.LAYOUT_WIDTH_FLUID}\n        />\n        <Form.Check.Label htmlFor=\"fluid-check\">Fluid</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"width\"\n          id=\"boxed-check\"\n          value={layoutConstants.LAYOUT_WIDTH_BOXED}\n          onChange={(e) => changeWidthMode(e.target.value)}\n          checked={layoutWidth === layoutConstants.LAYOUT_WIDTH_BOXED}\n        />\n        <Form.Check.Label htmlFor=\"boxed-check\">Boxed</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LayoutWidth;\n","import React from \"react\";\n// import { Form } from 'react-bootstrap';\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface MenuPositionsProps {\n  changeMenuPosition: (value: any) => void;\n  menuPosition: string;\n  layoutConstants: typeof layoutConstants.MenuPositions;\n}\n\nconst MenuPositions = ({\n  changeMenuPosition,\n  menuPosition,\n  layoutConstants,\n}: MenuPositionsProps) => {\n  return (\n    <>\n      {/* <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Menus (Leftsidebar and Topbar) Position</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"menus-position\"\n                    id=\"fixed-check\"\n                    value={layoutConstants.MENU_POSITION_FIXED}\n                    onChange={(e) => changeMenuPosition(e.target.value)}\n                    checked={menuPosition === layoutConstants.MENU_POSITION_FIXED}\n                />\n                <Form.Check.Label htmlFor=\"fixed-check\">Fixed</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"menus-position\"\n                    id=\"scrollable-check\"\n                    value={layoutConstants.MENU_POSITION_SCROLLABLE}\n                    onChange={(e) => changeMenuPosition(e.target.value)}\n                    checked={menuPosition === layoutConstants.MENU_POSITION_SCROLLABLE}\n                />\n                <Form.Check.Label htmlFor=\"scrollable-check\">Scrollable</Form.Check.Label>\n            </Form.Check> */}\n    </>\n  );\n};\n\nexport default MenuPositions;\n","import { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface LeftSideBarThemeProps {\n  changeLeftSidebarTheme: (value: any) => void;\n  leftSideBarTheme: string;\n  layoutConstants: typeof layoutConstants.SideBarTheme;\n}\n\nconst LeftSideBarTheme = ({\n  changeLeftSidebarTheme,\n  leftSideBarTheme,\n  layoutConstants,\n}: LeftSideBarThemeProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Left Sidebar Color</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"theme\"\n          id=\"light-check\"\n          value={layoutConstants.LEFT_SIDEBAR_THEME_LIGHT}\n          onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n          checked={\n            leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT\n          }\n        />\n        <Form.Check.Label htmlFor=\"light-check\">Light</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"theme\"\n          id=\"dark-check\"\n          value={layoutConstants.LEFT_SIDEBAR_THEME_DARK}\n          onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n          checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_DARK}\n        />\n        <Form.Check.Label htmlFor=\"dark-check\">Dark</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"theme\"\n          id=\"brand-check\"\n          value={layoutConstants.LEFT_SIDEBAR_THEME_BRAND}\n          onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n          checked={\n            leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_BRAND\n          }\n        />\n        <Form.Check.Label htmlFor=\"brand-check\">Brand</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"theme\"\n          id=\"gradient-check\"\n          value={layoutConstants.LEFT_SIDEBAR_THEME_GRADIENT}\n          onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n          checked={\n            leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_GRADIENT\n          }\n        />\n        <Form.Check.Label htmlFor=\"gradient-check\">Gradient</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LeftSideBarTheme;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface LeftSideBarTypeProps {\n  changeLeftSiderbarType: (value: any) => void;\n  leftSideBarType: string;\n  layoutConstants: typeof layoutConstants.SideBarTypes;\n}\n\nconst LeftSideBarType = ({\n  changeLeftSiderbarType,\n  leftSideBarType,\n  layoutConstants,\n}: LeftSideBarTypeProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Left Sidebar Size</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"default-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_DEFAULT}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={\n            leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_DEFAULT\n          }\n        />\n        <Form.Check.Label htmlFor=\"default-check\">Default</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"condensed-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={\n            leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED\n          }\n        />\n        <Form.Check.Label htmlFor=\"condensed-check\">\n          Condensed <small>(Extra Small size)</small>\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"compact-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_COMPACT}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={\n            leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_COMPACT\n          }\n        />\n        <Form.Check.Label htmlFor=\"compact-check\">\n          Compact <small>(Small size)</small>\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"full-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_FULL}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_FULL}\n        />\n        <Form.Check.Label htmlFor=\"full-check\">Full Layout</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"fullscreen-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_FULLSCREEN}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={\n            leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_FULLSCREEN\n          }\n        />\n        <Form.Check.Label htmlFor=\"fullscreen-check\">\n          Full Screen Layout\n        </Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LeftSideBarType;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\ninterface TwoToneIconsProps {\n  toggleTwoToneIconsMode: (value: any) => void;\n  showTwoToneIcons: boolean;\n}\n\nconst TwoToneIcons = ({\n  toggleTwoToneIconsMode,\n  showTwoToneIcons,\n}: TwoToneIconsProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Two Tone Icons</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"checkbox\"\n          name=\"leftsidebar-user\"\n          id=\"sidebaruser-check\"\n          onChange={(e) => toggleTwoToneIconsMode(e.target.checked)}\n          checked={showTwoToneIcons}\n        />\n        <Form.Check.Label htmlFor=\"sidebaruser-check\">Enable</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default TwoToneIcons;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\ninterface SidebarUserInfoProps {\n  toggleLeftSidebarUserInfo: (value: any) => void;\n  showSidebarUserInfo: boolean;\n}\n\nconst SidebarUserInfo = ({\n  toggleLeftSidebarUserInfo,\n  showSidebarUserInfo,\n}: SidebarUserInfoProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Sidebar User Info</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"checkbox\"\n          name=\"leftsidebar-user\"\n          id=\"sidebaruser-check\"\n          onChange={(e) => toggleLeftSidebarUserInfo(e.target.checked)}\n          checked={showSidebarUserInfo}\n        />\n        <Form.Check.Label htmlFor=\"sidebaruser-check\">Enable</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default SidebarUserInfo;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface TopbarThemeProps {\n  changeTopBarTheme: (value: any) => void;\n  topbarTheme: string;\n  layoutConstants: typeof layoutConstants.TopbarTheme;\n}\n\nconst TopbarTheme = ({\n  changeTopBarTheme,\n  topbarTheme,\n  layoutConstants,\n}: TopbarThemeProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Topbar</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"topbar-color\"\n          id=\"lighttopbar-check\"\n          value={layoutConstants.TOPBAR_THEME_LIGHT}\n          onChange={(e) => changeTopBarTheme(e.target.value)}\n          checked={topbarTheme === layoutConstants.TOPBAR_THEME_LIGHT}\n        />\n        <Form.Check.Label htmlFor=\"lighttopbar-check\">Light</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"topbar-color\"\n          id=\"darktopbar-check\"\n          value={layoutConstants.TOPBAR_THEME_DARK}\n          onChange={(e) => changeTopBarTheme(e.target.value)}\n          checked={topbarTheme === layoutConstants.TOPBAR_THEME_DARK}\n        />\n        <Form.Check.Label htmlFor=\"darktopbar-check\">Dark</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"topbar-color\"\n          id=\"brandtopbar-check\"\n          value={layoutConstants.TOPBAR_THEME_BRAND}\n          onChange={(e) => changeTopBarTheme(e.target.value)}\n          checked={topbarTheme === layoutConstants.TOPBAR_THEME_BRAND}\n        />\n        <Form.Check.Label htmlFor=\"brandtopbar-check\">Brand</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default TopbarTheme;\n","import { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface TwoColumnThemeProps {\n  changeTwoColumnTheme: (value: any) => void;\n  twoColumnTheme: string;\n  layoutConstants: typeof layoutConstants.TwoColumnTheme;\n}\n\nconst TwoColumnTheme = ({\n  changeTwoColumnTheme,\n  twoColumnTheme,\n  layoutConstants,\n}: TwoColumnThemeProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Menu Icon Color</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"twocolumn-theme\"\n          id=\"twocolumn-light-check\"\n          value={layoutConstants.TWOCOLUMN_LIGHT}\n          onChange={(e) => changeTwoColumnTheme(e.target.value)}\n          checked={twoColumnTheme === layoutConstants.TWOCOLUMN_LIGHT}\n        />\n        <Form.Check.Label htmlFor=\"twocolumn-light-check\">\n          Light\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"twocolumn-theme\"\n          id=\"twocolumn-dark-check\"\n          value={layoutConstants.TWOCOLUMN_DARK}\n          onChange={(e) => changeTwoColumnTheme(e.target.value)}\n          checked={twoColumnTheme === layoutConstants.TWOCOLUMN_DARK}\n        />\n        <Form.Check.Label htmlFor=\"twocolumn-dark-check\">Dark</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"twocolumn-theme\"\n          id=\"twocolumn-brand-check\"\n          value={layoutConstants.TWOCOLUMN_BRAND}\n          onChange={(e) => changeTwoColumnTheme(e.target.value)}\n          checked={twoColumnTheme === layoutConstants.TWOCOLUMN_BRAND}\n        />\n        <Form.Check.Label htmlFor=\"twocolumn-brand-check\">\n          Brand\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"twocolumn-theme\"\n          id=\"twocolumn-gradient-check\"\n          value={layoutConstants.TWOCOLUMN_GRADIENT}\n          onChange={(e) => changeTwoColumnTheme(e.target.value)}\n          checked={twoColumnTheme === layoutConstants.TWOCOLUMN_GRADIENT}\n        />\n        <Form.Check.Label htmlFor=\"twocolumn-gradient-check\">\n          Gradient\n        </Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default TwoColumnTheme;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// actions\nimport {\n  changeLayout,\n  changeLayoutModes,\n  changeLayoutColor,\n  changeLayoutWidth,\n  changeMenuPositions,\n  changeSidebarTheme,\n  changeSidebarType,\n  toggleSidebarUserInfo,\n  changeTopbarTheme,\n  toggleTwoToneIcons,\n  changeTwoColumnThemes,\n} from \"../../redux/actions\";\n\n// store\nimport { RootState, AppDispatch } from \"../../redux/store\";\n\n// constants\nimport * as layoutConstants from \"../../constants/layout\";\n\n// custom hook\nimport { useViewport } from \"../../hooks/useViewPort\";\n\n// components\nimport LayoutMode from \"./LayoutMode\";\nimport LayoutTypes from \"./LayoutTypes\";\nimport LayoutColor from \"./LayoutColor\";\nimport LayoutWidth from \"./LayoutWidth\";\nimport MenuPositions from \"./MenuPositions\";\nimport LeftSideBarTheme from \"./LeftSideBarTheme\";\nimport LeftSideBarType from \"./LeftSideBarType\";\nimport TwoToneIcons from \"./TwoToneIcons\";\nimport SidebarUserInfo from \"./SidebarUserInfo\";\nimport TopbarTheme from \"./TopbarTheme\";\nimport TwoColumnTheme from \"./TwoColumnTheme\";\n\nconst ThemeCustomizer = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { width } = useViewport();\n\n  const {\n    layoutMode,\n    // sidenavUser,\n    layoutColor,\n    layoutType,\n    layoutWidth,\n    menuPosition,\n    leftSideBarType,\n    leftSideBarTheme,\n    showTwoToneIcons,\n    showSidebarUserInfo,\n    topbarTheme,\n    twoColumnTheme,\n  } = useSelector((state: RootState) => ({\n    layoutMode: state.Layout.layoutMode,\n    twoColumnTheme: state.Layout.twoColumnTheme,\n    // sidenavUser: state.Layout.sidenavUser,\n    layoutColor: state.Layout.layoutColor,\n    layoutType: state.Layout.layoutType,\n    layoutWidth: state.Layout.layoutWidth,\n    menuPosition: state.Layout.menuPosition,\n    leftSideBarTheme: state.Layout.leftSideBarTheme,\n    leftSideBarType: state.Layout.leftSideBarType,\n    showTwoToneIcons: state.Layout.showTwoToneIcons,\n    showSidebarUserInfo: state.Layout.showSidebarUserInfo,\n    topbarTheme: state.Layout.topbarTheme,\n  }));\n\n  const [disableMenuPositions, setDisableMenuPositions] =\n    useState<boolean>(false);\n  // const [disableSidebarTheme, setDisableSidebarTheme] = useState<boolean>(false);\n  const [disableSidebarType, setDisableSidebarType] = useState<boolean>(false);\n  // const [disableTwoToneIcons, setDisableTwoToneIcons] = useState<boolean>(false);\n  const [disableSidebarUser, setDisableSidebarUser] = useState<boolean>(false);\n  const [disableLayoutMode, setDisableLayoutMode] = useState<boolean>(false);\n  const [showTwoColumnTheme, setShowTwoColumnTheme] = useState<boolean>(false);\n\n  /**\n   * change state based on props changes\n   */\n  const _loadStateFromProps = useCallback(() => {\n    setDisableMenuPositions(\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN\n    );\n    // setDisableSidebarTheme(layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL);\n    setDisableLayoutMode(\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL\n    );\n    setDisableSidebarType(\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL &&\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN &&\n      width > 991\n    );\n    // setDisableTwoToneIcons(layoutType === layoutConstants.LayoutTypes.LAYOUT_VERTICAL);\n    setDisableSidebarUser(\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL &&\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN &&\n      layoutMode !== layoutConstants.LayoutMode.LAYOUT_DETACHED\n    );\n    setShowTwoColumnTheme(\n      layoutType === layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN\n    );\n  }, [layoutType, width, layoutMode]);\n\n  useEffect(() => {\n    _loadStateFromProps();\n  }, [_loadStateFromProps]);\n\n  /**\n   * On layout change\n   */\n  const changeLayoutType = (value: any) => {\n    var layout = value;\n    //\n    switch (layout) {\n      case \"horizontal\":\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL));\n        break;\n      // case 'detached':\n      //   dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_DETACHED));\n      //   break;\n      case \"vertical\":\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_VERTICAL));\n        break;\n      default:\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN));\n        break;\n    }\n  };\n\n  const changeLayoutMode = (value: any) => {\n    var layout = value;\n    switch (layout) {\n      case \"fluid\":\n        dispatch(changeLayoutModes(layoutConstants.LayoutMode.LAYOUT_DEFAULT));\n        break;\n      case \"detached\":\n        dispatch(changeLayoutModes(layoutConstants.LayoutMode.LAYOUT_DETACHED));\n        break;\n      default:\n        dispatch(changeLayoutModes(layoutConstants.LayoutMode.LAYOUT_DEFAULT));\n        break;\n    }\n  };\n\n  const changeTwoColumnTheme = (value: any) => {\n    var layout = value;\n    switch (layout) {\n      case \"light\":\n        dispatch(\n          changeTwoColumnThemes(layoutConstants.TwoColumnTheme.TWOCOLUMN_LIGHT)\n        );\n        break;\n      case \"dark\":\n        dispatch(\n          changeTwoColumnThemes(layoutConstants.TwoColumnTheme.TWOCOLUMN_DARK)\n        );\n        break;\n      case \"gradient\":\n        dispatch(\n          changeTwoColumnThemes(\n            layoutConstants.TwoColumnTheme.TWOCOLUMN_GRADIENT\n          )\n        );\n        break;\n      default:\n        dispatch(\n          changeTwoColumnThemes(layoutConstants.TwoColumnTheme.TWOCOLUMN_BRAND)\n        );\n    }\n  };\n\n  /**\n   * Change the layout color\n   */\n  const changeLayoutColorScheme = (value: any) => {\n    var mode = value;\n    switch (mode) {\n      case \"dark\":\n        dispatch(\n          changeLayoutColor(layoutConstants.LayoutColor.LAYOUT_COLOR_DARK)\n        );\n        break;\n      default:\n        dispatch(\n          changeLayoutColor(layoutConstants.LayoutColor.LAYOUT_COLOR_LIGHT)\n        );\n        break;\n    }\n  };\n\n  /**\n   * Change the width mode\n   */\n  const changeWidthMode = (value: any) => {\n    var mode = value;\n\n    switch (mode) {\n      case \"boxed\":\n        dispatch(\n          changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_BOXED)\n        );\n        break;\n      default:\n        dispatch(\n          changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID)\n        );\n        break;\n    }\n  };\n\n  /*\n   * Change menus position\n   */\n  const changeMenuPosition = (value: any) => {\n    var position = value;\n\n    switch (position) {\n      case \"scrollable\":\n        dispatch(\n          changeMenuPositions(\n            layoutConstants.MenuPositions.MENU_POSITION_SCROLLABLE\n          )\n        );\n        break;\n      default:\n        dispatch(\n          changeMenuPositions(layoutConstants.MenuPositions.MENU_POSITION_FIXED)\n        );\n        break;\n    }\n  };\n\n  /**\n   * Changes the theme\n   */\n  const changeLeftSidebarTheme = (value: any) => {\n    var theme = value;\n    switch (theme) {\n      case \"dark\":\n        dispatch(\n          changeSidebarTheme(\n            layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_DARK\n          )\n        );\n        break;\n      case \"brand\":\n        dispatch(\n          changeSidebarTheme(\n            layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_BRAND\n          )\n        );\n        break;\n      case \"gradient\":\n        dispatch(\n          changeSidebarTheme(\n            layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_GRADIENT\n          )\n        );\n        break;\n      default:\n        dispatch(\n          changeSidebarTheme(\n            layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT\n          )\n        );\n        break;\n    }\n  };\n\n  /**\n   * Change the leftsiderbar type\n   */\n  const changeLeftSiderbarType = (value: any) => {\n    var type = value;\n    switch (type) {\n      case \"condensed\":\n        dispatch(\n          changeSidebarType(\n            layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED\n          )\n        );\n        break;\n      case \"compact\":\n        dispatch(\n          changeSidebarType(\n            layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT\n          )\n        );\n        break;\n      case \"full\":\n        dispatch(\n          changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_FULL)\n        );\n        break;\n      case \"fullscreen\":\n        dispatch(\n          changeSidebarType(\n            layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_FULLSCREEN\n          )\n        );\n        break;\n      default:\n        dispatch(\n          changeSidebarType(\n            layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT\n          )\n        );\n        break;\n    }\n  };\n\n  /**\n   * Toggle the two-icon-mode\n   */\n  const toggleTwoToneIconsMode = (value: any) => {\n    var checked = value;\n    dispatch(toggleTwoToneIcons(checked));\n  };\n\n  /*\n   * Toggle the leftsidebar use info\n   */\n  const toggleLeftSidebarUserInfo = (value: any) => {\n    var checked = value;\n    dispatch(toggleSidebarUserInfo(checked));\n  };\n\n  /*\n   * Change topbar theme\n   */\n  const changeTopBarTheme = (value: any) => {\n    var theme = value;\n    switch (theme) {\n      case \"light\":\n        dispatch(\n          changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT)\n        );\n        break;\n      case \"brand\":\n        dispatch(\n          changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_BRAND)\n        );\n        break;\n      default:\n        dispatch(\n          changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_DARK)\n        );\n        break;\n    }\n  };\n\n  /**\n   * Reset everything\n   */\n  const reset = () => {\n    changeLayoutMode(layoutConstants.LayoutMode.LAYOUT_DEFAULT);\n    changeTwoColumnTheme(layoutConstants.TwoColumnTheme.TWOCOLUMN_LIGHT);\n    changeLayoutType(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN);\n    changeLayoutColorScheme(layoutConstants.LayoutColor.LAYOUT_COLOR_LIGHT);\n    changeWidthMode(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID);\n    changeMenuPosition(layoutConstants.MenuPositions.MENU_POSITION_FIXED);\n    changeLeftSidebarTheme(\n      layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT\n    );\n    toggleLeftSidebarUserInfo(false);\n    toggleTwoToneIconsMode(false);\n    changeTopBarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT);\n    changeLeftSiderbarType(\n      layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <h6 className=\"fw-medium px-3 m-0 py-2 font-13 text-uppercase bg-light\">\n        <span className=\"d-block py-1\">Theme Settings</span>\n      </h6>\n      <div className=\"p-3\">\n        <div className=\"alert alert-warning\" role=\"alert\">\n          <strong>Customize </strong> the overall color scheme, sidebar menu,\n          etc.\n        </div>\n\n        {/* Layouts */}\n        <LayoutTypes\n          changeLayoutType={changeLayoutType}\n          layoutType={layoutType}\n          layoutConstants={layoutConstants.LayoutTypes}\n        />\n\n        {/* Layout Modes */}\n        {disableLayoutMode && (\n          <LayoutMode\n            changeLayoutMode={changeLayoutMode}\n            layoutMode={layoutMode}\n            layoutConstants={layoutConstants.LayoutMode}\n          />\n        )}\n\n        <LayoutColor\n          changeLayoutColorScheme={changeLayoutColorScheme}\n          layoutColor={layoutColor}\n          layoutConstants={layoutConstants.LayoutColor}\n        />\n\n        {/* Width */}\n        <LayoutWidth\n          changeWidthMode={changeWidthMode}\n          layoutWidth={layoutWidth}\n          layoutConstants={layoutConstants.LayoutWidth}\n        />\n\n        {/* Menu Posiotions */}\n        {disableMenuPositions && (\n          <MenuPositions\n            menuPosition={menuPosition}\n            changeMenuPosition={changeMenuPosition}\n            layoutConstants={layoutConstants.MenuPositions}\n          />\n        )}\n\n        {/* Left Sidebar */}\n        {/* {disableSidebarTheme && ( */}\n        <LeftSideBarTheme\n          changeLeftSidebarTheme={changeLeftSidebarTheme}\n          leftSideBarTheme={leftSideBarTheme}\n          layoutConstants={layoutConstants.SideBarTheme}\n        />\n        {/* )} */}\n\n        {/* Left Sidebar Size */}\n        {disableSidebarType && (\n          <LeftSideBarType\n            changeLeftSiderbarType={changeLeftSiderbarType}\n            leftSideBarType={leftSideBarType}\n            layoutConstants={layoutConstants.SideBarTypes}\n          />\n        )}\n\n        {showTwoColumnTheme && (\n          <TwoColumnTheme\n            changeTwoColumnTheme={changeTwoColumnTheme}\n            twoColumnTheme={twoColumnTheme}\n            layoutConstants={layoutConstants.TwoColumnTheme}\n          />\n        )}\n\n        {/* tow-tone icons */}\n        {/* {disableTwoToneIcons && ( */}\n        <TwoToneIcons\n          toggleTwoToneIconsMode={toggleTwoToneIconsMode}\n          showTwoToneIcons={showTwoToneIcons}\n        />\n        {/* )} */}\n\n        {/* Topbar */}\n        <TopbarTheme\n          changeTopBarTheme={changeTopBarTheme}\n          topbarTheme={topbarTheme}\n          layoutConstants={layoutConstants.TopbarTheme}\n        />\n\n        {/* User Info */}\n        {disableSidebarUser && (\n          <SidebarUserInfo\n            toggleLeftSidebarUserInfo={toggleLeftSidebarUserInfo}\n            showSidebarUserInfo={showSidebarUserInfo}\n          />\n        )}\n\n        <div className=\"d-grid mt-4\">\n          <button\n            className=\"btn btn-primary\"\n            id=\"resetBtn\"\n            onClick={() => reset()}\n          >\n            Reset to Default\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ThemeCustomizer;\n","import avatar1 from \"../../assets/images/users/user-10.jpg\";\nimport avatar2 from \"../../assets/images/users/user-1.jpg\";\nimport avatar3 from \"../../assets/images/users/user-9.jpg\";\nimport avatar4 from \"../../assets/images/users/user-2.jpg\";\nimport avatar5 from \"../../assets/images/users/user-4.jpg\";\nimport avatar6 from \"../../assets/images/users/user-5.jpg\";\nimport avatar7 from \"../../assets/images/users/user-6.jpg\";\nimport avatar8 from \"../../assets/images/users/user-7.jpg\";\nimport avatar9 from \"../../assets/images/users/user-8.jpg\";\n\nexport interface TasksItemTypes {\n  id: number;\n  task: string;\n  progress: number;\n  variant: string;\n  stage: string;\n}\n\nexport interface ChatItemTypes {\n  id: number;\n  avatar: string;\n  userName: string;\n  message: string;\n  userStatus: string;\n  group: string;\n}\n\nconst tasks: TasksItemTypes[] = [\n  {\n    id: 1,\n    task: \"App Development\",\n    progress: 75,\n    variant: \"success\",\n    stage: \"working\",\n  },\n  {\n    id: 2,\n    task: \"Database Repair\",\n    progress: 37,\n    variant: \"info\",\n    stage: \"working\",\n  },\n  {\n    id: 3,\n    task: \"Backup Create\",\n    progress: 52,\n    variant: \"warning\",\n    stage: \"working\",\n  },\n  {\n    id: 4,\n    task: \"Sales Reporting\",\n    progress: 12,\n    variant: \"danger\",\n    stage: \"upcoming\",\n  },\n  {\n    id: 5,\n    task: \"Redesign Website\",\n    progress: 67,\n    variant: \"primary\",\n    stage: \"upcoming\",\n  },\n  {\n    id: 6,\n    task: \"New Admin Design\",\n    progress: 84,\n    variant: \"success\",\n    stage: \"upcoming\",\n  },\n];\n\nconst chats: ChatItemTypes[] = [\n  {\n    id: 1,\n    avatar: avatar1,\n    userName: \"Andrew Mackie\",\n    message: \"It will seem like simplified English.\",\n    userStatus: \"online\",\n    group: \"favourites\",\n  },\n  {\n    id: 2,\n    avatar: avatar2,\n    userName: \"Rory Dalyell\",\n    message: \"To an English person, it will seem like simplified\",\n    userStatus: \"away\",\n    group: \"favourites\",\n  },\n  {\n    id: 3,\n    avatar: avatar3,\n    userName: \"Jaxon Dunhill\",\n    message: \"To achieve this, it would be necessary.\",\n    userStatus: \"busy\",\n    group: \"favourites\",\n  },\n  {\n    id: 4,\n    avatar: avatar4,\n    userName: \"Jackson Therry\",\n    message: \"Everyone realizes why a new common language.\",\n    userStatus: \"online\",\n    group: \"other\",\n  },\n  {\n    id: 5,\n    avatar: avatar5,\n    userName: \"Charles Deakin\",\n    message: \"The languages only differ in their grammar.\",\n    userStatus: \"away\",\n    group: \"other\",\n  },\n  {\n    id: 6,\n    avatar: avatar6,\n    userName: \"Ryan Salting\",\n    message: \"If several languages coalesce the grammar of the resulting.\",\n    userStatus: \"online\",\n    group: \"other\",\n  },\n  {\n    id: 7,\n    avatar: avatar7,\n    userName: \"Sean Howse\",\n    message: \"It will seem like simplified English.\",\n    userStatus: \"online\",\n    group: \"other\",\n  },\n  {\n    id: 8,\n    avatar: avatar8,\n    userName: \"Dean Coward\",\n    message: \"The new common language will be more simple.\",\n    userStatus: \"busy\",\n    group: \"other\",\n  },\n  {\n    id: 9,\n    avatar: avatar9,\n    userName: \"Hayley East\",\n    message: \"One could refuse to pay expensive translators.\",\n    userStatus: \"away\",\n    group: \"other\",\n  },\n];\n\nexport { tasks, chats };\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SimpleBar from \"simplebar-react\";\n\n// actions\nimport { hideRightSidebar } from \"../../redux/actions\";\n\n// store\nimport { AppDispatch, RootState } from \"../../redux/store\";\n\n// components\nimport Chats from \"../../components/Chats\";\nimport Tasks from \"../../components/Tasks\";\nimport ThemeCustomizer from \"../../components/ThemeCustomizer/\";\n\nimport { chats, tasks } from \"./data\";\n\ninterface RightSideBarProps {\n  hideRightSidebar?: () => void;\n  title?: string;\n  children?: any;\n}\n\nconst RightSideBar = (props: RightSideBarProps) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const rightBarNodeRef: any = useRef(null);\n  const [showRightSideNav, setShowRightSideNav] =\n    useState<boolean>(rightBarNodeRef);\n\n  const { isOpenRightSideBar } = useSelector((state: RootState) => ({\n    isOpenRightSideBar: state.Layout.isOpenRightSideBar,\n  }));\n\n  /**\n   * Handle the click anywhere in doc\n   */\n  const handleOtherClick = useCallback(\n    (e: any) => {\n      if (isOpenRightSideBar) {\n        if (\n          rightBarNodeRef &&\n          rightBarNodeRef.current &&\n          rightBarNodeRef.current.contains(e.target)\n        ) {\n          return;\n        } else {\n          dispatch(hideRightSidebar(), setShowRightSideNav(false));\n        }\n      }\n    },\n    [rightBarNodeRef, dispatch, isOpenRightSideBar]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleOtherClick, false);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOtherClick, false);\n    };\n  }, [handleOtherClick]);\n\n  return (\n    <React.Fragment>\n      <Offcanvas\n        className=\"right-bar\"\n        show={showRightSideNav}\n        onHide={handleOtherClick}\n        placement=\"end\"\n      >\n        <div className=\"h-100\" ref={rightBarNodeRef}>\n          <SimpleBar\n            style={{ maxHeight: \"100%\", zIndex: 10000 }}\n            // timeout={500}\n            scrollbarMaxSize={320}\n          >\n            <Tab.Container\n              id=\"left-tabs-example\"\n              defaultActiveKey=\"themecustomizer\"\n            >\n              <Nav variant=\"tabs\" className=\"nav-bordered nav-justified\">\n                <Nav.Item as=\"li\">\n                  <Nav.Link eventKey=\"chats\" className=\"py-2 cursor-pointer\">\n                    <i className=\"mdi mdi-message-text d-block font-22 my-1\"></i>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item as=\"li\">\n                  <Nav.Link eventKey=\"tasks\" className=\"py-2 cursor-pointer\">\n                    <i className=\"mdi mdi-format-list-checkbox d-block font-22 my-1\"></i>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item as=\"li\">\n                  <Nav.Link eventKey=\"themecustomizer\" className=\"py-2 cursor-pointer\" >\n                    <i className=\"mdi mdi-cog-outline d-block font-22 my-1\"></i>\n                  </Nav.Link>\n                </Nav.Item>\n              </Nav>\n\n              <Tab.Content className=\"p-0\">\n                <Tab.Pane eventKey=\"chats\">\n                  <Chats chats={chats} />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"tasks\">\n                  <Tasks tasks={tasks} />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"themecustomizer\">\n                  <ThemeCustomizer />\n                </Tab.Pane>\n              </Tab.Content>\n            </Tab.Container>\n          </SimpleBar>\n        </div>\n      </Offcanvas>\n      {/* <div className=\"rightbar-overlay\"></div> */}\n    </React.Fragment>\n  );\n};\n\nexport default RightSideBar;\n"],"names":["_ref","chats","_jsxs","_Fragment","children","_jsx","className","type","placeholder","Link","to","filter","e","group","map","item","index","src","avatar","alt","classNames","userStatus","userName","message","tasks","workingTasks","task","stage","upcomingTasks","progress","ProgressBar","now","variant","style","height","changeLayoutMode","layoutMode","layoutConstants","Form","onChange","target","value","name","LAYOUT_DEFAULT","id","checked","htmlFor","LAYOUT_DETACHED","changeLayoutType","layoutType","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_TWO_COLUMN","changeLayoutColorScheme","layoutColor","LAYOUT_COLOR_LIGHT","LAYOUT_COLOR_DARK","changeWidthMode","layoutWidth","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","changeMenuPosition","menuPosition","changeLeftSidebarTheme","leftSideBarTheme","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_THEME_BRAND","LEFT_SIDEBAR_THEME_GRADIENT","changeLeftSiderbarType","leftSideBarType","LEFT_SIDEBAR_TYPE_DEFAULT","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_COMPACT","LEFT_SIDEBAR_TYPE_FULL","LEFT_SIDEBAR_TYPE_FULLSCREEN","toggleTwoToneIconsMode","showTwoToneIcons","toggleLeftSidebarUserInfo","showSidebarUserInfo","changeTopBarTheme","topbarTheme","TOPBAR_THEME_LIGHT","TOPBAR_THEME_DARK","TOPBAR_THEME_BRAND","changeTwoColumnTheme","twoColumnTheme","TWOCOLUMN_LIGHT","TWOCOLUMN_DARK","TWOCOLUMN_BRAND","TWOCOLUMN_GRADIENT","dispatch","useDispatch","width","useViewport","_useSelector","useSelector","state","Layout","_useState","useState","_useState2","_slicedToArray","disableMenuPositions","setDisableMenuPositions","_useState3","_useState4","disableSidebarType","setDisableSidebarType","_useState5","_useState6","disableSidebarUser","setDisableSidebarUser","_useState7","_useState8","disableLayoutMode","setDisableLayoutMode","_useState9","_useState10","showTwoColumnTheme","setShowTwoColumnTheme","_loadStateFromProps","useCallback","useEffect","changeLayout","changeLayoutModes","changeTwoColumnThemes","changeLayoutColor","changeLayoutWidth","changeMenuPositions","changeSidebarTheme","changeSidebarType","toggleTwoToneIcons","toggleSidebarUserInfo","changeTopbarTheme","React","role","LayoutTypes","LayoutMode","LayoutColor","LayoutWidth","MenuPositions","LeftSideBarTheme","LeftSideBarType","TwoColumnTheme","TwoToneIcons","TopbarTheme","SidebarUserInfo","onClick","avatar1","avatar2","avatar3","avatar4","avatar5","avatar6","avatar7","avatar8","avatar9","props","rightBarNodeRef","useRef","showRightSideNav","setShowRightSideNav","isOpenRightSideBar","handleOtherClick","current","contains","hideRightSidebar","document","addEventListener","removeEventListener","Offcanvas","show","onHide","placement","ref","SimpleBar","maxHeight","zIndex","scrollbarMaxSize","Tab","defaultActiveKey","Nav","as","eventKey","Chats","Tasks","ThemeCustomizer"],"sourceRoot":""}