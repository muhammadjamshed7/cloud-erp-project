{"version":3,"file":"static/js/6529.c95df17f.chunk.js","mappings":"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","sources":["components/PageTitle.tsx","pages/uikit/Avatars.tsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">UBold</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nimport avatar2 from \"../../assets/images/users/user-2.jpg\";\nimport avatar3 from \"../../assets/images/users/user-3.jpg\";\nimport avatar4 from \"../../assets/images/users/user-4.jpg\";\nimport avatar5 from \"../../assets/images/users/user-5.jpg\";\nimport avatar6 from \"../../assets/images/users/user-6.jpg\";\nimport avatar7 from \"../../assets/images/users/user-7.jpg\";\nimport avatar8 from \"../../assets/images/users/user-8.jpg\";\n\nimport img1 from \"../../assets/images/small/img-2.jpg\";\nimport img2 from \"../../assets/images/small/img-3.jpg\";\n\nconst RoundedCircle = ({ size }: { size: string }) => {\n  return (\n    <>\n      <Col md={4}>\n        <img\n          src={avatar3}\n          alt=\"\"\n          className={classNames(\n            \"img-fluid\",\n            \"rounded-circle\",\n            \"avatar-\" + size\n          )}\n        />\n        <p>\n          <code>.avatar-{size} .rounded-circle</code>\n        </p>\n      </Col>\n    </>\n  );\n};\n\nconst Avatars = () => {\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Base UI\", path: \"/ui/avatars\" },\n          { label: \"Avatars\", path: \"/ui/avatars\", active: true },\n        ]}\n        title={\"Avatars\"}\n      />\n\n      <Row>\n        <Col xl={6}>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title\">Sizing - Images</h4>\n              <p className=\"text-muted font-14 mb-3\">\n                Create and group avatars of different sizes and shapes with the\n                css classes. Using Bootstrap's naming convention, you can\n                control size of avatar including standard avatar, or scale it up\n                to different sizes.\n              </p>\n\n              <Row>\n                <Col md={3}>\n                  <img\n                    src={avatar2}\n                    alt=\"\"\n                    className=\"img-fluid avatar-xs rounded\"\n                  />\n                  <p>\n                    <code>.avatar-xs</code>\n                  </p>\n                  <img\n                    src={avatar3}\n                    alt=\"\"\n                    className=\"img-fluid avatar-sm rounded mt-2\"\n                  />\n                  <p className=\"mb-2 mb-sm-0\">\n                    <code>.avatar-sm</code>\n                  </p>\n                </Col>\n\n                <Col md={3}>\n                  <img\n                    src={avatar4}\n                    alt=\"\"\n                    className=\"img-fluid avatar-md rounded\"\n                  />\n                  <p>\n                    <code>.avatar-md</code>\n                  </p>\n                </Col>\n\n                <Col md={3}>\n                  <img\n                    src={avatar5}\n                    alt=\"\"\n                    className=\"img-fluid avatar-lg rounded\"\n                  />\n                  <p>\n                    <code>.avatar-lg</code>\n                  </p>\n                </Col>\n\n                <Col md={3}>\n                  <img\n                    src={avatar6}\n                    alt=\"\"\n                    className=\"img-fluid avatar-xl rounded\"\n                  />\n                  <p className=\"mb-0\">\n                    <code>.avatar-xl</code>\n                  </p>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6}>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title\">Rounded Circle</h4>\n              <p className=\"text-muted font-14 mb-4\">\n                Using an additional class <code>.rounded-circle</code> in{\" \"}\n                <code>&lt;img /&gt;</code> element creates the rounded avatar.\n              </p>\n\n              <Row>\n                {[\"md\", \"lg\", \"xl\"].map((size, index) => {\n                  return <RoundedCircle key={index} size={size} />;\n                })}\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={6}>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title\">Sizing - Background Color</h4>\n              <p className=\"text-muted font-14 mb-3\">\n                Using utilities classes of background e.g. <code>bg-*</code>{\" \"}\n                allows you to have any background color as well.\n              </p>\n\n              <Row>\n                <Col md={3}>\n                  <div className=\"avatar-xs\">\n                    <span className=\"avatar-title bg-primary rounded\">xs</span>\n                  </div>\n                  <p className=\"mb-2 font-14 mt-1\">\n                    Using <code>.avatar-xs</code>\n                  </p>\n\n                  <div className=\"avatar-sm mt-3\">\n                    <span className=\"avatar-title bg-success rounded\">sm</span>\n                  </div>\n\n                  <p className=\"mb-0 font-14 mt-1\">\n                    Using <code>.avatar-sm</code>\n                  </p>\n                </Col>\n\n                <Col md={3}>\n                  <div className=\"avatar-md\">\n                    <span className=\"avatar-title bg-soft-info text-info font-20 rounded\">\n                      MD\n                    </span>\n                  </div>\n\n                  <p className=\"mb-0 font-14 mt-1\">\n                    Using <code>.avatar-md</code>\n                  </p>\n                </Col>\n\n                <Col md={3}>\n                  <div className=\"avatar-lg\">\n                    <span className=\"avatar-title bg-danger font-22 rounded\">\n                      LG\n                    </span>\n                  </div>\n\n                  <p className=\"mb-0 font-14 mt-1\">\n                    Using <code>.avatar-lg</code>\n                  </p>\n                </Col>\n\n                <Col md={3}>\n                  <div className=\"avatar-xl\">\n                    <span className=\"avatar-title bg-soft-warning text-warning font-24 rounded\">\n                      XL\n                    </span>\n                  </div>\n\n                  <p className=\"mb-0 font-14 mt-1\">\n                    Using <code>.avatar-xl</code>\n                  </p>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6}>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title\">Rounded Circle Background</h4>\n              <p className=\"text-muted font-14 mb-3\">\n                Using an additional class <code>.rounded-circle</code> in{\" \"}\n                <code>&lt;img /&gt;</code> element creates the rounded avatar.\n              </p>\n\n              <Row>\n                <Col md={4}>\n                  <div className=\"avatar-md\">\n                    <span className=\"avatar-title bg-soft-secondary text-secondary font-20 rounded-circle\">\n                      MD\n                    </span>\n                  </div>\n\n                  <p className=\"mb-0 font-14 mt-1\">\n                    Using <code>.avatar-md .rounded-circle</code>\n                  </p>\n                </Col>\n                <Col md={4}>\n                  <div className=\"avatar-lg\">\n                    <span className=\"avatar-title bg-light text-dark font-22 rounded-circle\">\n                      LG\n                    </span>\n                  </div>\n\n                  <p className=\"mb-0 font-14 mt-1\">\n                    Using <code>.avatar-lg .rounded-circle</code>\n                  </p>\n                </Col>\n                <Col md={4}>\n                  <div className=\"avatar-xl\">\n                    <span className=\"avatar-title bg-soft-primary text-primary font-24 rounded-circle\">\n                      XL\n                    </span>\n                  </div>\n\n                  <p className=\"mb-0 font-14 mt-1\">\n                    Using <code>.avatar-xl .rounded-circle</code>\n                  </p>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title\">Images Shapes</h4>\n              <p className=\"text-muted font-14 mb-3\">\n                Avatars with different sizes and shapes.\n              </p>\n\n              <Row>\n                <Col sm={2}>\n                  <img\n                    src={img1}\n                    alt=\"\"\n                    className=\"img-fluid rounded\"\n                    width=\"200\"\n                  />\n                  <p className=\"mb-0\">\n                    <code>.rounded</code>\n                  </p>\n                </Col>\n\n                <Col sm={2} className=\"text-center\">\n                  <img\n                    src={avatar5}\n                    alt=\"\"\n                    className=\"img-fluid rounded\"\n                    width=\"120\"\n                  />\n                  <p className=\"mb-0\">\n                    <code>.rounded</code>\n                  </p>\n                </Col>\n\n                <Col sm={2} className=\"text-center\">\n                  <img\n                    src={avatar7}\n                    alt=\"\"\n                    className=\"img-fluid rounded-circle\"\n                    width=\"120\"\n                  />\n                  <p className=\"mb-0\">\n                    <code>.rounded-circle</code>\n                  </p>\n                </Col>\n\n                <Col sm={2}>\n                  <img\n                    src={img2}\n                    alt=\"\"\n                    className=\"img-fluid img-thumbnail\"\n                    width=\"200\"\n                  />\n                  <p className=\"mb-0\">\n                    <code>.img-thumbnail</code>\n                  </p>\n                </Col>\n\n                <Col sm={2}>\n                  <img\n                    src={avatar8}\n                    alt=\"\"\n                    className=\"img-fluid rounded-circle img-thumbnail\"\n                    width=\"120\"\n                  />\n                  <p className=\"mb-0\">\n                    <code>.rounded-circle .img-thumbnail</code>\n                  </p>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Avatars;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","href","map","item","index","active","label","path","RoundedCircle","_ref","size","_Fragment","md","src","avatar3","alt","classNames","PageTitle","breadCrumbItems","title","xl","Card","avatar2","avatar4","avatar5","avatar6","sm","img1","width","avatar7","img2","avatar8","CardImg","React","ref","bsPrefix","variant","_ref$as","as","Component","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_objectSpread","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","arguments","length","undefined","_ref$displayName","BsComponent","_ref2","_ref2$as","Tag","resolvedPrefix","p"],"sourceRoot":""}