{"version":3,"file":"static/js/2887.9f5cf87b.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const modalManager = provided || getManager();\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth();\n  }\n\n  getElement() {\n    return document.body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth() {\n  return Math.abs(window.innerWidth - document.documentElement.clientWidth);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport const resolveContainerRef = ref => {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  ...props\n}, ref) => {\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node, isAppearing);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["activeElement","doc","ownerDocument","active","nodeName","e","body","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","manager","_excluded","useModalManager","provided","modalManager","ModalManager","modal","dialog","backdrop","Object","assign","add","remove","isTopModal","setDialogRef","useCallback","ref","setBackdropRef","Modal","forwardRef","_ref","_ref$show","show","_ref$role","role","className","style","children","_ref$backdrop","_ref$keyboard","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","_ref$autoFocus","autoFocus","_ref$enforceFocus","enforceFocus","_ref$restoreFocus","restoreFocus","restoreFocusOptions","renderDialog","_ref$renderBackdrop","renderBackdrop","props","_jsx","providedManager","containerRef","container","onShow","_ref$onHide","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","_useState","useState","_useState2","_slicedToArray","exited","setExited","lastFocusRef","useImperativeHandle","canUseDOM","handleShow","useEventCallback","removeKeydownListenerRef","listen","document","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","apply","arguments","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","dataAttr","_ref$handleContainerO","handleContainerOverflow","_ref$isRTL","isRTL","_classCallCheck","this","modals","_createClass","Math","abs","window","innerWidth","documentElement","clientWidth","_modal","containerState","overflow","paddingProp","getElement","_defineProperty","scrollBarWidth","concat","parseInt","css","setAttribute","_this","_toConsumableArray","forEach","m","removeAttribute","modalIdx","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","resolveContainerRef","nodeType","onResolved","resolvedRef","setRef","earlyRef","nextRef","hasClass","element","classList","baseVal","AbstractModalHeader","closeLabel","closeVariant","closeButton","_objectWithoutProperties","context","useContext","ModalContext","handleClick","_objectSpread","CloseButton","variant","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","_ModalManager","_inherits","_super","_createSuper","prop","adjust","actual","dataset","parseFloat","_get","_getPrototypeOf","prototype","call","marginProp","qsa","el","adjustAndStore","_this2","restore","getSharedManager","options","propTypes","PropTypes","type","classNames","fadeStyles","_fadeStyles","ENTERING","ENTERED","Fade","_ref$transitionClasse","transitionClasses","handleEnter","node","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","timeout","mountOnEnter","p"],"sourceRoot":""}