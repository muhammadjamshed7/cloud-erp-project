{"version":3,"file":"static/js/3603.d642952a.chunk.js","mappings":"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","sources":["components/Datepicker.tsx","components/FileUploader.tsx","components/PageTitle.tsx","components/VerticalForm.tsx","components/FormInput.tsx","pages/apps/Projects/ProjectForm.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface HyperDatepickerProps {\n  value: Date;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst HyperDatepicker = (props: HyperDatepickerProps) => {\n  // handle custom input\n  // ;\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput\n        inputClass={props.inputClass!}\n        value={props.value?.toDateString()}\n      />\n    ) : (\n      <DatepickerInputWithAddon\n        inputClass={props.inputClass!}\n        value={props.value?.toDateString()}\n      />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        customInput={input}\n        timeIntervals={props.tI}\n        selected={props.value}\n        value={props.value.toDateString()}\n        onChange={(date) => props.onChange(date)}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default HyperDatepicker;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport Dropzone from \"react-dropzone\";\n\ninterface FileType extends File {\n  preview?: string;\n  formattedSize?: string;\n}\n\ninterface FileUploaderProps {\n  onFileUpload?: (files: FileType[]) => void;\n  showPreview?: boolean;\n}\n\nconst FileUploader = (props: FileUploaderProps) => {\n  const [selectedFiles, setSelectedFiles] = useState<FileType[]>([]);\n\n  /**\n   * Handled the accepted files and shows the preview\n   */\n  const handleAcceptedFiles = (files: FileType[]) => {\n    var allFiles = files;\n\n    if (props.showPreview) {\n      (files || []).map((file) =>\n        Object.assign(file, {\n          preview:\n            file[\"type\"].split(\"/\")[0] === \"image\"\n              ? URL.createObjectURL(file)\n              : null,\n          formattedSize: formatBytes(file.size),\n        })\n      );\n      allFiles = [...selectedFiles];\n      allFiles.push(...files);\n      setSelectedFiles(allFiles);\n    }\n\n    if (props.onFileUpload) props.onFileUpload(allFiles);\n  };\n\n  /**\n   * Formats the size\n   */\n  const formatBytes = (bytes: number, decimals: number = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  /*\n   * Removes the selected file\n   */\n  const removeFile = (fileIndex: number) => {\n    const newFiles = [...selectedFiles];\n    newFiles.splice(fileIndex, 1);\n    setSelectedFiles(newFiles);\n    if (props.onFileUpload) props.onFileUpload(newFiles);\n  };\n\n  return (\n    <>\n      <Dropzone\n        {...props}\n        onDrop={(acceptedFiles) => handleAcceptedFiles(acceptedFiles)}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <div className=\"dropzone\">\n            <div className=\"dz-message needsclick\" {...getRootProps()}>\n              <input {...getInputProps()} />\n              <i className=\"h3 text-muted dripicons-cloud-upload\"></i>\n              <h4>Drop files here or click to upload.</h4>\n              <span className=\"text-muted font-13\">\n                (This is just a demo dropzone. Selected files are{\" \"}\n                <strong>not</strong> actually uploaded.)\n              </span>\n            </div>\n          </div>\n        )}\n      </Dropzone>\n\n      {props.showPreview && (\n        <div className=\"dropzone-previews mt-3\" id=\"uploadPreviewTemplate\">\n          {(selectedFiles || []).map((f, i) => {\n            return (\n              <Card className=\"mt-1 mb-0 shadow-none border\" key={i + \"-file\"}>\n                <div className=\"p-2\">\n                  <Row className=\"align-items-center\">\n                    {f.preview && (\n                      <Col className=\"col-auto\">\n                        <img\n                          data-dz-thumbnail=\"\"\n                          className=\"avatar-sm rounded bg-light\"\n                          alt={f.name}\n                          src={f.preview}\n                        />\n                      </Col>\n                    )}\n                    {!f.preview && (\n                      <Col className=\"col-auto\">\n                        <div className=\"avatar-sm\">\n                          <span className=\"avatar-title bg-primary rounded\">\n                            {f.type.split(\"/\")[0]}\n                          </span>\n                        </div>\n                      </Col>\n                    )}\n                    <Col className=\"ps-0\">\n                      <Link to=\"#\" className=\"text-muted fw-bold\">\n                        {f.name}\n                      </Link>\n                      <p className=\"mb-0\">\n                        <strong>{f.formattedSize}</strong>\n                      </p>\n                    </Col>\n                    <Col className=\"text-end\">\n                      <Link\n                        to=\"#\"\n                        className=\"btn btn-link btn-lg text-muted shadow-none\"\n                      >\n                        <i\n                          className=\"dripicons-cross\"\n                          onClick={() => removeFile(i)}\n                        ></i>\n                      </Link>\n                    </Col>\n                  </Row>\n                </div>\n              </Card>\n            );\n          })}\n        </div>\n      )}\n    </>\n  );\n};\n\nFileUploader.defaultProps = {\n  showPreview: true,\n};\n\nexport default FileUploader;\n","import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">UBold</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport { useForm, Resolver, SubmitHandler } from \"react-hook-form\";\n\ninterface VerticalFromProps<TFormValues> {\n  defaultValues?: any;\n  resolver?: Resolver<TFormValues>;\n  children?: any;\n  onSubmit: SubmitHandler<TFormValues>;\n  formClass?: string;\n}\n\nconst VerticalForm = <\n  TFormValues extends Record<string, any> = Record<string, any>\n>({\n  defaultValues,\n  resolver,\n  children,\n  onSubmit,\n  formClass,\n}: VerticalFromProps<TFormValues>) => {\n  /*\n   * form methods\n   */\n  const methods = useForm<TFormValues>({ defaultValues, resolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n  } = methods;\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n      {Array.isArray(children)\n        ? children.map((child) => {\n            return child.props && child.props.name\n              ? React.createElement(child.type, {\n                  ...{\n                    ...child.props,\n                    register,\n                    key: child.props.name,\n                    errors,\n                    control,\n                  },\n                })\n              : child;\n          })\n        : children}\n    </form>\n  );\n};\n\nexport default VerticalForm;\n","import React, { useState, InputHTMLAttributes } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\nimport { FieldErrors, Control } from \"react-hook-form\";\n\ninterface PasswordInputProps {\n  name: string;\n  placeholder?: string;\n  refCallback?: any;\n  errors: FieldErrors;\n  control?: Control<any>;\n  register?: any;\n  className?: string;\n}\n\n/* Password Input */\nconst PasswordInput = ({\n  name,\n  placeholder,\n  refCallback,\n  errors,\n  control,\n  register,\n  className,\n}: PasswordInputProps) => {\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  return (\n    <>\n      <InputGroup className=\"mb-0\">\n        <Form.Control\n          type={showPassword ? \"text\" : \"password\"}\n          placeholder={placeholder}\n          name={name}\n          id={name}\n          as=\"input\"\n          ref={(r: HTMLInputElement) => {\n            if (refCallback) refCallback(r);\n          }}\n          className={className}\n          isInvalid={errors && errors[name] ? true : false}\n          {...(register ? register(name) : {})}\n          autoComplete={name}\n        />\n        <div\n          className={classNames(\"input-group-text\", \"input-group-password\", {\n            \"show-password\": showPassword,\n          })}\n          data-password={showPassword ? \"true\" : \"false\"}\n        >\n          <span\n            className=\"password-eye\"\n            onClick={() => {\n              setShowPassword(!showPassword);\n            }}\n          ></span>\n        </div>\n      </InputGroup>\n    </>\n  );\n};\n\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  type?: string;\n  name: string;\n  placeholder?: string;\n  register?: any;\n  errors?: FieldErrors;\n  control?: Control<any>;\n  className?: string;\n  labelClassName?: string;\n  containerClass?: string;\n  refCallback?: any;\n  children?: any;\n  rows?: string;\n}\n\nconst FormInput = ({\n  label,\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  control,\n  className,\n  labelClassName,\n  containerClass,\n  refCallback,\n  children,\n  rows,\n  ...otherProps\n}: FormInputProps) => {\n  // handle input type\n  const comp =\n    type === \"textarea\" ? \"textarea\" : type === \"select\" ? \"select\" : \"input\";\n\n  return (\n    <>\n      {type === \"hidden\" ? (\n        <input\n          type={type}\n          name={name}\n          {...(register ? register(name) : {})}\n          {...otherProps}\n        />\n      ) : (\n        <>\n          {type === \"password\" ? (\n            <>\n              <Form.Group className={containerClass}>\n                {label ? (\n                  <>\n                    {\" \"}\n                    <Form.Label className={labelClassName}>\n                      {label}\n                    </Form.Label>{\" \"}\n                    {children}{\" \"}\n                  </>\n                ) : null}\n                <PasswordInput\n                  name={name}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors!}\n                  register={register}\n                  className={className}\n                />\n\n                {errors && errors[name] ? (\n                  <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name][\"message\"]}\n                  </Form.Control.Feedback>\n                ) : null}\n              </Form.Group>\n            </>\n          ) : (\n            <>\n              {type === \"checkbox\" || type === \"radio\" ? (\n                <>\n                  <Form.Group className={containerClass}>\n                    <Form.Check\n                      type={type}\n                      label={label}\n                      name={name}\n                      id={name}\n                      ref={(r: HTMLInputElement) => {\n                        if (refCallback) refCallback(r);\n                      }}\n                      className={className}\n                      isInvalid={errors && errors[name] ? true : false}\n                      {...(register ? register(name) : {})}\n                      {...otherProps}\n                    />\n\n                    {errors && errors[name] ? (\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors[name][\"message\"]}\n                      </Form.Control.Feedback>\n                    ) : null}\n                  </Form.Group>\n                </>\n              ) : (\n                <Form.Group className={containerClass}>\n                  {label ? (\n                    <Form.Label className={labelClassName}>{label}</Form.Label>\n                  ) : null}\n\n                  <Form.Control\n                    type={type}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as={comp}\n                    ref={(r: HTMLInputElement) => {\n                      if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    rows={rows}\n                    {...otherProps}\n                    autoComplete={name}\n                  >\n                    {children ? children : null}\n                  </Form.Control>\n\n                  {errors && errors[name] ? (\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors[name][\"message\"]}\n                    </Form.Control.Feedback>\n                  ) : null}\n                </Form.Group>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormInput;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\nimport HyperDatepicker from \"../../../components/Datepicker\";\nimport FileUploader from \"../../../components/FileUploader\";\nimport { FormInput } from \"../../../components/\";\n\nimport avatar1 from \"../../../assets/images/users/user-6.jpg\";\nimport avatar2 from \"../../../assets/images/users/user-7.jpg\";\nimport avatar3 from \"../../../assets/images/users/user-8.jpg\";\nimport avatar4 from \"../../../assets/images/users/user-9.jpg\";\nimport avatar5 from \"../../../assets/images/users/user-10.jpg\";\nimport avatar6 from \"../../../assets/images/users/user-4.jpg\";\nimport avatar7 from \"../../../assets/images/users/user-5.jpg\";\nimport avatar8 from \"../../../assets/images/users/user-1.jpg\";\n\ninterface MemberTypes {\n  value: string;\n  name: string;\n  image: string;\n}\n\nconst ProjectForm = () => {\n  const [startDate, setStartDate] = useState<Date>(new Date());\n  const [endDate, setEndDate] = useState<Date>(new Date());\n  const [teamMembers] = useState<MemberTypes[]>([\n    { value: \"Shreyu N\", name: \"Shreyu N\", image: avatar2 },\n    { value: \"Greeva N\", name: \"Greeva N\", image: avatar5 },\n    { value: \"Dhyanu B\", name: \"Dhyanu B\", image: avatar4 },\n    { value: \"Mannat B\", name: \"Mannat B\", image: avatar6 },\n    { value: \"Katu S\", name: \"Katu S\", image: avatar7 },\n    { value: \"Nik N\", name: \"Nik N\", image: avatar1 },\n    { value: \"Rik N\", name: \"Rik N\", image: avatar8 },\n  ]);\n  const [selectedTeamMembers, setSelectedTeamMembers] = useState<MemberTypes[]>(\n    [\n      { value: \"Shreyu N\", name: \"Shreyu N\", image: avatar1 },\n      { value: \"Greeva N\", name: \"Greeva N\", image: avatar2 },\n      { value: \"Dhyanu B\", name: \"Dhyanu B\", image: avatar3 },\n    ]\n  );\n\n  /*\n   *  add selected team members\n   */\n  const selectTeamMembers = (e: any) => {\n    if (e.length !== 0) {\n      const isAlreadySelected = selectedTeamMembers.filter(\n        (x) => x[\"name\"] === e[0].name\n      );\n      if (isAlreadySelected && isAlreadySelected.length === 0) {\n        setSelectedTeamMembers([...selectedTeamMembers, e[0]]);\n      }\n    }\n  };\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      name: yup.string().required(\"Please enter Project Name\"),\n    })\n  );\n\n  /*\n   * form methods\n   */\n  const methods = useForm({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n  } = methods;\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Projects\", path: \"/apps/projects/create\" },\n          {\n            label: \"Create Project\",\n            path: \"/apps/projects/create\",\n            active: true,\n          },\n        ]}\n        title={\"Create Project\"}\n      />\n\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <form onSubmit={handleSubmit(() => {})}>\n                <Row>\n                  <Col xl={6}>\n                    <FormInput\n                      name=\"name\"\n                      label=\"Project Name\"\n                      placeholder=\"Enter project name\"\n                      containerClass={\"mb-3\"}\n                      register={register}\n                      key=\"name\"\n                      errors={errors}\n                      control={control}\n                    />\n\n                    <FormInput\n                      name=\"overview\"\n                      label=\"Project Overview\"\n                      placeholder=\"Enter some brief about project..\"\n                      type=\"textarea\"\n                      rows=\"5\"\n                      containerClass={\"mb-3\"}\n                      register={register}\n                      key=\"overview\"\n                      errors={errors}\n                      control={control}\n                    />\n\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Project Privacy</label>\n                      <br />\n                      <div className=\"form-check form-check-inline\">\n                        <input\n                          type=\"radio\"\n                          id=\"customRadio1\"\n                          name=\"customRadio\"\n                          className=\"form-check-input\"\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"customRadio1\"\n                        >\n                          Private\n                        </label>\n                      </div>\n                      <div className=\"form-check form-check-inline\">\n                        <input\n                          type=\"radio\"\n                          id=\"customRadio2\"\n                          name=\"customRadio\"\n                          className=\"form-check-input\"\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"customRadio2\"\n                        >\n                          Team\n                        </label>\n                      </div>\n                      <div className=\"form-check form-check-inline\">\n                        <input\n                          type=\"radio\"\n                          id=\"customRadio3\"\n                          name=\"customRadio\"\n                          className=\"form-check-input\"\n                          defaultChecked\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"customRadio3\"\n                        >\n                          Public\n                        </label>\n                      </div>\n                    </div>\n\n                    <Row>\n                      <Col lg={6}>\n                        <Form.Group className=\"mb-3\">\n                          <Form.Label>Start Date</Form.Label>\n                          <HyperDatepicker\n                            hideAddon\n                            value={startDate}\n                            onChange={(date) => setStartDate(date)}\n                          />\n                        </Form.Group>\n                      </Col>\n                      <Col lg={6}>\n                        <Form.Group className=\"mb-3\">\n                          <Form.Label>Due Date</Form.Label>\n                          <HyperDatepicker\n                            hideAddon\n                            value={endDate}\n                            onChange={(date) => setEndDate(date)}\n                          />\n                        </Form.Group>\n                      </Col>\n                    </Row>\n\n                    <Form.Group className=\"mb-3 mt-3 mt-xl-0\">\n                      <Form.Label>Project Priority</Form.Label>\n                      <Typeahead\n                        id=\"select3\"\n                        multiple={false}\n                        options={[\n                          { id: 1, value: \"MD\", label: \"Medium\" },\n                          { id: 2, value: \"HI\", label: \"High\" },\n                          { id: 3, value: \"LW\", label: \"Low\" },\n                        ]}\n                        placeholder=\"select Team Member...\"\n                      />\n                    </Form.Group>\n\n                    <FormInput\n                      name=\"budget\"\n                      label=\"Budget\"\n                      placeholder=\"Enter project budget\"\n                      type=\"number\"\n                      containerClass={\"mb-3\"}\n                      register={register}\n                      key=\"budget\"\n                      errors={errors}\n                      control={control}\n                    />\n                  </Col>\n                  <Col xl={6}>\n                    <Form.Group className=\"my-3 mt-xl-0\">\n                      <Form.Label className=\"mb-0\">Avatar</Form.Label>\n                      <p className=\"text-muted font-14\">\n                        Recommended thumbnail size 800x400 (px).\n                      </p>\n                      <FileUploader />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>Team Members</Form.Label>\n                      <Typeahead\n                        id=\"select3\"\n                        labelKey=\"name\"\n                        multiple={false}\n                        options={teamMembers}\n                        placeholder=\"select Team Member...\"\n                        onChange={selectTeamMembers}\n                      />\n                      <div className=\"mt-2\">\n                        {(selectedTeamMembers || []).map((member, index) => {\n                          return (\n                            <OverlayTrigger\n                              key={index}\n                              placement=\"top\"\n                              overlay={\n                                <Tooltip id={member.name}>\n                                  {member.name}\n                                </Tooltip>\n                              }\n                            >\n                              <a\n                                href=\"/\"\n                                title={member.name}\n                                data-original-title=\"James Anderson\"\n                                className=\"d-inline-block me-1\"\n                              >\n                                <img\n                                  src={member.image}\n                                  className=\"rounded-circle avatar-xs\"\n                                  alt=\"friend\"\n                                />\n                              </a>\n                            </OverlayTrigger>\n                          );\n                        })}\n                      </div>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <Row className=\"mt-2\">\n                  <Col className=\"text-center\">\n                    <Button\n                      variant=\"success\"\n                      className=\"waves-effect waves-light m-1\"\n                    >\n                      <i className=\"fe-check-circle me-1\"></i> Create\n                    </Button>\n                    <Button\n                      variant=\"light\"\n                      className=\"waves-effect waves-light m-1\"\n                    >\n                      <i className=\"fe-x me-1\"></i> Cancel\n                    </Button>\n                  </Col>\n                </Row>\n              </form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default ProjectForm;\n"],"names":["DatepickerInput","forwardRef","props","ref","_jsx","type","className","classNames","inputClass","onClick","value","onChange","console","log","DatepickerInputWithAddon","_jsxs","children","readOnly","_props$value","_props$value2","input","hideAddon","toDateString","_Fragment","DatePicker","customInput","timeIntervals","tI","selected","date","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","FileUploader","_useState","useState","_useState2","_slicedToArray","selectedFiles","setSelectedFiles","formatBytes","bytes","decimals","arguments","length","undefined","dm","i","Math","floor","parseFloat","pow","toFixed","Dropzone","_objectSpread","onDrop","acceptedFiles","files","_allFiles","allFiles","showPreview","map","file","Object","assign","preview","split","URL","createObjectURL","formattedSize","size","_toConsumableArray","push","apply","onFileUpload","handleAcceptedFiles","_ref","getRootProps","getInputProps","id","f","Card","Row","Col","alt","name","src","Link","to","fileIndex","newFiles","splice","removeFile","defaultProps","Breadcrumb","href","item","index","active","label","path","defaultValues","resolver","onSubmit","formClass","methods","useForm","handleSubmit","register","control","errors","formState","noValidate","Array","isArray","child","React","key","PasswordInput","placeholder","refCallback","showPassword","setShowPassword","InputGroup","Form","as","r","isInvalid","_ref2","labelClassName","containerClass","rows","otherProps","_objectWithoutProperties","_excluded","comp","Date","startDate","setStartDate","_useState3","_useState4","endDate","setEndDate","_useState5","image","avatar2","avatar5","avatar4","avatar6","avatar7","avatar1","avatar8","teamMembers","_useState7","avatar3","_useState8","selectedTeamMembers","setSelectedTeamMembers","schemaResolver","yupResolver","yup","shape","required","PageTitle","breadCrumbItems","title","xl","FormInput","htmlFor","defaultChecked","lg","HyperDatepicker","Typeahead","multiple","options","labelKey","e","isAlreadySelected","filter","x","concat","member","OverlayTrigger","placement","overlay","Tooltip","Button","variant"],"sourceRoot":""}