{"version":3,"file":"static/js/4866.bcf488d0.chunk.js","mappings":"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","sources":["layouts/Menu.tsx","layouts/LeftSidebar.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Collapse } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\n//helpers\nimport { findAllParent, findMenuItem } from \"../helpers/menu\";\n\n// constants\nimport { MenuItemTypes } from \"../constants/menu\";\n\ninterface SubMenus {\n  item: MenuItemTypes;\n  linkClassName?: string;\n  subMenuClassNames?: string;\n  activeMenuItems?: Array<string>;\n  toggleMenu?: (item: any, status: boolean) => void;\n  className?: string;\n}\n\nconst MenuItemWithChildren = ({\n  item,\n  linkClassName,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu,\n}: SubMenus) => {\n  const [open, setOpen] = useState<boolean>(\n    activeMenuItems!.includes(item.key)\n  );\n  // ;\n\n  useEffect(() => {\n    setOpen(activeMenuItems!.includes(item.key));\n  }, [activeMenuItems, item]);\n\n  const toggleMenuItem = () => {\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return (\n    <li className={classNames(\"menu-item\", { \"menuitem-active\": open })}>\n      <Link\n        to=\"#\"\n        className={classNames(\"menu-link\", linkClassName, {\n          \"menuitem-active\": activeMenuItems!.includes(item.key)\n            ? \"active\"\n            : \"\",\n        })}\n        aria-expanded={open}\n        data-menu-key={item.key}\n        onClick={toggleMenuItem}\n      >\n        {item.icon && (\n          <span className=\"menu-icon\">\n            <FeatherIcon icon={item.icon} />{\" \"}\n          </span>\n        )}\n        <span className=\"menu-text\"> {item.label} </span>\n        {!item.badge ? (\n          <span className=\"menu-arrow\"></span>\n        ) : (\n          <span\n            className={`badge bg-${item.badge.variant} rounded-pill ms-auto`}\n          >\n            {item.badge.text}\n          </span>\n        )}\n      </Link>\n      <Collapse in={open}>\n        <div>\n          <ul className={classNames(subMenuClassNames)}>\n            {(item.children || []).map((child, i) => {\n              return (\n                <React.Fragment key={i}>\n                  {child.children ? (\n                    <>\n                      {/* parent */}\n                      <MenuItemWithChildren\n                        item={child}\n                        linkClassName={\n                          activeMenuItems!.includes(child.key) ? \"active\" : \"\"\n                        }\n                        activeMenuItems={activeMenuItems}\n                        subMenuClassNames=\"sub-menu\"\n                        toggleMenu={toggleMenu}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      {/* child */}\n                      <MenuItem\n                        item={child}\n                        className={\n                          activeMenuItems!.includes(child.key)\n                            ? \"menuitem-active\"\n                            : \"\"\n                        }\n                        linkClassName={\n                          activeMenuItems!.includes(child.key) ? \"active\" : \"\"\n                        }\n                      />\n                    </>\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </ul>\n        </div>\n      </Collapse>\n    </li>\n  );\n};\n\nconst MenuItem = ({ item, className, linkClassName }: SubMenus) => {\n  return (\n    <li className={classNames(\"menu-item\", className)}>\n      <MenuItemLink item={item} className={linkClassName} />\n    </li>\n  );\n};\n\nconst MenuItemLink = ({ item, className }: SubMenus) => {\n  return (\n    <Link\n      to={item.url!}\n      target={item.target}\n      className={classNames(\"side-nav-link-ref menu-link\", className)}\n      data-menu-key={item.key}\n    >\n      {item.icon && (\n        <span className=\"menu-icon\">\n          <FeatherIcon icon={item.icon} />{\" \"}\n        </span>\n      )}\n      <span className=\"menu-text\"> {item.label} </span>\n      {item.badge && (\n        <span className={`badge bg-${item.badge.variant} `}>\n          {item.badge.text}\n        </span>\n      )}\n    </Link>\n  );\n};\n\n/**\n * Renders the application menu\n */\ninterface AppMenuProps {\n  menuItems: MenuItemTypes[];\n}\n\nconst AppMenu = ({ menuItems }: AppMenuProps) => {\n  let location = useLocation();\n\n  const menuRef: any = useRef(null);\n\n  const [activeMenuItems, setActiveMenuItems] = useState<Array<string>>([]);\n\n  /*\n   * toggle the menus\n   */\n  const toggleMenu = (menuItem: MenuItemTypes, show: boolean) => {\n    if (show)\n      setActiveMenuItems([\n        menuItem[\"key\"],\n        ...findAllParent(menuItems, menuItem),\n      ]);\n  };\n\n  /**\n   * activate the menuitems\n   */\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById(\"main-side-menu\");\n    let matchingMenuItem = null;\n    if (div) {\n      let items: any = div.getElementsByClassName(\"side-nav-link-ref\");\n      for (let i = 0; i < items.length; ++i) {\n        let trimmedURL = location?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\");\n        if (trimmedURL === items[i]?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\")) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        const mid = matchingMenuItem.getAttribute(\"data-menu-key\");\n        const activeMt = findMenuItem(menuItems, mid);\n        if (activeMt) {\n          setActiveMenuItems([\n            activeMt[\"key\"],\n            ...findAllParent(menuItems, activeMt),\n          ]);\n        }\n      }\n    }\n  }, [location, menuItems]);\n\n  useEffect(() => {\n    activeMenu();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <ul className=\"menu\" ref={menuRef} id=\"main-side-menu\">\n        {(menuItems || []).map((item, idx) => {\n          //\n          return (\n            <React.Fragment key={idx}>\n              {item.isTitle ? (\n                <li\n                  className={classNames(\"menu-title\", {\n                    \"mt-2\": idx !== 0,\n                  })}\n                >\n                  {item.label}\n                </li>\n              ) : (\n                <>\n                  {item.children ? (\n                    <MenuItemWithChildren\n                      item={item}\n                      toggleMenu={toggleMenu}\n                      subMenuClassNames=\"sub-menu\"\n                      activeMenuItems={activeMenuItems}\n                      linkClassName=\"menu-link\"\n                    />\n                  ) : (\n                    <MenuItem\n                      item={item}\n                      linkClassName=\"menu-link\"\n                      className={\n                        activeMenuItems!.includes(item.key)\n                          ? \"menuitem-active\"\n                          : \"\"\n                      }\n                    />\n                  )}\n                </>\n              )}\n            </React.Fragment>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default AppMenu;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport SimpleBar from \"simplebar-react\";\n\nimport { getMenuItems } from \"../helpers/menu\";\n\n// store\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\n\n// constants\nimport { LayoutTypes } from \"../constants/layout\";\n\n// components\nimport AppMenu from \"./Menu\";\n\nimport profileImg from \"../assets/images/users/user-1.jpg\";\nimport logoSm from \"../assets/images/logo-sm.png\";\nimport logoDark from \"../assets/images/logo-dark.png\";\nimport logoDark2 from \"../assets/images/logo-dark-2.png\";\nimport logoLight from \"../assets/images/logo-light.png\";\nimport logoLight2 from \"../assets/images/logo-light-2.png\";\n\n/* user box */\nconst UserBox = () => {\n  // get the profilemenu\n  const ProfileMenus = [\n    {\n      label: \"My Account\",\n      icon: \"fe-user\",\n      redirectTo: \"#\",\n    },\n    {\n      label: \"Settings\",\n      icon: \"fe-settings\",\n      redirectTo: \"#\",\n    },\n    {\n      label: \"Lock Screen\",\n      icon: \"fe-lock\",\n      redirectTo: \"/auth/lock-screen\",\n    },\n    {\n      label: \"Logout\",\n      icon: \"fe-log-out\",\n      redirectTo: \"/auth/logout\",\n    },\n  ];\n\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <div className=\"user-box text-center\">\n      <img\n        src={profileImg}\n        alt=\"\"\n        title=\"Mat Helme\"\n        className=\"rounded-circle avatar-md\"\n      />\n      <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n        <Dropdown.Toggle\n          id=\"dropdown-notification\"\n          as=\"a\"\n          onClick={toggleDropdown}\n          className=\"cursor-pointer text-dark h5 mt-2 mb-1 d-block\"\n        >\n          Geneva Kennedy\n        </Dropdown.Toggle>\n        <Dropdown.Menu className=\"user-pro-dropdown\">\n          <div onClick={toggleDropdown}>\n            {(ProfileMenus || []).map((item, index) => {\n              return (\n                <Link\n                  to={item.redirectTo}\n                  className=\"dropdown-item notify-item\"\n                  key={index + \"-profile-menu\"}\n                >\n                  <i className={`${item.icon} me-1`}></i>\n                  <span>{item.label}</span>\n                </Link>\n              );\n            })}\n          </div>\n        </Dropdown.Menu>\n      </Dropdown>\n      <p className=\"text-muted\">Admin Head</p>\n    </div>\n  );\n};\n\n/* sidebar content */\nconst SideBarContent = () => {\n  return (\n    <>\n      <UserBox />\n\n      {/* <div id=\"sidebar-menu\"> */}\n      <AppMenu menuItems={getMenuItems()} />\n      {/* </div> */}\n\n      <div className=\"clearfix\" />\n    </>\n  );\n};\n\ninterface LeftSidebarProps {\n  isCondensed: boolean;\n  hideLogo?: boolean;\n}\n\nconst LeftSidebar = ({ isCondensed, hideLogo }: LeftSidebarProps) => {\n  const menuNodeRef: any = useRef(null);\n\n  const { layoutType } = useSelector((state: RootState) => ({\n    layoutType: state.Layout.layoutType,\n    leftSideBarType: state.Layout.leftSideBarType,\n  }));\n\n  /**\n   * Handle the click anywhere in doc\n   */\n  const handleOtherClick = (e: any) => {\n    if (\n      menuNodeRef &&\n      menuNodeRef.current &&\n      menuNodeRef.current.contains(e.target)\n    )\n      return;\n    // else hide the menubar\n    if (document.body) {\n      document.body.classList.remove(\"sidebar-enable\");\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleOtherClick, false);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOtherClick, false);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"app-menu\" ref={menuNodeRef}>\n        {!hideLogo && (\n          <div className=\"logo-box\">\n            <Link to=\"/\" className=\"logo logo-dark text-center\">\n              <span className=\"logo-sm\">\n                <img src={logoSm} alt=\"\" height=\"22\" />\n              </span>\n              <span className=\"logo-lg\">\n                <img\n                  src={\n                    layoutType === LayoutTypes.LAYOUT_TWO_COLUMN\n                      ? logoDark2\n                      : logoDark\n                  }\n                  alt=\"\"\n                  height=\"20\"\n                />\n              </span>\n            </Link>\n            <Link to=\"/\" className=\"logo logo-light text-center\">\n              <span className=\"logo-sm\">\n                <img src={logoSm} alt=\"\" height=\"22\" />\n              </span>\n              <span className=\"logo-lg\">\n                <img\n                  src={\n                    layoutType === LayoutTypes.LAYOUT_TWO_COLUMN\n                      ? logoLight2\n                      : logoLight\n                  }\n                  alt=\"\"\n                  height=\"20\"\n                />\n              </span>\n            </Link>\n          </div>\n        )}\n\n        {!isCondensed && (\n          <SimpleBar className=\"scrollbar show h-100\" scrollbarMaxSize={320} >\n            <SideBarContent />\n          </SimpleBar>\n        )}\n        {isCondensed && <SideBarContent />}\n      </div>\n    </React.Fragment>\n  );\n};\n\nLeftSidebar.defaultProps = {\n  isCondensed: false,\n};\n\nexport default LeftSidebar;\n"],"names":["MenuItemWithChildren","_ref","item","linkClassName","subMenuClassNames","activeMenuItems","toggleMenu","_useState","useState","includes","key","_useState2","_slicedToArray","open","setOpen","useEffect","_jsxs","className","classNames","children","Link","to","onClick","status","icon","_jsx","FeatherIcon","label","badge","concat","variant","text","Collapse","in","map","child","i","React","_Fragment","MenuItem","_ref2","MenuItemLink","_ref3","url","target","_ref4","menuItems","location","useLocation","menuRef","useRef","_useState3","_useState4","setActiveMenuItems","menuItem","show","_toConsumableArray","findAllParent","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByClassName","length","_location$pathname","_items$i","_items$i$pathname","pathname","replaceAll","process","mid","getAttribute","activeMt","findMenuItem","ref","id","idx","isTitle","UserBox","dropdownOpen","setDropdownOpen","toggleDropdown","src","profileImg","alt","title","Dropdown","onToggle","as","redirectTo","index","SideBarContent","AppMenu","getMenuItems","LeftSidebar","isCondensed","hideLogo","menuNodeRef","layoutType","useSelector","state","Layout","leftSideBarType","handleOtherClick","e","current","contains","body","classList","remove","addEventListener","removeEventListener","logoSm","height","LayoutTypes","logoDark2","logoDark","logoLight2","logoLight","SimpleBar","scrollbarMaxSize","defaultProps"],"sourceRoot":""}