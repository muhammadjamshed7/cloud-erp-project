{"version":3,"file":"static/js/855.29c602ae.chunk.js","mappings":"uKA8CA,IA7BkB,SAACA,GACjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAC,UACFF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAAD,UACFE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBH,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBH,UAC/BE,EAAAA,EAAAA,MAACE,EAAAA,EAAU,CAACD,UAAU,MAAKH,SAAA,EACzBF,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,KAAe,CAACC,KAAK,IAAGL,SAAC,WAExBH,EAAuB,iBAAK,IAAIS,KAAI,SAACC,EAAMC,GAC3C,OAAOD,EAAKE,QACVX,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,KAAe,CAACK,QAAM,EAAAT,SACpBO,EAAKG,OADqBF,IAI7BV,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,KAAe,CAAaC,KAAME,EAAKI,KAAKX,SAC1CO,EAAKG,OADcF,EAI1B,UAGJV,EAAAA,EAAAA,KAAA,MAAIK,UAAU,aAAYH,SAAEH,EAAa,cAKnD,C,oIC8NA,UA9OgB,WACd,IAAAe,GAAmBC,EAAAA,EAAAA,UAAiB,iBAA7BC,GAA6CC,EAAAA,EAAAA,GAAAH,EAAA,GAArC,GACfI,GAAgBH,EAAAA,EAAAA,UACd,uLADKI,GAENF,EAAAA,EAAAA,GAAAC,EAAA,GAFW,GAGZE,GAAqBL,EAAAA,EAAAA,UAAiB,gBAA/BM,GAA8CJ,EAAAA,EAAAA,GAAAG,EAAA,GAApC,GACjBE,GAAuBP,EAAAA,EAAAA,UAAiB,UAAjCQ,GAA0CN,EAAAA,EAAAA,GAAAK,EAAA,GAA9B,GACnBE,GAAmBT,EAAAA,EAAAA,UAAiB,UAA7BU,GAAsCR,EAAAA,EAAAA,GAAAO,EAAA,GAA9B,GACfE,GAA0BX,EAAAA,EAAAA,UAAkB,CAC1CY,OAAQ,gBACRC,OAAQ,4BACRC,KAAM,gBACNC,MAAO,KACPC,IAAK,MACLC,MAAO,mBANFC,GAOLhB,EAAAA,EAAAA,GAAAS,EAAA,GAPoB,GAQtBQ,GAA2BnB,EAAAA,EAAAA,UAAkB,CAC3CY,OAAQ,gBACRC,OAAQ,4BACRC,KAAM,gBACNC,MAAO,KACPC,IAAK,MACLC,MAAO,mBANFG,GAOLlB,EAAAA,EAAAA,GAAAiB,EAAA,GAPqB,GAQvBE,GAAgBrB,EAAAA,EAAAA,UAAkB,CAChC,CACEsB,GAAI,EACJC,KAAM,aACNC,YAAa,sCACbC,KAAM,GACNC,SAAU,MACVC,MAAO,WAET,CACEL,GAAI,EACJC,KAAM,uBACNC,YAAa,0CACbC,KAAM,MACNC,SAAU,MACVC,MAAO,cAfJC,GAiBL1B,EAAAA,EAAAA,GAAAmB,EAAA,GAjBU,GAkBZQ,GAAoB7B,EAAAA,EAAAA,UAAiB,YAA9B8B,GAAyC5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAhC,GAChBE,GAAc/B,EAAAA,EAAAA,UAAiB,WAAxBgC,GAAkC9B,EAAAA,EAAAA,GAAA6B,EAAA,GAA/B,GACVE,GAAgBjC,EAAAA,EAAAA,UAAiB,YAA1B2B,GAAqCzB,EAAAA,EAAAA,GAAA+B,EAAA,GAAhC,GAEZ,OACE5C,EAAAA,EAAAA,MAAC6C,EAAAA,SAAc,CAAA/C,SAAA,EACbF,EAAAA,EAAAA,KAACkD,EAAAA,EAAS,CACRC,gBAAiB,CACf,CAAEvC,MAAO,cAAeC,KAAM,kBAC9B,CAAED,MAAO,UAAWC,KAAM,iBAAkBF,QAAQ,IAEtDyC,MAAO,aAGTpD,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAC,UACFF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAAD,UACFF,EAAAA,EAAAA,KAACqD,EAAAA,EAAI,CAAAnD,UACHE,EAAAA,EAAAA,MAACiD,EAAAA,EAAAA,KAAS,CAAAnD,SAAA,EACRE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUH,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,cAAaH,UAC1BE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWH,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iBAAgBH,UAC7BF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,UAASH,UACvBF,EAAAA,EAAAA,KAAA,OAAKsD,IAAKC,EAAUC,IAAI,GAAGC,OAAO,YAGtCzD,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kBAAiBH,UAC9BF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,UAASH,UACvBF,EAAAA,EAAAA,KAAA,OAAKsD,IAAKI,EAAWF,IAAI,GAAGC,OAAO,iBAK3CzD,EAAAA,EAAAA,KAAA,OAAKK,UAAU,YAAWH,UACxBF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,mBAAkBH,SAAC,kBAIrCE,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAAAC,SAAA,EACFF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACwD,GAAI,EAAEzD,UACTE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMH,SAAA,EACnBF,EAAAA,EAAAA,KAAA,KAAAE,UACEE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAG,UAAQc,QAEbhB,EAAAA,EAAAA,KAAA,KAAGK,UAAU,aAAYH,SAAEiB,UAI/BnB,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACwD,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAI3D,UAC9BE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBH,SAAA,EAC7BE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,kBAAuB,KAC/BE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAWH,SAAA,CACxB,IAAI,gBACemB,EAAY,WAGpCjB,EAAAA,EAAAA,MAAA,KAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,oBAAyB,KACjCE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAWH,SAAA,CACxB,KACDF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,kBAAiBH,SAAEqB,WAGvCnB,EAAAA,EAAAA,MAAA,KAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,kBACRE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAWH,SAAA,CACxB,KACDF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,YAAWH,SAAEuB,mBAOvCrB,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAACI,UAAU,OAAMH,SAAA,EACnBE,EAAAA,EAAAA,MAACD,EAAAA,EAAG,CAAC2D,GAAI,EAAE5D,SAAA,EACTF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBACJE,EAAAA,EAAAA,MAAA,WAAAF,SAAA,CACG+B,EAAgBN,QACjB3B,EAAAA,EAAAA,KAAA,SACCiC,EAAgBL,QACjB5B,EAAAA,EAAAA,KAAA,SACCiC,EAAgBJ,KAAK,KAAGI,EAAgBH,MAAO,IAC/CG,EAAgBF,KACjB/B,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAMoD,MAAM,QAAOlD,SAAC,OAAS,IAAE+B,EAAgBD,aAGnD5B,EAAAA,EAAAA,MAACD,EAAAA,EAAG,CAAC2D,GAAI,EAAE5D,SAAA,EACTF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJE,EAAAA,EAAAA,MAAA,WAAAF,SAAA,CACGiC,EAAiBR,QAClB3B,EAAAA,EAAAA,KAAA,SACCmC,EAAiBP,QAClB5B,EAAAA,EAAAA,KAAA,SACCmC,EAAiBN,KAAK,KAAGM,EAAiBL,MAAO,IACjDK,EAAiBJ,KAClB/B,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAMoD,MAAM,QAAOlD,SAAC,OAAS,IAAEiC,EAAiBH,gBAKtDhC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAC,UACFF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC4D,GAAI,GAAG7D,UACVF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBH,UAC/BE,EAAAA,EAAAA,MAAA,SAAOC,UAAU,4BAA2BH,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,SAAAE,UACEE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,OACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAIgE,MAAO,CAAEC,MAAO,OAAQ/D,SAAC,WAC7BF,EAAAA,EAAAA,KAAA,MAAIgE,MAAO,CAAEC,MAAO,OAAQ/D,SAAC,gBAC7BF,EAAAA,EAAAA,KAAA,MAAIgE,MAAO,CAAEC,MAAO,OAAS5D,UAAU,WAAUH,SAAC,gBAKtDF,EAAAA,EAAAA,KAAA,SAAAE,UACIyC,GAAS,IAAInC,KAAI,SAACC,EAAMyD,GACxB,OACE9D,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKgE,EAAM,KACX9D,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAIO,EAAK6B,OAAS,KAACtC,EAAAA,EAAAA,KAAA,SAClBS,EAAK8B,gBAERvC,EAAAA,EAAAA,KAAA,MAAAE,SAAKO,EAAK+B,QACVxC,EAAAA,EAAAA,KAAA,MAAAE,SAAKO,EAAKgC,YACVzC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,WAAUH,SAAEO,EAAKiC,UARxBwB,EAWb,gBAOV9D,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAAAC,SAAA,EACFF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2D,GAAI,EAAE5D,UACTE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeH,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,aAAYH,SAAC,YAC3BF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,aAAYH,SAAC,mSAUlCE,EAAAA,EAAAA,MAACD,EAAAA,EAAG,CAAC2D,GAAI,EAAE5D,SAAA,EACTE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWH,SAAA,EACxBE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,eAAe,KAClBF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,YAAWH,SAAE2C,QAE/BzC,EAAAA,EAAAA,MAAA,KAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,oBAAoB,KACvBE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAWH,SAAA,CACxB,IAAI,gBACe6C,SAGxB3C,EAAAA,EAAAA,MAAA,MAAAF,SAAA,CAAKwC,EAAM,cAEb1C,EAAAA,EAAAA,KAAA,OAAKK,UAAU,oBAInBL,EAAAA,EAAAA,KAAA,OAAKK,UAAU,YAAWH,UACxBE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBH,SAAA,EACpCE,EAAAA,EAAAA,MAAA,UACEC,UAAU,gDACV8D,QAAS,SAACC,GACRC,OAAOC,OACT,EAAEpE,SAAA,EAEFF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,yBAA2B,aAE1CL,EAAAA,EAAAA,KAAA,UAAQK,UAAU,wCAAuCH,SAAC,2BAW5E,C,qMCpQMqE,EAAuBtB,EAAAA,YAC7B,SAAAuB,EAMGC,GAAQ,IALTC,EAAQF,EAARE,SACArE,EAASmE,EAATnE,UACAsE,EAAOH,EAAPG,QAAOC,EAAAJ,EACPK,GAAIC,OAAS,IAAAF,EAAG,MAAKA,EAClB7E,GAAKgF,EAAAA,EAAAA,GAAAP,EAAAQ,GAEFC,GAASC,EAAAA,EAAAA,IAAmBR,EAAU,YAC5C,OAAoB1E,EAAAA,EAAAA,KAAK8E,GAASK,EAAAA,EAAAA,GAAA,CAChCV,IAAKA,EACLpE,UAAW+E,IAAWT,EAAU,GAAHU,OAAMJ,EAAM,KAAAI,OAAIV,GAAYM,EAAQ5E,IAC9DN,GAEP,IACAwE,EAAQe,YAAc,UACtB,Q,2CCdMC,EAA0BtC,EAAAA,YAAiB,SAAAuB,EAM9CC,GAAQ,IALTC,EAAQF,EAARE,SACArE,EAASmE,EAATnE,UAASuE,EAAAJ,EAETK,GAAIC,OAAS,IAAAF,EAAG,MAAKA,EAClB7E,GAAKgF,EAAAA,EAAAA,GAAAP,EAAAQ,GAEFC,GAASC,EAAAA,EAAAA,IAAmBR,EAAU,eACtCc,GAAeC,EAAAA,EAAAA,UAAQ,iBAAO,CAClCC,mBAAoBT,EACrB,GAAG,CAACA,IACL,OAAoBjF,EAAAA,EAAAA,KAAK2F,EAAAA,EAAAA,SAA4B,CACnDC,MAAOJ,EACPtF,UAAuBF,EAAAA,EAAAA,KAAK8E,GAASK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACnCV,IAAKA,GACF1E,GAAK,IACRM,UAAW+E,IAAW/E,EAAW4E,OAGvC,IACAM,EAAWD,YAAc,aACzB,Q,uECnBMO,GAAgBC,EAAAA,EAAAA,GAAiB,MACjCC,GAAgBD,EAAAA,EAAAA,GAAiB,MACjCE,GAAWC,EAAAA,EAAAA,GAAmB,aAC9BC,GAAYD,EAAAA,EAAAA,GAAmB,aAAc,CACjDnB,UAAWe,IAEPM,GAAeF,EAAAA,EAAAA,GAAmB,gBAAiB,CACvDnB,UAAWiB,IAEPK,GAAWH,EAAAA,EAAAA,GAAmB,YAAa,CAC/CnB,UAAW,MAEPuB,GAAWJ,EAAAA,EAAAA,GAAmB,YAAa,CAC/CnB,UAAW,MAEPwB,GAAaL,EAAAA,EAAAA,GAAmB,eAChCM,GAAiBN,EAAAA,EAAAA,GAAmB,oBAIpC5C,EAAoBJ,EAAAA,YAAiB,SAAAuB,EAWxCC,GAAQ,IAVTC,EAAQF,EAARE,SACArE,EAASmE,EAATnE,UACAmG,EAAEhC,EAAFgC,GACAC,EAAIjC,EAAJiC,KACAC,EAAMlC,EAANkC,OACAC,EAAInC,EAAJmC,KACAzG,EAAQsE,EAARtE,SAAQ0E,EAAAJ,EAERK,GAAIC,OAAS,IAAAF,EAAG,MAAKA,EAClB7E,GAAKgF,EAAAA,EAAAA,GAAAP,EAAAQ,GAEFC,GAASC,EAAAA,EAAAA,IAAmBR,EAAU,QAC5C,OAAoB1E,EAAAA,EAAAA,KAAK8E,GAASK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAChCV,IAAKA,GACF1E,GAAK,IACRM,UAAW+E,IAAW/E,EAAW4E,EAAQuB,GAAM,MAAJnB,OAAUmB,GAAMC,GAAQ,QAAJpB,OAAYoB,GAAQC,GAAU,UAAJrB,OAAcqB,IACvGxG,SAAUyG,GAAoB3G,EAAAA,EAAAA,KAAKgG,EAAU,CAC3C9F,SAAUA,IACPA,IAET,IACAmD,EAAKiC,YAAc,OACnBjC,EAAKuD,aA1BgB,CACnBD,MAAM,GA0BR,MAAeE,OAAOC,OAAOzD,EAAM,CACjC0D,IAAKxC,EACLyC,MAAOd,EACPe,SAAUd,EACVe,KAAMlB,EACNmB,KAAMf,EACNgB,KAAMf,EACNgB,OAAQ9B,EACR+B,OAAQhB,EACRiB,WAAYhB,G,4BC5DRiB,E,SAAuBvE,cAAoB,MACjDuE,EAAQlC,YAAc,oBACtB,K,qGCHImC,EAAU,Q,qECMRC,EAAa,SAAAC,GAAG,OAAIA,EAAI,GAAGC,eDLAC,ECKyBF,EDJjDE,EAAOC,QAAQL,GAAS,SAAUM,EAAGC,GAC1C,OAAOA,EAAIJ,aACb,KCE6DK,MAAM,GDLtD,IAAkBJ,CCKsC,EAGxD,SAAS5B,EAAmBhB,GAInC,IAAAT,EAAA0D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACG,EAAA7D,EAHJc,YAAAA,OAAW,IAAA+C,EAAGX,EAAWzC,GAAOoD,EAChCvD,EAASN,EAATM,UACA8B,EAAYpC,EAAZoC,aAEM0B,EAA2BrF,EAAAA,YAAiB,SAAAsF,EAK/C9D,GAAQ,IAJTpE,EAASkI,EAATlI,UACAqE,EAAQ6D,EAAR7D,SAAQ8D,EAAAD,EACR1D,GAAI4D,OAAG,IAAAD,EAAG1D,GAAa,MAAK0D,EACzBzI,GAAKgF,EAAAA,EAAAA,GAAAwD,EAAAvD,GAEF0D,GAAiBxD,EAAAA,EAAAA,IAAmBR,EAAUO,GACpD,OAAoBjF,EAAAA,EAAAA,KAAKyI,GAAGtD,EAAAA,EAAAA,GAAA,CAC1BV,IAAKA,EACLpE,UAAW+E,IAAW/E,EAAWqI,IAC9B3I,GAEP,IAGA,OAFAuI,EAAY1B,aAAeA,EAC3B0B,EAAYhD,YAAcA,EACnBgD,CACT,C,gFC3BA,aAAgBjI,GAAS,OAAiB4C,EAAAA,YAAiB,SAAC0F,EAAGlE,GAAG,OAAkBzE,EAAAA,EAAAA,KAAK,OAAKmF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOwD,GAAC,IACpGlE,IAAKA,EACLpE,UAAW+E,IAAWuD,EAAEtI,UAAWA,KACnC,GAAC,C","sources":["components/PageTitle.tsx","pages/other/Invoice.tsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">UBold</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React, { useState } from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nimport logoDark from \"../../assets/images/logo-dark.png\";\nimport logoLight from \"../../assets/images/logo-light.png\";\n\ninterface Address {\n  line_1: string;\n  line_2: string;\n  city: string;\n  state: string;\n  zip: number;\n  phone: string;\n}\n\ninterface Items {\n  id: number;\n  name: string;\n  description: string;\n  hour: number;\n  hourRate: string;\n  total: string;\n}\n\n// invoice component\nconst Invoice = () => {\n  const [customer] = useState<string>(\"Stanley Jones\");\n  const [notes] = useState<string>(\n    \"Thanks a lot because you keep purchasing our products. Our company promises to provide high quality products for you as well as outstanding customer service for every transaction.\"\n  );\n  const [order_date] = useState<string>(\"Jan 17, 2016\");\n  const [order_status] = useState<string>(\"Unpaid\");\n  const [order_no] = useState<string>(\"000028\");\n  const [billing_address] = useState<Address>({\n    line_1: \"Stanley Jones\",\n    line_2: \"795 Folsom Ave, Suite 600\",\n    city: \"San Francisco\",\n    state: \"CA\",\n    zip: 94107,\n    phone: \"(123) 456-7890\",\n  });\n  const [shipping_address] = useState<Address>({\n    line_1: \"Stanley Jones\",\n    line_2: \"795 Folsom Ave, Suite 600\",\n    city: \"San Francisco\",\n    state: \"CA\",\n    zip: 94107,\n    phone: \"(123) 456-7890\",\n  });\n  const [items] = useState<Items[]>([\n    {\n      id: 1,\n      name: \"Web Design\",\n      description: \"2 Pages static website - my website\",\n      hour: 22,\n      hourRate: \"$30\",\n      total: \"$660.00\",\n    },\n    {\n      id: 2,\n      name: \"Software Development\",\n      description: \"Invoice editor software - AB'c Software\",\n      hour: 122.5,\n      hourRate: \"$35\",\n      total: \"$3937.50\",\n    },\n  ]);\n  const [sub_total] = useState<string>(\"$4597.50\");\n  const [vat] = useState<string>(\"$459.75\");\n  const [total] = useState<string>(\"$4137.75\");\n\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Extra Pages\", path: \"/pages/invoice\" },\n          { label: \"Invoice\", path: \"/pages/invoice\", active: true },\n        ]}\n        title={\"Invoice\"}\n      />\n\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <div className=\"clearfix\">\n                <div className=\"float-start\">\n                  <div className=\"auth-logo\">\n                    <div className=\"logo logo-dark\">\n                      <span className=\"logo-lg\">\n                        <img src={logoDark} alt=\"\" height=\"22\" />\n                      </span>\n                    </div>\n                    <div className=\"logo logo-light\">\n                      <span className=\"logo-lg\">\n                        <img src={logoLight} alt=\"\" height=\"22\" />\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"float-end\">\n                  <h4 className=\"m-0 d-print-none\">Invoice</h4>\n                </div>\n              </div>\n\n              <Row>\n                <Col md={6}>\n                  <div className=\"mt-3\">\n                    <p>\n                      <b>Hello, {customer}</b>\n                    </p>\n                    <p className=\"text-muted\">{notes}</p>\n                  </div>\n                </Col>\n\n                <Col md={{ span: 4, offset: 2 }}>\n                  <div className=\"mt-3 float-end\">\n                    <p>\n                      <strong>Order Date : </strong>{\" \"}\n                      <span className=\"float-end\">\n                        {\" \"}\n                        &nbsp;&nbsp;&nbsp; {order_date}{\" \"}\n                      </span>\n                    </p>\n                    <p>\n                      <strong>Order Status : </strong>{\" \"}\n                      <span className=\"float-end\">\n                        {\" \"}\n                        <span className=\"badge bg-danger\">{order_status}</span>\n                      </span>\n                    </p>\n                    <p>\n                      <strong>Order No. : </strong>\n                      <span className=\"float-end\">\n                        {\" \"}\n                        <span className=\"float-end\">{order_no}</span>\n                      </span>\n                    </p>\n                  </div>\n                </Col>\n              </Row>\n\n              <Row className=\"mt-3\">\n                <Col sm={6}>\n                  <h6>Billing Address</h6>\n                  <address>\n                    {billing_address.line_1}\n                    <br />\n                    {billing_address.line_2}\n                    <br />\n                    {billing_address.city}, {billing_address.state}{\" \"}\n                    {billing_address.zip}\n                    <br />\n                    <abbr title=\"Phone\">P:</abbr> {billing_address.phone}\n                  </address>\n                </Col>\n                <Col sm={6}>\n                  <h6>Shipping Address</h6>\n                  <address>\n                    {shipping_address.line_1}\n                    <br />\n                    {shipping_address.line_2}\n                    <br />\n                    {shipping_address.city}, {shipping_address.state}{\" \"}\n                    {shipping_address.zip}\n                    <br />\n                    <abbr title=\"Phone\">P:</abbr> {shipping_address.phone}\n                  </address>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col xs={12}>\n                  <div className=\"table-responsive\">\n                    <table className=\"table mt-4 table-centered\">\n                      <thead>\n                        <tr>\n                          <th>#</th>\n                          <th>Item</th>\n                          <th style={{ width: \"10%\" }}>Hours</th>\n                          <th style={{ width: \"10%\" }}>Hours Rate</th>\n                          <th style={{ width: \"10%\" }} className=\"text-end\">\n                            Total\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {(items || []).map((item, idx) => {\n                          return (\n                            <tr key={idx}>\n                              <td>{idx + 1}</td>\n                              <td>\n                                <b>{item.name}</b> <br />\n                                {item.description}\n                              </td>\n                              <td>{item.hour}</td>\n                              <td>{item.hourRate}</td>\n                              <td className=\"text-end\">{item.total}</td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </table>\n                  </div>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col sm={6}>\n                  <div className=\"clearfix pt-5\">\n                    <h6 className=\"text-muted\">Notes:</h6>\n                    <small className=\"text-muted\">\n                      All accounts are to be paid within 7 days from receipt of\n                      invoice. To be paid by cheque or credit card or direct\n                      payment online. If account is not paid within 7 days the\n                      credits details supplied as confirmation of work\n                      undertaken will be charged the agreed quoted fee noted\n                      above.\n                    </small>\n                  </div>\n                </Col>\n                <Col sm={6}>\n                  <div className=\"float-end\">\n                    <p>\n                      <b>Sub-total:</b>{\" \"}\n                      <span className=\"float-end\">{sub_total}</span>\n                    </p>\n                    <p>\n                      <b>Discount (10%):</b>{\" \"}\n                      <span className=\"float-end\">\n                        {\" \"}\n                        &nbsp;&nbsp;&nbsp; {vat}\n                      </span>\n                    </p>\n                    <h3>{total} USD</h3>\n                  </div>\n                  <div className=\"clearfix\"></div>\n                </Col>\n              </Row>\n\n              <div className=\"mt-4 mb-1\">\n                <div className=\"text-end d-print-none\">\n                  <button\n                    className=\"btn btn-primary waves-effect waves-light me-1\"\n                    onClick={(e: any) => {\n                      window.print();\n                    }}\n                  >\n                    <i className=\"mdi mdi-printer me-1\"></i> Print\n                  </button>\n                  <button className=\"btn btn-info waves-effect waves-light\">\n                    Submit\n                  </button>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Invoice;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","href","map","item","index","active","label","path","_useState","useState","customer","_slicedToArray","_useState3","notes","_useState5","order_date","_useState7","order_status","_useState9","order_no","_useState11","line_1","line_2","city","state","zip","phone","billing_address","_useState13","shipping_address","_useState15","id","name","description","hour","hourRate","total","items","_useState17","sub_total","_useState19","vat","_useState21","React","PageTitle","breadCrumbItems","title","Card","src","logoDark","alt","height","logoLight","md","span","offset","sm","xs","style","width","idx","onClick","e","window","print","CardImg","_ref","ref","bsPrefix","variant","_ref$as","as","Component","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_objectSpread","classNames","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","arguments","length","undefined","_ref$displayName","BsComponent","_ref2","_ref2$as","Tag","resolvedPrefix","p"],"sourceRoot":""}