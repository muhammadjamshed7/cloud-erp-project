{"version":3,"file":"static/js/2156.eaa6e72e.chunk.js","mappings":"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","sources":["components/PageTitle.tsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">UBold</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","href","map","item","index","active","label","path","Button","React","_ref","ref","as","bsPrefix","variant","size","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_useButtonProps","useButtonProps","_objectSpread","tagName","_useButtonProps2","_slicedToArray","buttonProps","Component","classNames","concat","disabled","displayName","defaultProps","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","arguments","length","undefined","_ref$displayName","BsComponent","_ref2","_ref2$as","Tag","resolvedPrefix"],"sourceRoot":""}