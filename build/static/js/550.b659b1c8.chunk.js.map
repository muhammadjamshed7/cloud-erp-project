{"version":3,"file":"static/js/550.b659b1c8.chunk.js","mappings":"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","sources":["components/ChartStatistics.tsx","components/ChatList.tsx","components/StatisticsWidget3.tsx","components/TodoList.tsx","pages/dashboard/Dashboard3/Statistics.tsx","pages/dashboard/Dashboard3/PerformanceChart.tsx","pages/dashboard/Dashboard3/RevenueChart.tsx","pages/dashboard/Dashboard3/data.ts","pages/dashboard/Dashboard3/index.tsx"],"sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n\ninterface ChartStatisticsProps {\n  title: string;\n  icon?: string;\n  stats: string;\n  variant: string;\n}\n\nconst ChartStatistics = ({\n  title,\n  icon,\n  stats,\n  variant,\n}: ChartStatisticsProps) => {\n  return (\n    <>\n      <p className=\"text-muted font-15 mb-1 text-truncate\">{title}</p>\n      <h4>\n        <i className={classNames(icon, \"text-\" + variant, \"me-1\")}></i>\n        {stats}\n      </h4>\n    </>\n  );\n};\n\nexport default ChartStatistics;\n","import React, { useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { Card, Dropdown, Row, Col } from \"react-bootstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n//components\nimport { FormInput } from \"../components/\";\n\nimport profilePic from \"../assets/images/users/user-1.jpg\";\n\n/* Chat Item Avatar */\nconst ChatItemAvatar = ({\n  userAvatar,\n  postedOn,\n}: {\n  userAvatar: string;\n  postedOn: string;\n}) => {\n  return (\n    <>\n      <div className=\"chat-avatar\">\n        <img src={userAvatar} alt={userAvatar} />\n        <i>{postedOn}</i>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item Text */\nconst ChatItemText = ({\n  userName,\n  text,\n}: {\n  userName: string;\n  text: string;\n}) => {\n  return (\n    <>\n      <div className=\"conversation-text\">\n        <div className=\"ctext-wrap\">\n          <i>{userName}</i>\n          <p>{text}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item */\nconst chatItemDefaultProps = {\n  placement: \"\",\n  children: PropTypes.object,\n  className: \"\",\n};\n\nconst ChatItem = ({\n  children,\n  placement,\n  className,\n}: {\n  children: any;\n  placement: string;\n  className: string;\n}) => {\n  return (\n    <li\n      className={classNames(\n        \"clearfix\",\n        { odd: placement === \"left\" },\n        className\n      )}\n    >\n      {children}\n    </li>\n  );\n};\n\nChatItem.defaultProps = chatItemDefaultProps;\n\n/**\n * ChatForm\n */\n\ninterface FormValues {\n  newMessage: string;\n}\n\n/**\n * Renders the ChatForm\n */\nconst ChatForm = ({\n  onNewMessagesPosted,\n}: {\n  onNewMessagesPosted: (message: string) => void;\n}) => {\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newMessage: yup.string().required(\"Please enter your messsage\"),\n    })\n  );\n\n  const methods = useForm<FormValues>({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * Handle valid form submission\n   */\n  const handleValidMessageSubmit: SubmitHandler<FormValues> = (values) => {\n    const message = values[\"newMessage\"];\n    onNewMessagesPosted(message);\n    reset();\n  };\n\n  return (\n    <>\n      <form\n        name=\"chat-form\"\n        id=\"chat-form\"\n        onSubmit={handleSubmit(handleValidMessageSubmit)}\n      >\n        <Row>\n          <Col>\n            <FormInput\n              type=\"text\"\n              name=\"newMessage\"\n              className=\"form-control chat-input\"\n              placeholder=\"Enter your text\"\n              register={register}\n              key=\"newMessage\"\n              errors={errors}\n              control={control}\n            />\n          </Col>\n          <Col className=\"col-auto\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger chat-send waves-effect waves-light\"\n            >\n              Send\n            </button>\n          </Col>\n        </Row>\n      </form>\n    </>\n  );\n};\n\n/**\n * ChatList\n */\n\ninterface MessageItem {\n  id: number;\n  userPic?: string;\n  userName: string;\n  text: string;\n  postedOn: string;\n}\n\ninterface ChatListProps {\n  className?: string;\n  messages: Array<MessageItem>;\n}\n\n/**\n * Renders the ChatList\n */\nconst ChatList = (props: ChatListProps) => {\n  const [messages, setMessages] = useState<Array<MessageItem>>(props.messages);\n\n  /**\n   * Handle new message posted\n   */\n  const handleNewMessagePosted = (message: string) => {\n    // save new message\n    setMessages(\n      messages.concat({\n        id: messages.length + 1,\n        userPic: profilePic,\n        userName: \"Dominic\",\n        text: message,\n        postedOn: new Date().getHours() + \":\" + new Date().getMinutes(),\n      })\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"cursor-pointer card-drop p-0 shadow-none\"\n            >\n              <i className=\"mdi mdi-dots-vertical\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>Refresh</Dropdown.Item>\n              <Dropdown.Item>Settings</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <h4 className=\"header-title mb-3\">Chat</h4>\n\n          <div className=\"chat-conversation\">\n            {/* chat messages */}\n            <SimpleBar style={{ maxHeight: \"370px\", width: \"100%\" }}>\n              <ul className={classNames(\"conversation-list\", props.className)}>\n                {(messages || []).map((message, i) => {\n                  return (\n                    <ChatItem\n                      key={i}\n                      placement={\n                        message.userName === \"Dominic\" ? \"left\" : \"right\"\n                      }\n                    >\n                      {message.userPic && (\n                        <ChatItemAvatar\n                          userAvatar={message.userPic}\n                          postedOn={message.postedOn}\n                        />\n                      )}\n                      <ChatItemText\n                        userName={message.userName}\n                        text={message.text}\n                      />\n                    </ChatItem>\n                  );\n                })}\n              </ul>\n            </SimpleBar>\n\n            {/* chat form */}\n            <ChatForm onNewMessagesPosted={handleNewMessagePosted} />\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatList;\n","import React from \"react\";\nimport { Card, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport CountUp from \"react-countup\";\n\ninterface StatisticsWidgetProps {\n  title: string;\n  stats: string;\n  trend: {\n    label: string;\n    value: string;\n    icon: string;\n    trendStats: string;\n    variant: string;\n  };\n  counterOptions?: any;\n}\n\nconst StatisticsWidget3 = (props: StatisticsWidgetProps) => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <OverlayTrigger\n            placement=\"bottom\"\n            overlay={<Tooltip id={props[\"title\"]}>More Info</Tooltip>}\n          >\n            <i className=\"fa fa-info-circle text-muted float-end\"></i>\n          </OverlayTrigger>\n\n          <h4 className=\"mt-0 font-16\">{props[\"title\"]}</h4>\n          <h2 className=\"text-primary my-3 text-center\">\n            <span>\n              <CountUp\n                duration={1}\n                end={props[\"stats\"]}\n                {...props[\"counterOptions\"]}\n              />\n            </span>\n          </h2>\n          <p className=\"text-muted mb-0\">\n            {props[\"trend\"][\"label\"]}: {props[\"trend\"][\"value\"]}{\" \"}\n            <span className=\"float-end\">\n              <i\n                className={classNames(\n                  \"me-1\",\n                  \"fa\",\n                  props[\"trend\"][\"icon\"],\n                  \"text-\" + props[\"trend\"][\"variant\"]\n                )}\n              ></i>\n              {props[\"trend\"][\"trendStats\"]}\n            </span>\n          </p>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsWidget3;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Row, Col, Card, Dropdown, Button } from \"react-bootstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport classNames from \"classnames\";\n\n// components\nimport { FormInput } from \"./\";\n\ninterface TodoListProps {\n  addTodo?: boolean;\n  height?: string;\n}\n\ninterface TodoDataItems {\n  id: number;\n  text: string;\n  done: boolean;\n}\n\nconst TodoList = ({ addTodo, height }: TodoListProps) => {\n  const addTodos = addTodo ? addTodo : false;\n\n  // default todo data\n  const [todoData, setTodoData] = useState<Array<TodoDataItems>>([\n    {\n      id: 1,\n      text: \"Design One page theme\",\n      done: false,\n    },\n    {\n      id: 2,\n      text: \"Build a js based app\",\n      done: true,\n    },\n    {\n      id: 3,\n      text: \"Creating component page\",\n      done: true,\n    },\n    {\n      id: 4,\n      text: \"Testing??\",\n      done: true,\n    },\n    {\n      id: 5,\n      text: \"Hehe!! This looks cool!\",\n      done: false,\n    },\n    {\n      id: 6,\n      text: \"Create new version 3.0\",\n      done: false,\n    },\n    {\n      id: 7,\n      text: \"Build an angular app\",\n      done: true,\n    },\n    {\n      id: 8,\n      text: \"Vue Admin & Dashboard\",\n      done: false,\n    },\n  ]);\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newTodo: yup.string().required(\"Please enter your task name\"),\n    })\n  );\n\n  /*\n   * form methods\n   */\n  const methods = useForm({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * Saves the todo\n   */\n  const saveTodo = (e: any, values: any) => {\n    const newTodo = {\n      id: todoData.length + 1,\n      text: values.target[0].value,\n      done: false,\n    };\n    setTodoData([newTodo, ...todoData]);\n    reset();\n  };\n\n  /**\n   * Returns the remaining todos\n   */\n  const getInprogressTodos = () => {\n    return todoData.filter((item) => item.done === false);\n  };\n\n  /**\n   * Archives the todos\n   */\n  const archiveTodos = () => {\n    setTodoData(todoData.filter((item) => item.done !== true));\n  };\n\n  /**\n   * Toggle the status\n   * @param todoItem todo item\n   */\n  const toggleTodo = (todoItem: TodoDataItems, index: number) => {\n    const newTodoData = (todoData || []).map((todo, i) => {\n      return index === i ? Object.assign(todo, { done: !todoItem.done }) : todo;\n    });\n    setTodoData(newTodoData);\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle as=\"a\" className=\"card-drop cursor-pointer\">\n              <i className=\"mdi mdi-dots-vertical\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>Settings</Dropdown.Item>\n              <Dropdown.Item>Action</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <h4\n            className={classNames(\"header-title\", addTodos ? \"mb-3\" : \"mb-2\")}\n          >\n            Todo\n          </h4>\n\n          <div className=\"todoapp\">\n            {addTodos ? (\n              <>\n                <Row>\n                  <Col>\n                    <h5 id=\"todo-message\">\n                      <span id=\"todo-remaining\">\n                        {getInprogressTodos().length}\n                      </span>{\" \"}\n                      of <span id=\"todo-total\">{todoData.length}</span>{\" \"}\n                      remaining\n                    </h5>\n                  </Col>\n                  <Col className=\"col-auto\">\n                    <Button\n                      className=\"float-end btn-sm\"\n                      variant=\"light\"\n                      id=\"btn-archive\"\n                      onClick={archiveTodos}\n                    >\n                      Archive\n                    </Button>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <SimpleBar style={{ maxHeight: height }}>\n                      <ul\n                        className=\"list-group list-group-flush todo-list\"\n                        id=\"todo-list\"\n                      >\n                        {(todoData || []).map((todo, index) => {\n                          return (\n                            <li\n                              key={index}\n                              className=\"list-group-item border-0 ps-0\"\n                            >\n                              {todo.done ? (\n                                <div className=\"form-check mb-0\">\n                                  <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input todo-done\"\n                                    id={String(todo.id)}\n                                    checked={todo.done}\n                                    onChange={() => toggleTodo(todo, index)}\n                                  />\n                                  <label\n                                    className=\"form-check-label\"\n                                    htmlFor={String(todo.id)}\n                                  >\n                                    <s>{todo.text}</s>\n                                  </label>\n                                </div>\n                              ) : (\n                                <div className=\"form-check mb-0\">\n                                  <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input todo-done\"\n                                    id={String(todo.id)}\n                                    checked={todo.done}\n                                    onChange={() => toggleTodo(todo, index)}\n                                  />\n                                  <label\n                                    className=\"form-check-label\"\n                                    htmlFor={String(todo.id)}\n                                  >\n                                    {todo.text}\n                                  </label>\n                                </div>\n                              )}\n                            </li>\n                          );\n                        })}\n                      </ul>\n                    </SimpleBar>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <form\n                      name=\"todo-form\"\n                      id=\"todo-form\"\n                      onSubmit={handleSubmit(saveTodo)}\n                      className=\"mt-3\"\n                    >\n                      <Row>\n                        <Col>\n                          <FormInput\n                            type=\"text\"\n                            name=\"newTodo\"\n                            className=\"form-control\"\n                            placeholder=\"Add new todo\"\n                            register={register}\n                            key=\"newTodo\"\n                            errors={errors}\n                            control={control}\n                          />\n                        </Col>\n                        <Col className=\"col-auto\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary waves-effect waves-light\"\n                          >\n                            Add\n                          </button>\n                        </Col>\n                      </Row>\n                    </form>\n                  </Col>\n                </Row>\n              </>\n            ) : (\n              <Row>\n                <Col>\n                  <SimpleBar style={{ maxHeight: height }}>\n                    <ul\n                      className=\"list-group list-group-flush todo-list\"\n                      id=\"todo-list\"\n                    >\n                      {(todoData || []).map((todo, index) => {\n                        return (\n                          <li\n                            key={index}\n                            className=\"list-group-item border-0 ps-0\"\n                          >\n                            {todo.done ? (\n                              <div className=\"form-check mb-0\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"form-check-input todo-done\"\n                                  id={String(todo.id)}\n                                  checked={todo.done}\n                                  onChange={() => toggleTodo(todo, index)}\n                                />\n                                <label\n                                  className=\"form-check-label\"\n                                  htmlFor={String(todo.id)}\n                                >\n                                  <s>{todo.text}</s>\n                                </label>\n                              </div>\n                            ) : (\n                              <div className=\"form-check mb-0\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"form-check-input todo-done\"\n                                  id={String(todo.id)}\n                                  checked={todo.done}\n                                  onChange={() => toggleTodo(todo, index)}\n                                />\n                                <label\n                                  className=\"form-check-label\"\n                                  htmlFor={String(todo.id)}\n                                >\n                                  {todo.text}\n                                </label>\n                              </div>\n                            )}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </SimpleBar>\n                </Col>\n              </Row>\n            )}\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// componets\nimport StatisticsWidget3 from \"../../../components/StatisticsWidget3\";\n\nconst Statistics = () => {\n  return (\n    <>\n      <Row>\n        <Col md={6} xl={3}>\n          <StatisticsWidget3\n            title=\"Income status\"\n            stats=\"31570\"\n            trend={{\n              label: \"Total income\",\n              value: \"$22506\",\n              icon: \"fa-caret-up\",\n              variant: \"success\",\n              trendStats: \"10.25%\",\n            }}\n            counterOptions={{\n              prefix: \"$\",\n            }}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget3\n            title=\"Sales Status\"\n            stats=\"683\"\n            trend={{\n              label: \"Total sales\",\n              value: \"2398\",\n              icon: \"fa-caret-down\",\n              variant: \"danger\",\n              trendStats: \"7.85%\",\n            }}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget3\n            title=\"Recent Users\"\n            stats=\"3.2\"\n            trend={{\n              label: \"Total users\",\n              value: \"121 M\",\n              icon: \"fa-caret-up\",\n              variant: \"success\",\n              trendStats: \"3.64%\",\n            }}\n            counterOptions={{\n              suffix: \"M\",\n              decimals: 1,\n            }}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget3\n            title=\"Total Revenue\"\n            stats=\"68541\"\n            trend={{\n              label: \"Total revenue\",\n              value: \"$1.2 M\",\n              icon: \"fa-caret-up\",\n              variant: \"success\",\n              trendStats: \"17.48%\",\n            }}\n            counterOptions={{\n              prefix: \"$\",\n            }}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Bar, defaults as ChartjsDefaults } from \"react-chartjs-2\";\n\n// components\nimport ChartStatistics from \"../../../components/ChartStatistics\";\n\nconst PerformanceChart = () => {\n  ChartjsDefaults.color = \"#8391a2\";\n  ChartjsDefaults.scale.grid.color = \"#8391a2\";\n\n  // chart data\n  const barChartData = {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n    datasets: [\n      {\n        label: \"Sales Analytics\",\n        backgroundColor: \"#4a81d4\",\n        borderColor: \"#4a81d4\",\n        hoverBackgroundColor: \"#4a81d4\",\n        hoverBorderColor: \"#4a81d4\",\n        data: [65, 59, 80, 81, 56, 89, 40, 32, 65, 59, 80, 81],\n        barPercentage: 0.7,\n        categoryPercentage: 0.5,\n      },\n      {\n        label: \"Dollar Rate\",\n        backgroundColor: \"#e3eaef\",\n        borderColor: \"#e3eaef\",\n        hoverBackgroundColor: \"#e3eaef\",\n        hoverBorderColor: \"#e3eaef\",\n        data: [89, 40, 32, 65, 59, 80, 81, 56, 89, 40, 65, 59],\n        barPercentage: 0.7,\n        categoryPercentage: 0.5,\n      },\n    ],\n  };\n\n  // options\n  const barChartOpts = {\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      y: {\n        ticks: {\n          stepSize: 20,\n        },\n        grid: {\n          display: false,\n          color: \"rgba(0,0,0,0.05)\",\n        },\n        stacked: false,\n      },\n      x: {\n        stacked: false,\n        grid: {\n          color: \"rgba(0,0,0,0.05)\",\n        },\n      },\n    },\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <div className=\"float-end d-none d-md-inline-block\">\n            <div className=\"btn-group mb-2\">\n              <button type=\"button\" className=\"btn btn-xs btn-secondary\">\n                Today\n              </button>\n              <button type=\"button\" className=\"btn btn-xs btn-light\">\n                Weekly\n              </button>\n              <button type=\"button\" className=\"btn btn-xs btn-light\">\n                Monthly\n              </button>\n            </div>\n          </div>\n\n          <h4 className=\"header-title\">Projections Vs Actuals </h4>\n\n          <Row className=\"mt-4 text-center\">\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Target\"\n                icon=\"fe-arrow-down\"\n                stats=\"$3.8k\"\n                variant=\"danger\"\n              />\n            </Col>\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Last week\"\n                icon=\"fe-arrow-up\"\n                stats=\"$1.1k\"\n                variant=\"success\"\n              />\n            </Col>\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Last Month\"\n                icon=\"fe-arrow-down\"\n                stats=\"$25k\"\n                variant=\"danger\"\n              />\n            </Col>\n          </Row>\n\n          <div style={{ height: \"300px\" }} className=\"chartjs-chart\">\n            <Bar data={barChartData} options={barChartOpts} />\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default PerformanceChart;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Line, defaults as ChartjsDefaults } from \"react-chartjs-2\";\n\n// components\nimport ChartStatistics from \"../../../components/ChartStatistics\";\n\nconst RevenueChart = () => {\n  ChartjsDefaults.color = \"#8391a2\";\n  ChartjsDefaults.scale.grid.color = \"#8391a2\";\n\n  // chart data\n  const lineChartData = {\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    datasets: [\n      {\n        label: \"Current Week\",\n        backgroundColor: \"#1fa083\",\n        borderColor: \"#1fa083\",\n        data: [32, 42, 42, 62, 52, 75, 62],\n        tension: 0.4,\n        fill: {\n          target: \"origin\",\n          above: \"rgba(31, 160, 131, 0.3)\",\n        },\n      },\n      {\n        label: \"Previous Week\",\n        fill: true,\n        backgroundColor: \"transparent\",\n        borderColor: \"#f1556c\",\n        borderDash: [5, 5],\n        data: [42, 58, 66, 93, 82, 105, 92],\n        tension: 0.4,\n      },\n    ],\n  };\n\n  // chart options\n  const lineChartOpts = {\n    bezierCurve: false,\n    maintainAspectRatio: false,\n    tooltips: {\n      intersect: false,\n    },\n    hover: {\n      intersect: true,\n    },\n    plugins: {\n      filler: {\n        propagate: false,\n      },\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          color: \"rgba(0,0,0,0.05)\",\n        },\n      },\n      y: {\n        ticks: {\n          stepSize: 20,\n        },\n        display: true,\n        borderDash: [5, 5],\n        grid: {\n          color: \"rgba(0,0,0,0)\",\n          fontColor: \"#fff\",\n        },\n      },\n    },\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <div className=\"float-end d-none d-md-inline-block\">\n            <div className=\"btn-group mb-2\">\n              <button type=\"button\" className=\"btn btn-xs btn-secondary\">\n                Today\n              </button>\n              <button type=\"button\" className=\"btn btn-xs btn-light\">\n                Weekly\n              </button>\n              <button type=\"button\" className=\"btn btn-xs btn-light\">\n                Monthly\n              </button>\n            </div>\n          </div>\n\n          <h4 className=\"header-title\">Revenue</h4>\n\n          <Row className=\"mt-4 text-center\">\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Target\"\n                icon=\"fe-arrow-down\"\n                stats=\"$7.8k\"\n                variant=\"danger\"\n              />\n            </Col>\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Last week\"\n                icon=\"fe-arrow-up\"\n                stats=\"$1.4k\"\n                variant=\"success\"\n              />\n            </Col>\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Last Month\"\n                icon=\"fe-arrow-down\"\n                stats=\"$15k\"\n                variant=\"danger\"\n              />\n            </Col>\n          </Row>\n\n          <div style={{ height: \"300px\" }} className=\"mt-3 chartjs-chart\">\n            <Line data={lineChartData} options={lineChartOpts} />\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default RevenueChart;\n","import profilePic from \"../../../assets/images/users/user-1.jpg\";\nimport profilePic2 from \"../../../assets/images/users/user-5.jpg\";\n\nconst chatMessages = [\n  {\n    id: 1,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Hello!\",\n    postedOn: \"10:00\",\n  },\n  {\n    id: 2,\n    userPic: profilePic,\n    userName: \"Dominic\",\n    text: \"Hi, How are you? What about our next meeting?\",\n    postedOn: \"10:01\",\n  },\n  {\n    id: 3,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Yeah everything is fine\",\n    postedOn: \"10:02\",\n  },\n  {\n    id: 4,\n    userPic: profilePic,\n    userName: \"Dominic\",\n    text: \"Wow that's great!\",\n    postedOn: \"10:03\",\n  },\n  {\n    id: 5,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Cool!\",\n    postedOn: \"10:03\",\n  },\n];\n\nexport { chatMessages };\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\nimport Messages from \"../../../components/Messages\";\nimport TodoList from \"../../../components/TodoList\";\nimport ChatList from \"../../../components/ChatList\";\n\nimport Statistics from \"./Statistics\";\nimport PerformanceChart from \"./PerformanceChart\";\nimport RevenueChart from \"./RevenueChart\";\n\n// dummy data\nimport { chatMessages } from \"./data\";\n\nconst Dashboard3 = () => {\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Dashboards\", path: \"/dashboard-3\" },\n          { label: \"Dashboard 3\", path: \"/dashboard-3\", active: true },\n        ]}\n        title={\"Dashboard 3\"}\n      />\n\n      <Statistics />\n\n      <Row>\n        <Col xl={6}>\n          <RevenueChart />\n        </Col>\n        <Col xl={6}>\n          <PerformanceChart />\n        </Col>\n      </Row>\n      <Row>\n        <Col lg={6} xl={4}>\n          <Messages />\n        </Col>\n        <Col lg={6} xl={4}>\n          <TodoList addTodo={true} height={\"310px\"} />\n        </Col>\n        <Col lg={12} xl={4}>\n          <ChatList messages={chatMessages} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Dashboard3;\n"],"names":["_ref","title","icon","stats","variant","_jsxs","_Fragment","children","_jsx","className","classNames","ChatItemAvatar","userAvatar","postedOn","src","alt","ChatItemText","_ref2","userName","text","chatItemDefaultProps","placement","PropTypes","ChatItem","_ref3","odd","defaultProps","ChatForm","_ref4","onNewMessagesPosted","schemaResolver","yupResolver","yup","shape","newMessage","required","methods","useForm","resolver","handleSubmit","register","control","errors","formState","reset","name","id","onSubmit","values","message","Row","Col","FormInput","type","placeholder","props","_useState","useState","messages","_useState2","_slicedToArray","setMessages","Card","Dropdown","align","as","SimpleBar","style","maxHeight","width","map","i","userPic","concat","length","profilePic","Date","getHours","getMinutes","OverlayTrigger","overlay","Tooltip","CountUp","_objectSpread","duration","end","addTodo","height","addTodos","done","todoData","setTodoData","newTodo","toggleTodo","todoItem","index","newTodoData","todo","Object","assign","filter","item","Button","onClick","String","checked","onChange","htmlFor","e","target","value","_toConsumableArray","md","xl","StatisticsWidget3","trend","label","trendStats","counterOptions","prefix","suffix","decimals","ChartjsDefaults","ChartStatistics","Bar","data","labels","datasets","backgroundColor","borderColor","hoverBackgroundColor","hoverBorderColor","barPercentage","categoryPercentage","options","maintainAspectRatio","plugins","legend","display","scales","y","ticks","stepSize","grid","color","stacked","x","Line","tension","fill","above","borderDash","bezierCurve","tooltips","intersect","hover","filler","propagate","fontColor","chatMessages","profilePic2","PageTitle","breadCrumbItems","path","active","Statistics","RevenueChart","PerformanceChart","lg","Messages","TodoList","ChatList"],"sourceRoot":""}