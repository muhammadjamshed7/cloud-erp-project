{"version":3,"file":"static/js/1212.f9b89a69.chunk.js","mappings":"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","sources":["components/ChatList.tsx","components/StatisticsWidget.tsx","components/StatisticsWidget3.tsx","components/StatisticsWidget4.tsx","components/TodoList.tsx","components/StatisticsChartWidget.tsx","components/StatisticsChartWidget2.tsx","pages/uikit/Widgets.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { Card, Dropdown, Row, Col } from \"react-bootstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n//components\nimport { FormInput } from \"../components/\";\n\nimport profilePic from \"../assets/images/users/user-1.jpg\";\n\n/* Chat Item Avatar */\nconst ChatItemAvatar = ({\n  userAvatar,\n  postedOn,\n}: {\n  userAvatar: string;\n  postedOn: string;\n}) => {\n  return (\n    <>\n      <div className=\"chat-avatar\">\n        <img src={userAvatar} alt={userAvatar} />\n        <i>{postedOn}</i>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item Text */\nconst ChatItemText = ({\n  userName,\n  text,\n}: {\n  userName: string;\n  text: string;\n}) => {\n  return (\n    <>\n      <div className=\"conversation-text\">\n        <div className=\"ctext-wrap\">\n          <i>{userName}</i>\n          <p>{text}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item */\nconst chatItemDefaultProps = {\n  placement: \"\",\n  children: PropTypes.object,\n  className: \"\",\n};\n\nconst ChatItem = ({\n  children,\n  placement,\n  className,\n}: {\n  children: any;\n  placement: string;\n  className: string;\n}) => {\n  return (\n    <li\n      className={classNames(\n        \"clearfix\",\n        { odd: placement === \"left\" },\n        className\n      )}\n    >\n      {children}\n    </li>\n  );\n};\n\nChatItem.defaultProps = chatItemDefaultProps;\n\n/**\n * ChatForm\n */\n\ninterface FormValues {\n  newMessage: string;\n}\n\n/**\n * Renders the ChatForm\n */\nconst ChatForm = ({\n  onNewMessagesPosted,\n}: {\n  onNewMessagesPosted: (message: string) => void;\n}) => {\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newMessage: yup.string().required(\"Please enter your messsage\"),\n    })\n  );\n\n  const methods = useForm<FormValues>({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * Handle valid form submission\n   */\n  const handleValidMessageSubmit: SubmitHandler<FormValues> = (values) => {\n    const message = values[\"newMessage\"];\n    onNewMessagesPosted(message);\n    reset();\n  };\n\n  return (\n    <>\n      <form\n        name=\"chat-form\"\n        id=\"chat-form\"\n        onSubmit={handleSubmit(handleValidMessageSubmit)}\n      >\n        <Row>\n          <Col>\n            <FormInput\n              type=\"text\"\n              name=\"newMessage\"\n              className=\"form-control chat-input\"\n              placeholder=\"Enter your text\"\n              register={register}\n              key=\"newMessage\"\n              errors={errors}\n              control={control}\n            />\n          </Col>\n          <Col className=\"col-auto\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger chat-send waves-effect waves-light\"\n            >\n              Send\n            </button>\n          </Col>\n        </Row>\n      </form>\n    </>\n  );\n};\n\n/**\n * ChatList\n */\n\ninterface MessageItem {\n  id: number;\n  userPic?: string;\n  userName: string;\n  text: string;\n  postedOn: string;\n}\n\ninterface ChatListProps {\n  className?: string;\n  messages: Array<MessageItem>;\n}\n\n/**\n * Renders the ChatList\n */\nconst ChatList = (props: ChatListProps) => {\n  const [messages, setMessages] = useState<Array<MessageItem>>(props.messages);\n\n  /**\n   * Handle new message posted\n   */\n  const handleNewMessagePosted = (message: string) => {\n    // save new message\n    setMessages(\n      messages.concat({\n        id: messages.length + 1,\n        userPic: profilePic,\n        userName: \"Dominic\",\n        text: message,\n        postedOn: new Date().getHours() + \":\" + new Date().getMinutes(),\n      })\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"cursor-pointer card-drop p-0 shadow-none\"\n            >\n              <i className=\"mdi mdi-dots-vertical\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>Refresh</Dropdown.Item>\n              <Dropdown.Item>Settings</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <h4 className=\"header-title mb-3\">Chat</h4>\n\n          <div className=\"chat-conversation\">\n            {/* chat messages */}\n            <SimpleBar style={{ maxHeight: \"370px\", width: \"100%\" }}>\n              <ul className={classNames(\"conversation-list\", props.className)}>\n                {(messages || []).map((message, i) => {\n                  return (\n                    <ChatItem\n                      key={i}\n                      placement={\n                        message.userName === \"Dominic\" ? \"left\" : \"right\"\n                      }\n                    >\n                      {message.userPic && (\n                        <ChatItemAvatar\n                          userAvatar={message.userPic}\n                          postedOn={message.postedOn}\n                        />\n                      )}\n                      <ChatItemText\n                        userName={message.userName}\n                        text={message.text}\n                      />\n                    </ChatItem>\n                  );\n                })}\n              </ul>\n            </SimpleBar>\n\n            {/* chat form */}\n            <ChatForm onNewMessagesPosted={handleNewMessagePosted} />\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatList;\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport CountUp from \"react-countup\";\n\ninterface StatisticsWidgetProps {\n  variant: string;\n  description: string;\n  stats: string;\n  icon: string;\n  counterOptions?: any;\n}\n\nconst StatisticsWidget = (props: StatisticsWidgetProps) => {\n  return (\n    <>\n      <Card className=\"widget-rounded-circle\">\n        <Card.Body>\n          <Row>\n            <Col className=\"col-6\">\n              <div\n                className={classNames(\n                  \"avatar-lg\",\n                  \"rounded-circle\",\n                  \"bg-soft-\" + props[\"variant\"],\n                  \"border-\" + props[\"variant\"],\n                  \"border\"\n                )}\n              >\n                <i\n                  className={classNames(\n                    props[\"icon\"],\n                    \"avatar-title\",\n                    \"font-22\",\n                    \"text-\" + props[\"variant\"]\n                  )}\n                ></i>\n              </div>\n            </Col>\n            <Col className=\"col-6\">\n              <div className=\"text-end\">\n                <h3 className=\"text-dark mt-1\">\n                  <span>\n                    <CountUp\n                      duration={1}\n                      end={props[\"stats\"]}\n                      {...props[\"counterOptions\"]}\n                    />\n                  </span>\n                </h3>\n                <p className=\"text-muted mb-1 text-truncate\">\n                  {props[\"description\"]}\n                </p>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsWidget;\n","import React from \"react\";\nimport { Card, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport CountUp from \"react-countup\";\n\ninterface StatisticsWidgetProps {\n  title: string;\n  stats: string;\n  trend: {\n    label: string;\n    value: string;\n    icon: string;\n    trendStats: string;\n    variant: string;\n  };\n  counterOptions?: any;\n}\n\nconst StatisticsWidget3 = (props: StatisticsWidgetProps) => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <OverlayTrigger\n            placement=\"bottom\"\n            overlay={<Tooltip id={props[\"title\"]}>More Info</Tooltip>}\n          >\n            <i className=\"fa fa-info-circle text-muted float-end\"></i>\n          </OverlayTrigger>\n\n          <h4 className=\"mt-0 font-16\">{props[\"title\"]}</h4>\n          <h2 className=\"text-primary my-3 text-center\">\n            <span>\n              <CountUp\n                duration={1}\n                end={props[\"stats\"]}\n                {...props[\"counterOptions\"]}\n              />\n            </span>\n          </h2>\n          <p className=\"text-muted mb-0\">\n            {props[\"trend\"][\"label\"]}: {props[\"trend\"][\"value\"]}{\" \"}\n            <span className=\"float-end\">\n              <i\n                className={classNames(\n                  \"me-1\",\n                  \"fa\",\n                  props[\"trend\"][\"icon\"],\n                  \"text-\" + props[\"trend\"][\"variant\"]\n                )}\n              ></i>\n              {props[\"trend\"][\"trendStats\"]}\n            </span>\n          </p>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsWidget3;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\ninterface StatisticsWidgetProps {\n  avatar: string;\n  name: string;\n  position: string;\n}\n\nconst StatisticsWidget4 = (props: StatisticsWidgetProps) => {\n  return (\n    <>\n      <Card className=\"widget-rounded-circle\">\n        <Card.Body>\n          <div className=\"row align-items-center\">\n            <div className=\"col-auto\">\n              <div className=\"avatar-lg\">\n                <img\n                  src={props.avatar}\n                  className=\"img-fluid rounded-circle\"\n                  alt=\"\"\n                />\n              </div>\n            </div>\n            <div className=\"col\">\n              <h5 className=\"mb-1 mt-2 font-16\">{props.name}</h5>\n              <p className=\"mb-2 text-muted\">{props.position}</p>\n            </div>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsWidget4;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Row, Col, Card, Dropdown, Button } from \"react-bootstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport classNames from \"classnames\";\n\n// components\nimport { FormInput } from \"./\";\n\ninterface TodoListProps {\n  addTodo?: boolean;\n  height?: string;\n}\n\ninterface TodoDataItems {\n  id: number;\n  text: string;\n  done: boolean;\n}\n\nconst TodoList = ({ addTodo, height }: TodoListProps) => {\n  const addTodos = addTodo ? addTodo : false;\n\n  // default todo data\n  const [todoData, setTodoData] = useState<Array<TodoDataItems>>([\n    {\n      id: 1,\n      text: \"Design One page theme\",\n      done: false,\n    },\n    {\n      id: 2,\n      text: \"Build a js based app\",\n      done: true,\n    },\n    {\n      id: 3,\n      text: \"Creating component page\",\n      done: true,\n    },\n    {\n      id: 4,\n      text: \"Testing??\",\n      done: true,\n    },\n    {\n      id: 5,\n      text: \"Hehe!! This looks cool!\",\n      done: false,\n    },\n    {\n      id: 6,\n      text: \"Create new version 3.0\",\n      done: false,\n    },\n    {\n      id: 7,\n      text: \"Build an angular app\",\n      done: true,\n    },\n    {\n      id: 8,\n      text: \"Vue Admin & Dashboard\",\n      done: false,\n    },\n  ]);\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newTodo: yup.string().required(\"Please enter your task name\"),\n    })\n  );\n\n  /*\n   * form methods\n   */\n  const methods = useForm({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * Saves the todo\n   */\n  const saveTodo = (e: any, values: any) => {\n    const newTodo = {\n      id: todoData.length + 1,\n      text: values.target[0].value,\n      done: false,\n    };\n    setTodoData([newTodo, ...todoData]);\n    reset();\n  };\n\n  /**\n   * Returns the remaining todos\n   */\n  const getInprogressTodos = () => {\n    return todoData.filter((item) => item.done === false);\n  };\n\n  /**\n   * Archives the todos\n   */\n  const archiveTodos = () => {\n    setTodoData(todoData.filter((item) => item.done !== true));\n  };\n\n  /**\n   * Toggle the status\n   * @param todoItem todo item\n   */\n  const toggleTodo = (todoItem: TodoDataItems, index: number) => {\n    const newTodoData = (todoData || []).map((todo, i) => {\n      return index === i ? Object.assign(todo, { done: !todoItem.done }) : todo;\n    });\n    setTodoData(newTodoData);\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle as=\"a\" className=\"card-drop cursor-pointer\">\n              <i className=\"mdi mdi-dots-vertical\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>Settings</Dropdown.Item>\n              <Dropdown.Item>Action</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <h4\n            className={classNames(\"header-title\", addTodos ? \"mb-3\" : \"mb-2\")}\n          >\n            Todo\n          </h4>\n\n          <div className=\"todoapp\">\n            {addTodos ? (\n              <>\n                <Row>\n                  <Col>\n                    <h5 id=\"todo-message\">\n                      <span id=\"todo-remaining\">\n                        {getInprogressTodos().length}\n                      </span>{\" \"}\n                      of <span id=\"todo-total\">{todoData.length}</span>{\" \"}\n                      remaining\n                    </h5>\n                  </Col>\n                  <Col className=\"col-auto\">\n                    <Button\n                      className=\"float-end btn-sm\"\n                      variant=\"light\"\n                      id=\"btn-archive\"\n                      onClick={archiveTodos}\n                    >\n                      Archive\n                    </Button>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <SimpleBar style={{ maxHeight: height }}>\n                      <ul\n                        className=\"list-group list-group-flush todo-list\"\n                        id=\"todo-list\"\n                      >\n                        {(todoData || []).map((todo, index) => {\n                          return (\n                            <li\n                              key={index}\n                              className=\"list-group-item border-0 ps-0\"\n                            >\n                              {todo.done ? (\n                                <div className=\"form-check mb-0\">\n                                  <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input todo-done\"\n                                    id={String(todo.id)}\n                                    checked={todo.done}\n                                    onChange={() => toggleTodo(todo, index)}\n                                  />\n                                  <label\n                                    className=\"form-check-label\"\n                                    htmlFor={String(todo.id)}\n                                  >\n                                    <s>{todo.text}</s>\n                                  </label>\n                                </div>\n                              ) : (\n                                <div className=\"form-check mb-0\">\n                                  <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input todo-done\"\n                                    id={String(todo.id)}\n                                    checked={todo.done}\n                                    onChange={() => toggleTodo(todo, index)}\n                                  />\n                                  <label\n                                    className=\"form-check-label\"\n                                    htmlFor={String(todo.id)}\n                                  >\n                                    {todo.text}\n                                  </label>\n                                </div>\n                              )}\n                            </li>\n                          );\n                        })}\n                      </ul>\n                    </SimpleBar>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <form\n                      name=\"todo-form\"\n                      id=\"todo-form\"\n                      onSubmit={handleSubmit(saveTodo)}\n                      className=\"mt-3\"\n                    >\n                      <Row>\n                        <Col>\n                          <FormInput\n                            type=\"text\"\n                            name=\"newTodo\"\n                            className=\"form-control\"\n                            placeholder=\"Add new todo\"\n                            register={register}\n                            key=\"newTodo\"\n                            errors={errors}\n                            control={control}\n                          />\n                        </Col>\n                        <Col className=\"col-auto\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary waves-effect waves-light\"\n                          >\n                            Add\n                          </button>\n                        </Col>\n                      </Row>\n                    </form>\n                  </Col>\n                </Row>\n              </>\n            ) : (\n              <Row>\n                <Col>\n                  <SimpleBar style={{ maxHeight: height }}>\n                    <ul\n                      className=\"list-group list-group-flush todo-list\"\n                      id=\"todo-list\"\n                    >\n                      {(todoData || []).map((todo, index) => {\n                        return (\n                          <li\n                            key={index}\n                            className=\"list-group-item border-0 ps-0\"\n                          >\n                            {todo.done ? (\n                              <div className=\"form-check mb-0\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"form-check-input todo-done\"\n                                  id={String(todo.id)}\n                                  checked={todo.done}\n                                  onChange={() => toggleTodo(todo, index)}\n                                />\n                                <label\n                                  className=\"form-check-label\"\n                                  htmlFor={String(todo.id)}\n                                >\n                                  <s>{todo.text}</s>\n                                </label>\n                              </div>\n                            ) : (\n                              <div className=\"form-check mb-0\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"form-check-input todo-done\"\n                                  id={String(todo.id)}\n                                  checked={todo.done}\n                                  onChange={() => toggleTodo(todo, index)}\n                                />\n                                <label\n                                  className=\"form-check-label\"\n                                  htmlFor={String(todo.id)}\n                                >\n                                  {todo.text}\n                                </label>\n                              </div>\n                            )}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </SimpleBar>\n                </Col>\n              </Row>\n            )}\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport CountUp from \"react-countup\";\nimport classNames from \"classnames\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\ninterface StatisticsChartWidgetProps {\n  icon: string;\n  variant: string;\n  stats: string;\n  counterOptions?: any;\n  description: string;\n  chartConfig: {\n    apxOptions: ApexOptions;\n    apxSeries: Array<any>;\n    type:\n      | \"area\"\n      | \"line\"\n      | \"bar\"\n      | \"histogram\"\n      | \"pie\"\n      | \"donut\"\n      | \"radialBar\"\n      | \"scatter\"\n      | \"bubble\"\n      | \"heatmap\"\n      | \"treemap\"\n      | \"boxPlot\"\n      | \"candlestick\"\n      | \"radar\"\n      | \"polarArea\"\n      | \"rangeBar\"\n      | undefined;\n    height: number;\n  };\n}\n\nconst StatisticsChartWidget = ({\n  icon,\n  variant,\n  stats,\n  counterOptions,\n  description,\n  chartConfig,\n}: StatisticsChartWidgetProps) => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Row>\n            <Col>\n              <div\n                className={classNames(\n                  \"avatar-sm\",\n                  \"rounded-circle\",\n                  \"bg-\" + variant\n                )}\n              >\n                <i\n                  className={classNames(\n                    icon,\n                    \"avatar-title\",\n                    \"font-22\",\n                    \"text-white\"\n                  )}\n                ></i>\n              </div>\n            </Col>\n            <Col>\n              <div className=\"text-end\">\n                <h3 className=\"my-1\">\n                  <span>\n                    <CountUp duration={1} end={stats} {...counterOptions} />\n                  </span>\n                </h3>\n                <p className=\"text-muted mb-1 text-truncate\">{description}</p>\n              </div>\n            </Col>\n          </Row>\n          <div className=\"mt-4\">\n            {chartConfig && (\n              <Chart\n                options={chartConfig[\"apxOptions\"]}\n                series={chartConfig[\"apxSeries\"]}\n                type={chartConfig[\"type\"]}\n                height={chartConfig[\"height\"]}\n                className=\"apex-charts mt-0\"\n              />\n            )}\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsChartWidget;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\n// components\nimport ChartStatistics from \"./ChartStatistics\";\n\ninterface StatisticsChartWidgetProps {\n  title: string;\n  color: string;\n  data: number;\n  totalSales: string;\n  target: string;\n  lastWeek: string;\n  lastMonth: string;\n}\n\nconst StatisticsChartWidget2 = ({\n  title,\n  color,\n  data,\n  totalSales,\n  target,\n  lastWeek,\n  lastMonth,\n}: StatisticsChartWidgetProps) => {\n  const apexOpts: ApexOptions = {\n    chart: {\n      type: \"radialBar\",\n    },\n    plotOptions: {\n      radialBar: {\n        hollow: {\n          size: \"67%\",\n        },\n        dataLabels: {\n          name: {\n            show: false,\n          },\n          value: {\n            show: true,\n            fontSize: \"24px\",\n            offsetY: 12,\n            formatter: (val: number) => {\n              return String(val);\n            },\n          },\n        },\n      },\n    },\n    colors: [color],\n    stroke: {\n      lineCap: \"round\",\n    },\n  };\n\n  const apexData = [data];\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title mb-2\">{title}</h4>\n\n          <div className=\"widget-chart text-center\" dir=\"ltr\">\n            <Chart\n              options={apexOpts}\n              series={apexData}\n              type=\"radialBar\"\n              height={180}\n              className=\"apex-charts mt-0\"\n            />\n\n            <h5 className=\"text-muted mt-0\">Total sales made today</h5>\n            <h2>{totalSales}</h2>\n\n            <Row className=\"row mt-3\">\n              <Col className=\"col-4\">\n                <ChartStatistics\n                  title=\"Target\"\n                  stats={target}\n                  variant=\"danger\"\n                />\n              </Col>\n              <Col className=\"col-4\">\n                <ChartStatistics\n                  title=\"Last week\"\n                  stats={lastWeek}\n                  variant=\"success\"\n                />\n              </Col>\n              <Col className=\"col-4\">\n                <ChartStatistics\n                  title=\"Last Month\"\n                  stats={lastMonth}\n                  variant=\"danger\"\n                />\n              </Col>\n            </Row>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsChartWidget2;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport CountUp from \"react-countup\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport StatisticsWidget from \"../../components/StatisticsWidget\";\nimport StatisticsWidget2 from \"../../components/StatisticsWidget2\";\nimport StatisticsWidget3 from \"../../components/StatisticsWidget3\";\nimport StatisticsWidget4 from \"../../components/StatisticsWidget4\";\nimport ChatList from \"../../components/ChatList\";\nimport TodoList from \"../../components/TodoList\";\nimport Messages from \"../../components/Messages\";\nimport SalesChart from \"../../components/SalesChart\";\nimport IncomeChart from \"../../components/IncomeChart\";\nimport UsersChart from \"../../components/UsersChart\";\nimport StatisticsChartWidget from \"../../components/StatisticsChartWidget\";\nimport StatisticsChartWidget2 from \"../../components/StatisticsChartWidget2\";\n\nimport profilePic from \"../../assets/images/users/user-1.jpg\";\nimport profilePic2 from \"../../assets/images/users/user-5.jpg\";\n\nimport avatar1 from \"../../assets/images/users/user-3.jpg\";\nimport avatar2 from \"../../assets/images/users/user-4.jpg\";\nimport avatar3 from \"../../assets/images/users/user-5.jpg\";\nimport avatar4 from \"../../assets/images/users/user-6.jpg\";\n\nconst Widgets = () => {\n  const chatMessages = [\n    {\n      id: 1,\n      userPic: profilePic2,\n      userName: \"Geneva\",\n      text: \"Hello!\",\n      postedOn: \"10:00\",\n    },\n    {\n      id: 2,\n      userPic: profilePic,\n      userName: \"Dominic\",\n      text: \"Hi, How are you? What about our next meeting?\",\n      postedOn: \"10:01\",\n    },\n    {\n      id: 3,\n      userPic: profilePic2,\n      userName: \"Geneva\",\n      text: \"Yeah everything is fine\",\n      postedOn: \"10:02\",\n    },\n    {\n      id: 4,\n      userPic: profilePic,\n      userName: \"Dominic\",\n      text: \"Wow that's great!\",\n      postedOn: \"10:03\",\n    },\n    {\n      id: 5,\n      userPic: profilePic2,\n      userName: \"Geneva\",\n      text: \"Cool!\",\n      postedOn: \"10:03\",\n    },\n  ];\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Components\", path: \"/ui/widgets\" },\n          { label: \"Widgets\", path: \"/ui/widgets\", active: true },\n        ]}\n        title={\"Widgets\"}\n      />\n\n      {/* StatisticsWidget */}\n      <Row>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"primary\"\n            counterOptions={{\n              prefix: \"$\",\n            }}\n            description=\"Total Revenue\"\n            stats=\"58947\"\n            icon=\"fe-heart\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"success\"\n            description=\"Today's Sales\"\n            stats=\"127\"\n            icon=\"fe-shopping-cart\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"info\"\n            description=\"Conversion\"\n            stats=\"0.58\"\n            counterOptions={{\n              suffix: \"%\",\n              decimals: 2,\n            }}\n            icon=\"fe-bar-chart-line-\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"warning\"\n            description=\"Today's Visits\"\n            stats=\"78412\"\n            icon=\"fe-eye\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"danger\"\n            description=\"Available Stores\"\n            stats=\"178\"\n            icon=\"fe-shopping-bag\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"secondary\"\n            description=\"Gitlab Commits\"\n            stats=\"289\"\n            icon=\"fe-gitlab\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"blue\"\n            description=\"Free Gifts\"\n            stats=\"1021\"\n            icon=\"fe-gift\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"pink\"\n            description=\"Paid Users\"\n            stats=\"154\"\n            counterOptions={{\n              suffix: \"k\",\n            }}\n            icon=\"fe-user\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card className=\"widget-inline\">\n            <Card.Body>\n              <Row>\n                <Col sm={6} xl={3}>\n                  <div className=\"p-2 text-center\">\n                    <i className=\"mdi mdi-cart-plus text-primary mdi-24px\"></i>\n                    <h3>\n                      <span>\n                        <CountUp duration={1} end={8954} />\n                      </span>\n                    </h3>\n                    <p className=\"text-muted font-15 mb-0\">Lifetime Sales</p>\n                  </div>\n                </Col>\n                <Col sm={6} xl={3}>\n                  <div className=\"p-2 text-center\">\n                    <i className=\"mdi mdi-currency-usd text-success mdi-24px\"></i>\n                    <h3>\n                      $\n                      <span>\n                        <CountUp duration={1} end={7841} />\n                      </span>\n                    </h3>\n                    <p className=\"text-muted font-15 mb-0\">Income Amounts</p>\n                  </div>\n                </Col>\n                <Col sm={6} xl={3}>\n                  <div className=\"p-2 text-center\">\n                    <i className=\"mdi mdi-account-group text-danger mdi-24px\"></i>\n                    <h3>\n                      <span>\n                        <CountUp duration={1} end={6521} />\n                      </span>\n                    </h3>\n                    <p className=\"text-muted font-15 mb-0\">Total Users</p>\n                  </div>\n                </Col>\n                <Col sm={6} xl={3}>\n                  <div className=\"p-2 text-center\">\n                    <i className=\"mdi mdi-eye-outline text-blue mdi-24px\"></i>\n                    <h3>\n                      <span data-plugin=\"counterup\">\n                        <CountUp duration={1} end={325} />\n                      </span>\n                      k\n                    </h3>\n                    <p className=\"text-muted font-15 mb-0\">Total Visits</p>\n                  </div>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* StatisticsWidget3 */}\n      <Row>\n        <Col md={6} xl={3}>\n          <StatisticsWidget3\n            title=\"Income status\"\n            stats=\"31570\"\n            trend={{\n              label: \"Total income\",\n              value: \"$22506\",\n              icon: \"fa-caret-up\",\n              variant: \"success\",\n              trendStats: \"10.25%\",\n            }}\n            counterOptions={{\n              prefix: \"$\",\n            }}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget3\n            title=\"Sales Status\"\n            stats=\"683\"\n            trend={{\n              label: \"Total sales\",\n              value: \"2398\",\n              icon: \"fa-caret-down\",\n              variant: \"danger\",\n              trendStats: \"7.85%\",\n            }}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget3\n            title=\"Recent Users\"\n            stats=\"3.2\"\n            trend={{\n              label: \"Total users\",\n              value: \"121 M\",\n              icon: \"fa-caret-up\",\n              variant: \"success\",\n              trendStats: \"3.64%\",\n            }}\n            counterOptions={{\n              suffix: \"M\",\n              decimals: 1,\n            }}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget3\n            title=\"Total Revenue\"\n            stats=\"68541\"\n            trend={{\n              label: \"Total revenue\",\n              value: \"$1.2 M\",\n              icon: \"fa-caret-up\",\n              variant: \"success\",\n              trendStats: \"17.48%\",\n            }}\n            counterOptions={{\n              prefix: \"$\",\n            }}\n          />\n        </Col>\n      </Row>\n      {/* StatisticsWidget2 */}\n      <Row>\n        <Col md={6} xl={3}>\n          <StatisticsWidget2\n            variant=\"blue\"\n            description=\"Income status\"\n            stats=\"12145\"\n            icon=\"fe-aperture\"\n            progress={60}\n            counterOptions={{\n              prefix: \"$\",\n            }}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget2\n            variant=\"success\"\n            description=\"January's Sales\"\n            stats=\"1576\"\n            icon=\"fe-shopping-cart\"\n            progress={49}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget2\n            variant=\"warning\"\n            description=\"Payouts\"\n            stats=\"8947\"\n            icon=\"fe-bar-chart-2\"\n            progress={18}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget2\n            variant=\"info\"\n            description=\"Available Stores\"\n            stats=\"178\"\n            icon=\"fe-cpu\"\n            progress={74}\n          />\n        </Col>\n      </Row>\n      {/* StatisticsWidget4 */}\n      <Row>\n        <Col md={6} xl={3}>\n          <StatisticsWidget4\n            avatar={avatar1}\n            name=\"Thelma Fridley\"\n            position=\"Admin User\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget4\n            avatar={avatar2}\n            name=\"Chandler Hervieux\"\n            position=\"Manager\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget4\n            avatar={avatar3}\n            name=\"Percy Demers\"\n            position=\"Director\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget4\n            avatar={avatar4}\n            name=\"Antoine Masson\"\n            position=\"Premium User\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h4 className=\"mb-4\">Other Widgets</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col xl={4}>\n          <Messages />\n        </Col>\n        <Col xl={4}>\n          <ChatList messages={chatMessages} />\n        </Col>\n        <Col xl={4}>\n          <TodoList addTodo={true} height={\"310px\"} />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <h4 className=\"mb-4\">Chart Widgets</h4>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={4}>\n          <StatisticsChartWidget\n            icon=\"fe-aperture\"\n            variant=\"warning\"\n            stats=\"8145\"\n            description=\"Income Status\"\n            counterOptions={{\n              prefix: \"$\",\n            }}\n            chartConfig={{\n              apxOptions: {\n                chart: {\n                  sparkline: {\n                    enabled: true,\n                  },\n                },\n                plotOptions: {\n                  bar: {\n                    columnWidth: \"95%\",\n                  },\n                },\n                xaxis: {\n                  crosshairs: {\n                    width: 1,\n                  },\n                },\n                stroke: {\n                  width: 0,\n                  curve: \"smooth\",\n                },\n                fill: {\n                  colors: [\"#f7b84b\", \"#ebeff2\"],\n                },\n                tooltip: {\n                  enabled: false,\n                },\n              },\n              apxSeries: [\n                { data: [5, 9, 5, 7, 5, 9, 2, 3, 2, 7, 5, 9, 5, 7] },\n                { data: [3, 6, 9, 3, 2, 7, 1, 5, 9, 2, 3, 6, 9] },\n              ],\n              type: \"bar\",\n              height: 55,\n            }}\n          />\n        </Col>\n        <Col xl={4}>\n          <StatisticsChartWidget\n            icon=\"fe-shopping-bag\"\n            variant=\"blue\"\n            stats=\"367\"\n            description=\"Sales Status\"\n            chartConfig={{\n              apxOptions: {\n                chart: {\n                  type: \"line\",\n                  height: 50,\n                  width: \"100%\",\n                  toolbar: {\n                    show: false,\n                  },\n                  sparkline: {\n                    enabled: true,\n                  },\n                },\n                stroke: {\n                  curve: \"straight\",\n                  width: 1,\n                },\n                colors: [\"#4a81d4\"],\n                xaxis: {\n                  labels: {\n                    show: false,\n                  },\n                  axisTicks: {\n                    show: false,\n                  },\n                },\n                yaxis: {\n                  labels: {\n                    show: false,\n                  },\n                },\n                legend: {\n                  show: false,\n                },\n                tooltip: {\n                  enabled: false,\n                },\n              },\n              apxSeries: [{ data: [5, 3, 9, 6, 5, 9, 7, 3, 5, 2] }],\n              type: \"line\",\n              height: 50,\n            }}\n          />\n        </Col>\n        <Col xl={4}>\n          <StatisticsChartWidget\n            icon=\"fe-users\"\n            variant=\"success\"\n            stats=\"7204\"\n            description=\"Recent Users\"\n            chartConfig={{\n              apxOptions: {\n                chart: {\n                  type: \"area\",\n                  height: 50,\n                  width: \"100%\",\n                  toolbar: {\n                    show: false,\n                  },\n                  sparkline: {\n                    enabled: true,\n                  },\n                },\n                stroke: {\n                  curve: \"straight\",\n                  width: 1,\n                },\n                fill: {\n                  type: \"solid\",\n                },\n                colors: [\"#1abc9c\"],\n                xaxis: {\n                  labels: {\n                    show: false,\n                  },\n                  axisTicks: {\n                    show: false,\n                  },\n                },\n                yaxis: {\n                  labels: {\n                    show: false,\n                  },\n                },\n                legend: {\n                  show: false,\n                },\n                tooltip: {\n                  enabled: false,\n                },\n              },\n              apxSeries: [{ data: [3, 5, 2, 9, 7, 2, 5, 3, 9, 6, 5, 9, 7] }],\n              type: \"area\",\n              height: 50,\n            }}\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={4}>\n          <StatisticsChartWidget2\n            title={\"Total Revenue\"}\n            color={\"#f1556c\"}\n            data={60}\n            totalSales={\"$178\"}\n            target={\"$12k\"}\n            lastWeek={\"$2487\"}\n            lastMonth={\"$14.5k\"}\n          />\n        </Col>\n        <Col xl={4}>\n          <StatisticsChartWidget2\n            title={\"Sales Status\"}\n            color={\"#6658dd\"}\n            data={37}\n            totalSales={\"29\"}\n            target={\"480\"}\n            lastWeek={\"136\"}\n            lastMonth={\"514\"}\n          />\n        </Col>\n        <Col xl={4}>\n          <StatisticsChartWidget2\n            title={\"Recent Users\"}\n            color={\"#1abc9c\"}\n            data={81}\n            totalSales={\"72\"}\n            target={\"8k\"}\n            lastWeek={\"2.5k\"}\n            lastMonth={\"10.2k\"}\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={4}>\n          <SalesChart />\n        </Col>\n        <Col xl={4}>\n          <IncomeChart />\n        </Col>\n        <Col xl={4}>\n          <UsersChart />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Widgets;\n"],"names":["ChatItemAvatar","_ref","userAvatar","postedOn","_jsx","_Fragment","children","_jsxs","className","src","alt","ChatItemText","_ref2","userName","text","chatItemDefaultProps","placement","PropTypes","ChatItem","_ref3","classNames","odd","defaultProps","ChatForm","_ref4","onNewMessagesPosted","schemaResolver","yupResolver","yup","shape","newMessage","required","methods","useForm","resolver","handleSubmit","register","control","errors","formState","reset","name","id","onSubmit","values","message","Row","Col","FormInput","type","placeholder","props","_useState","useState","messages","_useState2","_slicedToArray","setMessages","Card","Dropdown","align","as","SimpleBar","style","maxHeight","width","map","i","userPic","concat","length","profilePic","Date","getHours","getMinutes","CountUp","_objectSpread","duration","end","OverlayTrigger","overlay","Tooltip","avatar","position","addTodo","height","addTodos","done","todoData","setTodoData","newTodo","toggleTodo","todoItem","index","newTodoData","todo","Object","assign","filter","item","Button","variant","onClick","String","checked","onChange","htmlFor","e","target","value","_toConsumableArray","icon","stats","counterOptions","description","chartConfig","Chart","options","series","title","color","data","totalSales","lastWeek","lastMonth","apexOpts","chart","plotOptions","radialBar","hollow","size","dataLabels","show","fontSize","offsetY","formatter","val","colors","stroke","lineCap","apexData","dir","ChartStatistics","chatMessages","profilePic2","React","PageTitle","breadCrumbItems","label","path","active","md","xl","StatisticsWidget","prefix","suffix","decimals","sm","StatisticsWidget3","trend","trendStats","StatisticsWidget2","progress","StatisticsWidget4","avatar1","avatar2","avatar3","avatar4","Messages","ChatList","TodoList","StatisticsChartWidget","apxOptions","sparkline","enabled","bar","columnWidth","xaxis","crosshairs","curve","fill","tooltip","apxSeries","toolbar","labels","axisTicks","yaxis","legend","StatisticsChartWidget2","SalesChart","IncomeChart","UsersChart"],"sourceRoot":""}