{"version":3,"file":"static/js/4726.b6ab3cba.chunk.js","mappings":"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","sources":["components/PageTitle.tsx","components/PricingCard.tsx","pages/other/Pricing.tsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">UBold</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\nexport interface PlanItemsTypes {\n  id: number;\n  name: string;\n  icon: string;\n  price: number;\n  duration: string;\n  features: Array<string>;\n  isRecommended: boolean;\n}\n\ninterface PricingCardProps {\n  plans: PlanItemsTypes[];\n  containerClass?: string;\n  pricingCardClass?: string;\n}\n\nconst PricingCard = ({\n  plans,\n  containerClass,\n  pricingCardClass,\n}: PricingCardProps) => {\n  return (\n    <>\n      <Row className={containerClass}>\n        {(plans || []).map((plan, idx) => {\n          return (\n            <Col md={4} key={idx}>\n              <Card\n                className={classNames(\n                  \"card-pricing\",\n                  {\n                    \"card-pricing-recommended\": plan.isRecommended,\n                  },\n                  pricingCardClass\n                )}\n              >\n                <Card.Body className=\"text-center\">\n                  <p className=\"card-pricing-plan-name fw-bold text-uppercase\">\n                    {plan.name}\n                  </p>\n                  <span\n                    className={classNames(\n                      \"card-pricing-icon\",\n                      plan.isRecommended ? \"text-white\" : \"text-primary\"\n                    )}\n                  >\n                    <i className={plan.icon}></i>\n                  </span>\n                  <h2\n                    className={classNames(\"card-pricing-price\", {\n                      \"text-white\": plan.isRecommended,\n                    })}\n                  >\n                    ${plan.price} <span>/ {plan.duration}</span>\n                  </h2>\n                  <ul className=\"card-pricing-features\">\n                    {(plan.features || []).map((feature, idx1) => {\n                      return <li key={idx1}>{feature}</li>;\n                    })}\n                  </ul>\n                  <button\n                    className={classNames(\n                      \"btn\",\n                      \"waves-effect\",\n                      \"waves-light\",\n                      \"mt-4\",\n                      \"mb-2\",\n                      \"width-sm\",\n                      plan.isRecommended ? \"btn-light\" : \"btn-primary\"\n                    )}\n                  >\n                    Sign Up\n                  </button>\n                </Card.Body>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </>\n  );\n};\n\nexport default PricingCard;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport PricingCard, { PlanItemsTypes } from \"../../components/PricingCard\";\n\n// Pricing component\nconst Pricing = () => {\n  const plans: PlanItemsTypes[] = [\n    {\n      id: 1,\n      name: \"Professional Pack\",\n      icon: \"fe-users\",\n      price: 19,\n      duration: \"Month\",\n      features: [\n        \"10 GB Storage\",\n        \"500 GB Bandwidth\",\n        \"No Domain\",\n        \"1 User\",\n        \"Email Support\",\n        \"24x7 Support\",\n      ],\n      isRecommended: false,\n    },\n    {\n      id: 2,\n      name: \"Business Pack\",\n      icon: \"fe-award\",\n      price: 29,\n      duration: \"Month\",\n      features: [\n        \"50 GB Storage\",\n        \"900 GB Bandwidth\",\n        \"2 Domain\",\n        \"10 User\",\n        \"Email Support\",\n        \"24x7 Support\",\n      ],\n      isRecommended: true,\n    },\n    {\n      id: 3,\n      name: \"Enterprise Pack\",\n      icon: \"fe-aperture\",\n      price: 39,\n      duration: \"Month\",\n      features: [\n        \"100 GB Storage\",\n        \"Unlimited Bandwidth\",\n        \"10 Domain\",\n        \"Unlimited Users\",\n        \"Email Support\",\n        \"24x7 Support\",\n      ],\n      isRecommended: false,\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Extra Pages\", path: \"/pages/pricing\" },\n          { label: \"Pricing\", path: \"/pages/pricing\", active: true },\n        ]}\n        title={\"Pricing\"}\n      />\n\n      <Row className=\"justify-content-center\">\n        <Col xl={10}>\n          <div className=\"text-center\">\n            <h3 className=\"mb-2\">\n              Our <b>Plans</b>\n            </h3>\n            <p className=\"text-muted w-50 m-auto\">\n              We have plans and prices that fit your business perfectly. Make\n              your client site a success with our products.\n            </p>\n          </div>\n\n          {/* pricing cards */}\n          <PricingCard plans={plans} containerClass={\"my-3\"} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Pricing;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","href","map","item","index","active","label","path","_ref","plans","containerClass","pricingCardClass","_Fragment","plan","idx","md","Card","classNames","isRecommended","name","icon","price","duration","features","feature","idx1","React","PageTitle","breadCrumbItems","title","xl","PricingCard","id","CardImg","ref","bsPrefix","variant","_ref$as","as","Component","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_objectSpread","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","arguments","length","undefined","_ref$displayName","BsComponent","_ref2","_ref2$as","Tag","resolvedPrefix","p"],"sourceRoot":""}