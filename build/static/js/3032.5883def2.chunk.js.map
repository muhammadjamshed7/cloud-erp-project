{"version":3,"file":"static/js/3032.5883def2.chunk.js","mappings":"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","sources":["layouts/TwoColumn/IconMenu.tsx","layouts/TwoColumn/MainMenu.tsx","layouts/TwoColumn/LeftSidebar.tsx","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SimpleBar from \"simplebar-react\";\nimport FeatherIcon from \"feather-icons-react\";\nimport classNames from \"classnames\";\n\nimport logo from \"../../assets/images/logo-sm.png\";\n\n/**\n * Renders the application menu\n */\ninterface Item {\n  key: string;\n  label: string;\n  isTitle?: boolean;\n  icon?: string;\n  url?: string;\n  badge?: {\n    variant: string;\n    text: string;\n  };\n  parentKey?: string;\n  target?: string;\n  children?: Item[];\n}\n\ninterface AppMenuProps {\n  menuItems: Item[];\n  toggleMenu: (item: Item, show: boolean) => void;\n  activeMenuItems: string[];\n}\n\nconst IconMenu = ({ menuItems, toggleMenu, activeMenuItems }: AppMenuProps) => {\n  const onMenuItemClick = (e: any, menuItem: Item) => {\n    const hasChildren = menuItem.children! && menuItem.children.length;\n    if (hasChildren) {\n      e.preventDefault();\n    }\n    toggleMenu(menuItem, true);\n  };\n\n  return (\n    <>\n      <div className=\"sidebar-icon-menu\">\n        <div className=\"logo-box\">\n          <Link to=\"/\">\n            <img src={logo} alt=\"small logo\" height=\"28\" />\n          </Link>\n        </div>\n        <SimpleBar className=\"h-100\">\n          <ul className=\"menu\" id=\"two-col-sidenav-main\">\n            {(menuItems || []).map((item, index) => {\n              const activeParent =\n                activeMenuItems &&\n                activeMenuItems.length &&\n                activeMenuItems[activeMenuItems.length - 1] === item[\"key\"];\n              return (\n                <li key={index} className=\"menu-item nav-link-ref\">\n                  <Link\n                    className={classNames(\"menu-link nav-link-ref\", {\n                      active: activeParent,\n                    })}\n                    to={item.children! ? \"/#\" : item.url!}\n                    data-bs-title={item.label}\n                    data-bs-toggle=\"tooltip\"\n                    data-bs-placement=\"right\"\n                    data-bs-trigger=\"hover\"\n                    data-menu-key={item.key}\n                    onClick={(e: any) => {\n                      onMenuItemClick(e, item);\n                    }}\n                  >\n                    <span className=\"menu-icon\">\n                      <FeatherIcon icon={item.icon} />\n                    </span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </SimpleBar>\n      </div>\n    </>\n  );\n};\n\nexport default IconMenu;\n","import React, { useEffect, useState } from \"react\";\nimport SimpleBar from \"simplebar-react\";\nimport { Collapse } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// constants\nimport { MenuItemTypes } from \"../../constants/menu\";\nimport { LayoutTypes } from \"../../constants/layout\";\n\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../redux/store\";\n\n// images\nimport logoSm from \"../../assets/images/logo-sm.png\";\nimport logoDark from \"../../assets/images/logo-dark.png\";\nimport logoDark2 from \"../../assets/images/logo-dark-2.png\";\nimport logoLight from \"../../assets/images/logo-light.png\";\nimport logoLight2 from \"../../assets/images/logo-light-2.png\";\n\ninterface SubMenus {\n  item: MenuItemTypes;\n  linkClassName?: string;\n  subMenuClassNames?: string;\n  activeMenuItems?: Array<string>;\n  toggleMenu?: (item: any, status: boolean) => void;\n  className?: string;\n}\n\nconst MenuItemWithChildren = ({\n  item,\n  linkClassName,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu,\n}: SubMenus) => {\n  const [open, setOpen] = useState<boolean>(\n    activeMenuItems!.includes(item.key)\n  );\n  //\n  useEffect(() => {\n    setOpen(activeMenuItems!.includes(item.key));\n    \n  }, [activeMenuItems, item]);\n\n  const toggleMenuItem = (e: any) => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return (\n    <>\n      <li\n        className={classNames(\"menu-item\", \"nav-link-ref\", {\n          \"menuitem-active\": open,\n        })}\n      >\n        <Link\n          to=\"#\"\n          onClick={toggleMenuItem}\n          data-menu-key={item.key}\n          aria-expanded={open}\n          className={classNames(\"menu-link justify-content-between\", linkClassName, {\n            \"menuitem-active\": activeMenuItems!.includes(item.key)\n              ? \"active\"\n              : \"\",\n          })}\n        >\n          <span className=\"menu-text\"> {item.label} </span>\n          {!item.badge ? (\n            <span className=\"menu-arrow\"></span>\n          ) : (\n            <span\n              className={`badge bg-${item.badge.variant} rounded-pill float-end`}\n            >\n              {item.badge.text}\n            </span>\n          )}\n        </Link>\n        <Collapse in={open}>\n          <div>\n            <ul className={classNames(subMenuClassNames)}>\n              {(item.children || []).map((child, i) => {\n                return (\n                  <React.Fragment key={i}>\n                    {child.children ? (\n                      <>\n                        {/* parent */}\n                        <MenuItemWithChildren\n                          item={child}\n                          linkClassName={\n                            activeMenuItems!.includes(child.key) ? \"active\" : \"\"\n                          }\n                          activeMenuItems={activeMenuItems}\n                          subMenuClassNames=\"sub-menu\"\n                          toggleMenu={toggleMenu}\n                        />\n                      </>\n                    ) : (\n                      <>\n                        {/* child */}\n                        <MenuItem\n                          item={child}\n                          className={\n                            activeMenuItems!.includes(child.key)\n                              ? \"menuitem-active\"\n                              : \"\"\n                          }\n                          linkClassName={\n                            activeMenuItems!.includes(child.key) ? \"active\" : \"\"\n                          }\n                        />\n                      </>\n                    )}\n                  </React.Fragment>\n                );\n              })}\n            </ul>\n          </div>\n        </Collapse>\n      </li>\n    </>\n  );\n};\n\nconst MenuItem = ({ item, className, linkClassName }: SubMenus) => {\n  return (\n    <>\n      <li className={classNames(\"menu-item\", className)}>\n        <MenuItemLink item={item} className={linkClassName} />\n      </li>\n    </>\n  );\n};\n\nconst MenuItemLink = ({ item, className }: SubMenus) => {\n  return (\n    <Link\n      to={item.url!}\n      target={item.target}\n      className={classNames(\"menu-link nav-link-ref justify-content-between\", className)}\n      data-menu-key={item.key}\n    >\n      <span className=\"menu-text\"> {item.label} </span>\n      {item.badge && (\n        <span className={`badge bg-${item.badge.variant} float-end`}>\n          {item.badge.text}\n        </span>\n      )}\n    </Link>\n  );\n};\n\ninterface MainMenuProps {\n  menuItems: MenuItemTypes[];\n  toggleMenu: (item: MenuItemTypes, show: boolean) => void;\n  activeMenuItems: string[];\n}\n\nconst MainMenu = ({\n  menuItems,\n  toggleMenu,\n  activeMenuItems,\n}: MainMenuProps) => {\n  //\n\n  const { layoutType } = useSelector((state: RootState) => ({\n    layoutType: state.Layout.layoutType,\n    leftSideBarType: state.Layout.leftSideBarType,\n  }));\n\n  return (\n    <>\n      {activeMenuItems && (\n        <div className=\"app-menu\">\n          <div className=\"logo-box\">\n            <Link to=\"/\" className=\"logo logo-dark text-center\">\n              <span className=\"logo-sm\">\n                <img src={logoSm} alt=\"\" height=\"22\" />\n              </span>\n              <span className=\"logo-lg\">\n                <img\n                  src={\n                    layoutType === LayoutTypes.LAYOUT_TWO_COLUMN\n                      ? logoDark2\n                      : logoDark\n                  }\n                  alt=\"\"\n                  height=\"20\"\n                />\n              </span>\n            </Link>\n            <Link to=\"/\" className=\"logo logo-light text-center\">\n              <span className=\"logo-sm\">\n                <img src={logoSm} alt=\"\" height=\"22\" />\n              </span>\n              <span className=\"logo-lg\">\n                <img\n                  src={\n                    layoutType === LayoutTypes.LAYOUT_TWO_COLUMN\n                      ? logoLight2\n                      : logoLight\n                  }\n                  alt=\"\"\n                  height=\"20\"\n                />\n              </span>\n            </Link>\n          </div>\n\n          <div id=\"two-col-menu\" className=\"h-100 menuitem-active\">\n            <SimpleBar style={{ maxHeight: \"100%\" }}>\n              {(menuItems || []).map((menuItem, key) => {\n                const activeParent =\n                  activeMenuItems &&\n                  activeMenuItems.length &&\n                  activeMenuItems[activeMenuItems.length - 1] ===\n                  menuItem[\"key\"];\n                return (\n                  <div\n                    key={key}\n                    className={classNames(\"twocolumn-menu-item\", {\n                      \"d-block\": activeParent,\n                    })}\n                    id={menuItem.key}\n                  >\n                    {/* <div className=\"title-box\"> */}\n                    <ul className=\"menu\">\n                      {menuItem.isTitle && (\n                        <li className=\"menu-title\">{menuItem.label}</li>\n                      )}\n                      {(menuItem.children || []).map((item, idx) => {\n                        return (\n                          <React.Fragment key={idx}>\n                            {item.children ? (\n                              <MenuItemWithChildren\n                                item={item}\n                                toggleMenu={toggleMenu}\n                                subMenuClassNames=\"sub-menu\"\n                                activeMenuItems={activeMenuItems}\n                                linkClassName=\"\"\n                              />\n                            ) : (\n                              <MenuItem\n                                item={item}\n                                linkClassName=\"\"\n                                className={\n                                  activeMenuItems!.includes(item.key)\n                                    ? \"menuitem-active\"\n                                    : \"\"\n                                }\n                              />\n                            )}\n                          </React.Fragment>\n                        );\n                      })}\n                    </ul>\n                    {/* </div> */}\n                  </div>\n                );\n              })}\n            </SimpleBar>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MainMenu;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// actions\nimport { changeSidebarType } from \"../../redux/actions\";\n\n//constants\nimport { SideBarTypes } from \"../../constants/layout\";\n\n// store\nimport { RootState, AppDispatch } from \"../../redux/store\";\n\nimport {\n  findAllParent,\n  findMenuItem,\n  getTwoColumnMenuItems,\n} from \"../../helpers/menu\";\n\n// components\nimport IconMenu from \"./IconMenu\";\nimport MainMenu from \"./MainMenu\";\n\ninterface Item {\n  key: string;\n  label: string;\n  isTitle?: boolean;\n  icon?: string;\n  url?: string;\n  badge?: {\n    variant: string;\n    text: string;\n  };\n  parentKey?: string;\n  target?: string;\n  children?: Item[];\n}\n\nconst LeftSidebar = () => {\n  const location = useLocation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const menuItems = getTwoColumnMenuItems();\n\n  const [activeMenuItems, setActiveMenuItems] = useState<Array<string>>([]);\n\n  const {\n    leftSideBarType,\n  } = useSelector((state: RootState) => ({\n    leftSideBarType: state.Layout.leftSideBarType,\n  }));\n\n  /*\n   * toggle the menus\n   */\n  const toggleMenu = (menuItem: Item, show: boolean) => {\n    if (menuItem.children) {\n      if (leftSideBarType === \"condensed\")\n        dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n    }\n\n    if (show)\n      setActiveMenuItems([\n        menuItem[\"key\"],\n        ...findAllParent(menuItems, menuItem),\n      ]);\n  };\n\n  /**\n   * activate the menuitems\n   */\n\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById(\"sidebar-content\");\n    let matchingMenuItem = null;\n    if (div) {\n      let items: any = div.getElementsByClassName(\"nav-link-ref\");\n      for (let i = 0; i < items.length; ++i) {\n        let trimmedURL = location?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\");\n        if (trimmedURL === items[i]?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\")) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        const mid = matchingMenuItem.getAttribute(\"data-menu-key\");\n        const activeMt = findMenuItem(menuItems, mid);\n        if (activeMt) {\n          setActiveMenuItems([\n            activeMt[\"key\"],\n            ...findAllParent(menuItems, activeMt),\n          ]);\n        }\n      }\n    }\n  }, [location, menuItems]);\n\n  useEffect(() => {\n    activeMenu();\n  }, [activeMenu]);\n\n  useEffect(() => {\n    if (\n      activeMenuItems &&\n      activeMenuItems.length &&\n      activeMenuItems.length === 1\n    ) {\n      const parentLevel0 = findMenuItem(menuItems, activeMenuItems[0]);\n      const hasChildren =\n        parentLevel0 &&\n        parentLevel0[\"children\"] &&\n        parentLevel0[\"children\"].length;\n\n      if (\n        !hasChildren &&\n        (leftSideBarType === \"default\" || leftSideBarType === \"compact\")\n      ) {\n        dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n      } else {\n        dispatch(changeSidebarType(leftSideBarType));\n      }\n    }\n  }, [activeMenuItems, leftSideBarType, dispatch, menuItems]);\n\n  return (\n    <>\n      <div className=\"left-side-menu show\" id=\"sidebar-content\">\n        <IconMenu\n          menuItems={getTwoColumnMenuItems()}\n          toggleMenu={toggleMenu}\n          activeMenuItems={activeMenuItems}\n        />\n\n        <MainMenu\n          menuItems={menuItems}\n          activeMenuItems={activeMenuItems}\n          toggleMenu={toggleMenu}\n        />\n        <div className=\"clearfix\" />\n      </div>\n    </>\n  );\n};\n\nexport default LeftSidebar;\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"],"names":["_ref","menuItems","toggleMenu","activeMenuItems","_jsx","_Fragment","children","_jsxs","className","Link","to","src","logo","alt","height","SimpleBar","id","map","item","index","activeParent","length","classNames","active","url","label","key","onClick","e","menuItem","preventDefault","onMenuItemClick","FeatherIcon","icon","MenuItemWithChildren","linkClassName","subMenuClassNames","_useState","useState","includes","_useState2","_slicedToArray","open","setOpen","useEffect","status","badge","concat","variant","text","Collapse","in","child","i","React","MenuItem","_ref2","MenuItemLink","_ref3","target","_ref4","layoutType","useSelector","state","Layout","leftSideBarType","logoSm","LayoutTypes","logoDark2","logoDark","logoLight2","logoLight","style","maxHeight","isTitle","idx","location","useLocation","dispatch","useDispatch","getTwoColumnMenuItems","setActiveMenuItems","show","changeSidebarType","SideBarTypes","_toConsumableArray","findAllParent","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByClassName","_location$pathname","_items$i","_items$i$pathname","pathname","replaceAll","process","mid","getAttribute","activeMt","findMenuItem","parentLevel0","hasChildren","IconMenu","MainMenu","_len","arguments","funcs","Array","_key","filter","f","reduce","acc","Error","_len2","args","_key2","apply","this","MARGINS","width","getDefaultDimensionValue","dimension","elem","value","toUpperCase","slice","margins","parseInt","css","collapseStyles","_collapseStyles","_defineProperty","EXITED","EXITING","ENTERING","ENTERED","defaultProps","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","ref","onEnter","onEntering","onEntered","onExit","onExiting","_ref$dimension","_ref$getDimensionValu","props","_objectWithoutProperties","_excluded","computedDimension","handleEnter","useMemo","createChainedFunction","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","TransitionWrapper","_objectSpread","addEndListener","transitionEndListener","role","childRef","innerProps"],"sourceRoot":""}