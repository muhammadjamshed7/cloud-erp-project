{"version":3,"file":"static/js/6916.b15772e2.chunk.js","mappings":"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","sources":["pages/uikit/DragDrop.tsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { ReactSortable } from \"react-sortablejs\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nimport user1 from \"../../assets/images/users/user-2.jpg\";\nimport user2 from \"../../assets/images/users/user-3.jpg\";\nimport user3 from \"../../assets/images/users/user-4.jpg\";\nimport user4 from \"../../assets/images/users/user-5.jpg\";\nimport user5 from \"../../assets/images/users/user-6.jpg\";\nimport user6 from \"../../assets/images/users/user-7.jpg\";\nimport user7 from \"../../assets/images/users/user-1.jpg\";\n\ninterface ProjectType {\n  id: number;\n  title: string;\n  desc: string;\n  created_on: string;\n  announced_on: string;\n  user: {\n    profile: string;\n    name: string;\n  };\n}\n\ninterface TeamMemberType {\n  id: number;\n  name: string;\n  avatar: string;\n  position: string;\n  desc?: string;\n}\n\nconst MovableCard = ({ item }: { item: ProjectType }) => {\n  return (\n    <Card\n      className={classNames(\"mb-0\", \"mt-3\", \"border\", {\n        \"border-success\": item.announced_on === \"Latest\",\n      })}\n    >\n      <Card.Body>\n        <span\n          className={classNames(\n            \"badge\",\n            \"float-end\",\n            item.announced_on === \"Latest\"\n              ? \"badge-soft-success\"\n              : \"badge-soft-secondary\"\n          )}\n        >\n          {item.announced_on}\n        </span>\n        <h5 className=\"mt-0\">\n          <a\n            href=\"/\"\n            className={classNames(\n              item.announced_on === \"Latest\" ? \"text-success\" : \"text-secondary\"\n            )}\n          >\n            {item.title}\n          </a>\n        </h5>\n\n        <p>{item.desc}</p>\n        <div className=\"clearfix\"></div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <Link to=\"#\" className=\"text-reset\">\n              <img\n                src={item.user.profile}\n                alt=\"task-user\"\n                className=\"avatar-sm img-thumbnail rounded-circle\"\n              />\n              <span className=\"d-none d-md-inline-block ms-1 fw-semibold\">\n                {item.user.name}\n              </span>\n            </Link>\n          </div>\n          <div className=\"col-auto\">\n            <div className=\"text-end text-muted\">\n              <p className=\"font-13 mt-2 mb-0\">\n                <i className=\"mdi mdi-calendar\"></i> {item.created_on}\n              </p>\n            </div>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst MovableCard2 = ({ item }: { item: TeamMemberType }) => {\n  return (\n    <>\n      <Card className=\"border rounded\">\n        <Card.Body>\n          <div className=\"d-flex align-itames-start\">\n            <img\n              src={item.avatar}\n              alt=\"\"\n              className=\"me-3 d-none d-sm-block avatar-sm rounded-circle\"\n            />\n            <div className=\"w-100\">\n              <h5 className=\"mb-1 mt-0\">{item.name}</h5>\n              <p> {item.position} </p>\n              <p className=\"mb-0 text-muted\">\n                <span className=\"fst-italic\">\n                  <b>\"</b>\n                  {item.desc}\n                </span>\n              </p>\n            </div>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst MovableCard3 = ({ item }: { item: TeamMemberType }) => {\n  return (\n    <>\n      <Card className=\"mb-0 mt-2\">\n        <Card.Body>\n          <div className=\"d-flex align-itames-start\">\n            <img\n              src={item.avatar}\n              alt=\"\"\n              className=\"me-3 d-none d-sm-block avatar-sm rounded-circle\"\n            />\n            <div className=\"w-100\">\n              <h5 className=\"mb-1 mt-0\">{item.name}</h5>\n              <p className=\"mb-0\"> {item.position} </p>\n            </div>\n            <span className=\"dragula-handle\"></span>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\n// DragDrop\nconst DragDrop = () => {\n  const [items, setItems] = useState<ProjectType[]>([\n    {\n      id: 1,\n      title: \"iOS App home page\",\n      desc: \"There are many variations of passages of Lorem Ipsum available.\",\n      created_on: \"Oct 16, 2018\",\n      announced_on: \"03 Nov\",\n      user: {\n        profile: user1,\n        name: \"David Muth\",\n      },\n    },\n    {\n      id: 2,\n      title: \"Invite user to a project\",\n      desc: \"There are many variations of passages of Lorem Ipsum available.\",\n      created_on: \"Oct 16, 2018\",\n      announced_on: \"Latest\",\n      user: {\n        profile: user2,\n        name: \"Dan Statler\",\n      },\n    },\n    {\n      id: 3,\n      title: \"Topnav layout design\",\n      desc: \"There are many variations of passages of Lorem Ipsum available.\",\n      created_on: \"Oct 16, 2018\",\n      announced_on: \"New\",\n      user: {\n        profile: user3,\n        name: \"Raleigh Aragon\",\n      },\n    },\n    {\n      id: 4,\n      title: \"Write a release note\",\n      desc: \"There are many variations of passages of Lorem Ipsum available.\",\n      created_on: \"Oct 16, 2018\",\n      announced_on: \"Latest\",\n      user: {\n        profile: user4,\n        name: \"Gary Rhode\",\n      },\n    },\n    {\n      id: 5,\n      title: \"Enable analytics tracking\",\n      desc: \"There are many variations of passages of Lorem Ipsum available.\",\n      created_on: \"Oct 16, 2018\",\n      announced_on: \"15 Jun\",\n      user: {\n        profile: user5,\n        name: \"Andres Preston\",\n      },\n    },\n    {\n      id: 6,\n      title: \"Kanban board design\",\n      desc: \"There are many variations of passages of Lorem Ipsum available.\",\n      created_on: \"Oct 16, 2018\",\n      announced_on: \"Latest\",\n      user: {\n        profile: user6,\n        name: \"Joseph Carson\",\n      },\n    },\n  ]);\n\n  const [team1, setTeam1] = useState<TeamMemberType[]>([\n    {\n      id: 1,\n      name: \"Louis K. Bond\",\n      avatar: user7,\n      position: \"Founder & CEO\",\n      desc: \"Disrupt pork belly poutine, asymmetrical tousled succulents selfies. You probably haven't heard of them tattooed master cleanse live-edge keffiyeh.\",\n    },\n    {\n      id: 2,\n      name: \"Dennis N. Cloutier\",\n      avatar: user1,\n      position: \"Software Engineer\",\n      desc: \"Disrupt pork belly poutine, asymmetrical tousled succulents selfies. You probably haven't heard of them tattooed master cleanse live-edge keffiyeh.\",\n    },\n    {\n      id: 3,\n      name: \"Susan J. Sander\",\n      avatar: user2,\n      position: \"Web Designer\",\n      desc: \"Disrupt pork belly poutine, asymmetrical tousled succulents selfies. You probably haven't heard of them tattooed master cleanse live-edge keffiyeh.\",\n    },\n  ]);\n\n  const [team2, setTeam2] = useState<TeamMemberType[]>([\n    {\n      id: 1,\n      name: \"James M. Short\",\n      avatar: user3,\n      position: \"Web Developer\",\n      desc: \"Disrupt pork belly poutine, asymmetrical tousled succulents selfies. You probably haven't heard of them tattooed master cleanse live-edge keffiyeh.\",\n    },\n    {\n      id: 2,\n      name: \"Gabriel J. Snyder\",\n      avatar: user4,\n      position: \"Business Analyst\",\n      desc: \"Disrupt pork belly poutine, asymmetrical tousled succulents selfies. You probably haven't heard of them tattooed master cleanse live-edge keffiyeh.\",\n    },\n    {\n      id: 3,\n      name: \"Louie C. Mason\",\n      avatar: user5,\n      position: \"Human Resources\",\n      desc: \"Disrupt pork belly poutine, asymmetrical tousled succulents selfies. You probably haven't heard of them tattooed master cleanse live-edge keffiyeh.\",\n    },\n  ]);\n\n  const [part1, setPart1] = useState<TeamMemberType[]>([\n    {\n      id: 1,\n      name: \"Louis K. Bond\",\n      avatar: user7,\n      position: \"Founder & CEO\",\n    },\n    {\n      id: 2,\n      name: \"Dennis N. Cloutier\",\n      avatar: user1,\n      position: \"Software Engineer\",\n    },\n    {\n      id: 3,\n      name: \"Susan J. Sander\",\n      avatar: user2,\n      position: \"Web Designer\",\n    },\n  ]);\n\n  const [part2, setPart2] = useState<TeamMemberType[]>([\n    {\n      id: 1,\n      name: \"James M. Short\",\n      avatar: user3,\n      position: \"Web Developer\",\n    },\n    {\n      id: 2,\n      name: \"Gabriel J. Snyder\",\n      avatar: user4,\n      position: \"Business Analyst\",\n    },\n    {\n      id: 3,\n      name: \"Louie C. Mason\",\n      avatar: user5,\n      position: \"Human Resources\",\n    },\n  ]);\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Extended UI\", path: \"/extended-ui/dragdrop\" },\n          {\n            label: \"Drag and Drop\",\n            path: \"/extended-ui/dragdrop\",\n            active: true,\n          },\n        ]}\n        title={\"Drag and Drop\"}\n      />\n\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title\">Simple Drag and Drop Example</h4>\n              <p className=\"text-muted font-14\">\n                Drag and drop cards in a list{\" \"}\n              </p>\n\n              <ReactSortable className=\"row\" list={items} setList={setItems}>\n                {(items || []).map((item, idx) => {\n                  return (\n                    <Col key={idx} md={4}>\n                      <MovableCard item={item} />\n                    </Col>\n                  );\n                })}\n              </ReactSortable>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title\">Move stuff between containers</h4>\n              <p className=\"text-muted font-14\">\n                Drag and drop cards between two containers\n              </p>\n\n              <Row>\n                <Col md={6}>\n                  <h5 className=\"mt-0 text-center\">Team One</h5>\n                  <ReactSortable\n                    group=\"teamList\"\n                    list={team1}\n                    setList={setTeam1}\n                    className=\"py-2\"\n                  >\n                    {(team1 || []).map((item, idx) => {\n                      return <MovableCard2 key={idx} item={item} />;\n                    })}\n                  </ReactSortable>\n                </Col>\n                <Col md={6}>\n                  <h5 className=\"mt-0 text-center\">Team Two</h5>\n                  <ReactSortable\n                    group=\"teamList\"\n                    list={team2}\n                    setList={setTeam2}\n                    className=\"py-2\"\n                  >\n                    {(team2 || []).map((item, idx) => {\n                      return <MovableCard2 key={idx} item={item} />;\n                    })}\n                  </ReactSortable>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title\">\n                Move stuff between containers using handle\n              </h4>\n              <p className=\"text-muted font-14\">\n                Drag and drop cards between two containers\n              </p>\n\n              <Row>\n                <Col md={6}>\n                  <div className=\"bg-light p-2 p-lg-4\">\n                    <h5 className=\"mt-0\">Part 1</h5>\n                    <ReactSortable\n                      group=\"teamList2\"\n                      handle=\".dragula-handle\"\n                      list={part1}\n                      setList={setPart1}\n                      className=\"py-2\"\n                    >\n                      {(part1 || []).map((item, idx) => {\n                        return <MovableCard3 key={idx} item={item} />;\n                      })}\n                    </ReactSortable>\n                  </div>\n                </Col>\n                <Col md={6}>\n                  <div className=\"bg-light p-2 p-lg-4\">\n                    <h5 className=\"mt-0\">Part 1</h5>\n                    <ReactSortable\n                      group=\"teamList2\"\n                      handle=\".dragula-handle\"\n                      list={part2}\n                      setList={setPart2}\n                      className=\"py-2\"\n                    >\n                      {(part2 || []).map((item, idx) => {\n                        return <MovableCard3 key={idx} item={item} />;\n                      })}\n                    </ReactSortable>\n                  </div>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default DragDrop;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["MovableCard","_ref","item","_jsx","Card","className","classNames","announced_on","children","_jsxs","href","title","desc","Link","to","src","user","profile","alt","name","created_on","MovableCard2","_ref2","_Fragment","avatar","position","MovableCard3","_ref3","_useState","useState","id","user1","user2","user3","user4","user5","user6","_useState2","_slicedToArray","items","setItems","_useState3","user7","_useState4","team1","setTeam1","_useState5","_useState6","team2","setTeam2","_useState7","_useState8","part1","setPart1","_useState9","_useState10","part2","setPart2","PageTitle","breadCrumbItems","label","path","active","Row","Col","ReactSortable","list","setList","map","idx","md","group","handle","CardImg","React","ref","bsPrefix","variant","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_objectSpread","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","arguments","length","undefined","_ref$displayName","BsComponent","_ref2$as","Tag","resolvedPrefix","p"],"sourceRoot":""}