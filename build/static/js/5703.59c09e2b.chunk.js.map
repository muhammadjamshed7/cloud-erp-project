{"version":3,"file":"static/js/5703.59c09e2b.chunk.js","mappings":"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","sources":["components/PageTitle.tsx","pages/uikit/Ribbons.tsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">UBold</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\ninterface RibbonProps {\n  label: string;\n  color: string;\n  direction?: string;\n}\n\nconst Ribbon1 = ({ label, color, direction }: RibbonProps) => {\n  return (\n    <Card className=\"ribbon-box\">\n      <Card.Body>\n        <div\n          className={classNames(\n            \"ribbon\",\n            \"ribbon-\" + color,\n            direction === \"left\" ? \"float-start\" : \"float-end\"\n          )}\n        >\n          <i className=\"mdi mdi-access-point me-1\"></i> {label}\n        </div>\n        <h5\n          className={classNames(\n            \"text-\" + color,\n            \"mt-0\",\n            direction === \"left\" ? \"float-end\" : \"float-start\"\n          )}\n        >\n          {label} Header\n        </h5>\n        <div className=\"ribbon-content\">\n          <p className=\"mb-0\">\n            Quisque nec turpis at urna dictum luctus. Suspendisse convallis\n            dignissim eros at volutpat. In egestas mattis dui. Aliquam mattis\n            dictum aliquet. Nulla sapien mauris, eleifend et sem ac, commodo\n            dapibus odio.\n          </p>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst Ribbon2 = ({ label, color }: RibbonProps) => {\n  return (\n    <Card className=\"ribbon-box\">\n      <Card.Body>\n        <div className={classNames(\"ribbon-two\", \"ribbon-two-\" + color)}>\n          <span>{label}</span>\n        </div>\n        <p className=\"mb-0\">\n          Quisque nec turpis at urna dictum luctus. Suspendisse convallis\n          dignissim eros at volutpat. In egestas mattis dui. Aliquam mattis\n          dictum aliquet. Nulla sapien mauris, eleifend et sem ac, commodo\n          dapibus odio. Vivamus pretium nec odio cursus elementum. Suspendisse\n          molestie ullamcorper ornare.\n        </p>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst Ribbons = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Base UI\", path: \"/ui/ribbons\" },\n          { label: \"Ribbons\", path: \"/ui/ribbons\", active: true },\n        ]}\n        title={\"Ribbons\"}\n      />\n\n      <Row>\n        <Col lg={4}>\n          <Ribbon1 label=\"Blue\" color=\"blue\" direction=\"left\" />\n        </Col>\n        <Col lg={4}>\n          <Ribbon1 label=\"Primary\" color=\"primary\" direction=\"right\" />\n        </Col>\n        <Col lg={4}>\n          <Ribbon1 label=\"Success\" color=\"success\" direction=\"right\" />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={4}>\n          <Ribbon1 label=\"Info\" color=\"info\" direction=\"left\" />\n        </Col>\n        <Col lg={4}>\n          <Ribbon1 label=\"Warning\" color=\"warning\" direction=\"right\" />\n        </Col>\n        <Col lg={4}>\n          <Ribbon1 label=\"Danger\" color=\"danger\" direction=\"right\" />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={4}>\n          <Ribbon1 label=\"Pink\" color=\"pink\" direction=\"left\" />\n        </Col>\n        <Col lg={4}>\n          <Ribbon1 label=\"Secondary\" color=\"secondary\" direction=\"right\" />\n        </Col>\n        <Col lg={4}>\n          <Ribbon1 label=\"Dark\" color=\"dark\" direction=\"right\" />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={4}>\n          <Ribbon2 label=\"Secondary\" color=\"secondary\" />\n        </Col>\n        <Col lg={4}>\n          <Ribbon2 label=\"Primary\" color=\"primary\" />\n        </Col>\n        <Col lg={4}>\n          <Ribbon2 label=\"Success\" color=\"success\" />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={4}>\n          <Ribbon2 label=\"Info\" color=\"info\" />\n        </Col>\n        <Col lg={4}>\n          <Ribbon2 label=\"Warning\" color=\"warning\" />\n        </Col>\n        <Col lg={4}>\n          <Ribbon2 label=\"Danger\" color=\"danger\" />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={4}>\n          <Ribbon2 label=\"Pink\" color=\"pink\" />\n        </Col>\n        <Col lg={4}>\n          <Ribbon2 label=\"Blue\" color=\"blue\" />\n        </Col>\n        <Col lg={4}>\n          <Ribbon2 label=\"Dark\" color=\"dark\" />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Ribbons;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","href","map","item","index","active","label","path","Ribbon1","_ref","color","direction","Card","classNames","Ribbon2","_ref2","React","PageTitle","breadCrumbItems","title","lg","CardImg","ref","bsPrefix","variant","_ref$as","as","Component","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_objectSpread","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","arguments","length","undefined","_ref$displayName","BsComponent","_ref2$as","Tag","resolvedPrefix","p"],"sourceRoot":""}